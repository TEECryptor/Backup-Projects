// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (4af66b7a).
//
// MSOUTL.tli
//
// Wrapper implementations for Win32 type library C:\\Program Files\\Microsoft Office\\Office10\\MSOUTL.OLB
// compiler-generated file created 07/06/06 at 16:40:32 - DO NOT EDIT!


//
// dispinterface Action wrapper method implementations
//

#pragma implementation_key(1)
inline Outlook::_ApplicationPtr Outlook::Action::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(2)
inline enum OlObjectClass Outlook::Action::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3)
inline Outlook::_NameSpacePtr Outlook::Action::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(4)
inline IDispatchPtr Outlook::Action::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5)
inline enum OlActionCopyLike Outlook::Action::GetCopyLike ( ) {
    enum OlActionCopyLike _result;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6)
inline void Outlook::Action::PutCopyLike ( enum OlActionCopyLike _arg1 ) {
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7)
inline VARIANT_BOOL Outlook::Action::GetEnabled ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8)
inline void Outlook::Action::PutEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(9)
inline _bstr_t Outlook::Action::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10)
inline void Outlook::Action::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(11)
inline _bstr_t Outlook::Action::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(12)
inline void Outlook::Action::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(13)
inline _bstr_t Outlook::Action::GetPrefix ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(14)
inline void Outlook::Action::PutPrefix ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(15)
inline enum OlActionReplyStyle Outlook::Action::GetReplyStyle ( ) {
    enum OlActionReplyStyle _result;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(16)
inline void Outlook::Action::PutReplyStyle ( enum OlActionReplyStyle _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(17)
inline enum OlActionResponseStyle Outlook::Action::GetResponseStyle ( ) {
    enum OlActionResponseStyle _result;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(18)
inline void Outlook::Action::PutResponseStyle ( enum OlActionResponseStyle _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(19)
inline enum OlActionShowOn Outlook::Action::GetShowOn ( ) {
    enum OlActionShowOn _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(20)
inline void Outlook::Action::PutShowOn ( enum OlActionShowOn _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(21)
inline HRESULT Outlook::Action::Delete ( ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(22)
inline IDispatchPtr Outlook::Action::Execute ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface _Application wrapper method implementations
//

#pragma implementation_key(23)
inline Outlook::_ApplicationPtr Outlook::_Application::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(24)
inline enum OlObjectClass Outlook::_Application::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(25)
inline Outlook::_NameSpacePtr Outlook::_Application::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(26)
inline IDispatchPtr Outlook::_Application::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(27)
inline Office::AssistantPtr Outlook::_Application::GetAssistant ( ) {
    struct Office::Assistant * _result;
    _com_dispatch_method(this, 0x114, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Office::AssistantPtr(_result, false);
}

#pragma implementation_key(28)
inline _bstr_t Outlook::_Application::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(29)
inline _bstr_t Outlook::_Application::GetVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x116, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(30)
inline Outlook::_ExplorerPtr Outlook::_Application::ActiveExplorer ( ) {
    struct _Explorer * _result;
    _com_dispatch_method(this, 0x111, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _ExplorerPtr(_result, false);
}

#pragma implementation_key(31)
inline Outlook::_InspectorPtr Outlook::_Application::ActiveInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0x112, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(32)
inline IDispatchPtr Outlook::_Application::CreateItem ( enum OlItemType ItemType ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x10a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", ItemType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(33)
inline IDispatchPtr Outlook::_Application::CreateItemFromTemplate ( _bstr_t TemplatePath, const _variant_t & InFolder ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x10b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)TemplatePath, &InFolder);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(34)
inline IDispatchPtr Outlook::_Application::CreateObject ( _bstr_t ObjectName ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x115, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)ObjectName);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(35)
inline Outlook::_NameSpacePtr Outlook::_Application::GetNamespace ( _bstr_t Type ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0x110, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Type);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(36)
inline HRESULT Outlook::_Application::Quit ( ) {
    return _com_dispatch_method(this, 0x113, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(37)
inline Office::COMAddInsPtr Outlook::_Application::GetCOMAddIns ( ) {
    struct Office::COMAddIns * _result;
    _com_dispatch_method(this, 0x118, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Office::COMAddInsPtr(_result, false);
}

#pragma implementation_key(38)
inline Outlook::_ExplorersPtr Outlook::_Application::GetExplorers ( ) {
    struct _Explorers * _result;
    _com_dispatch_method(this, 0x119, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ExplorersPtr(_result, false);
}

#pragma implementation_key(39)
inline Outlook::_InspectorsPtr Outlook::_Application::GetInspectors ( ) {
    struct _Inspectors * _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorsPtr(_result, false);
}

#pragma implementation_key(40)
inline Office::LanguageSettingsPtr Outlook::_Application::GetLanguageSettings ( ) {
    struct Office::LanguageSettings * _result;
    _com_dispatch_method(this, 0x11b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Office::LanguageSettingsPtr(_result, false);
}

#pragma implementation_key(41)
inline _bstr_t Outlook::_Application::GetProductCode ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(42)
inline Office::AnswerWizardPtr Outlook::_Application::GetAnswerWizard ( ) {
    struct Office::AnswerWizard * _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Office::AnswerWizardPtr(_result, false);
}

#pragma implementation_key(43)
inline enum Office::MsoFeatureInstall Outlook::_Application::GetFeatureInstall ( ) {
    enum Office::MsoFeatureInstall _result;
    _com_dispatch_method(this, 0x11e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(44)
inline void Outlook::_Application::PutFeatureInstall ( enum Office::MsoFeatureInstall _arg1 ) {
    _com_dispatch_method(this, 0x11e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(45)
inline IDispatchPtr Outlook::_Application::ActiveWindow ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x11f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(46)
inline IDispatchPtr Outlook::_Application::_CopyFile ( _bstr_t FilePath, _bstr_t DestFolderPath ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xfa62, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)FilePath, (BSTR)DestFolderPath);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(47)
inline Outlook::SearchPtr Outlook::_Application::AdvancedSearch ( _bstr_t Scope, const _variant_t & Filter, const _variant_t & SearchSubFolders, const _variant_t & Tag ) {
    struct Search * _result;
    _com_dispatch_method(this, 0xfa65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c\x080c", (BSTR)Scope, &Filter, &SearchSubFolders, &Tag);
    return SearchPtr(_result, false);
}

#pragma implementation_key(48)
inline VARIANT_BOOL Outlook::_Application::IsSearchSynchronous ( _bstr_t LookInFolders ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa6c, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)LookInFolders);
    return _result;
}

#pragma implementation_key(49)
inline HRESULT Outlook::_Application::GetNewNickNames ( VARIANT * pvar ) {
    return _com_dispatch_method(this, 0xfa48, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvar);
}

#pragma implementation_key(50)
inline Outlook::_RemindersPtr Outlook::_Application::GetReminders ( ) {
    struct _Reminders * _result;
    _com_dispatch_method(this, 0xfa99, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _RemindersPtr(_result, false);
}

//
// dispinterface _NameSpace wrapper method implementations
//

#pragma implementation_key(51)
inline Outlook::_ApplicationPtr Outlook::_NameSpace::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(52)
inline enum OlObjectClass Outlook::_NameSpace::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(53)
inline Outlook::_NameSpacePtr Outlook::_NameSpace::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(54)
inline IDispatchPtr Outlook::_NameSpace::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(55)
inline Outlook::RecipientPtr Outlook::_NameSpace::GetCurrentUser ( ) {
    struct Recipient * _result;
    _com_dispatch_method(this, 0x2101, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientPtr(_result, false);
}

#pragma implementation_key(56)
inline Outlook::_FoldersPtr Outlook::_NameSpace::GetFolders ( ) {
    struct _Folders * _result;
    _com_dispatch_method(this, 0x2103, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _FoldersPtr(_result, false);
}

#pragma implementation_key(57)
inline _bstr_t Outlook::_NameSpace::GetType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x2104, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(58)
inline Outlook::AddressListsPtr Outlook::_NameSpace::GetAddressLists ( ) {
    struct AddressLists * _result;
    _com_dispatch_method(this, 0x210d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AddressListsPtr(_result, false);
}

#pragma implementation_key(59)
inline Outlook::RecipientPtr Outlook::_NameSpace::CreateRecipient ( _bstr_t RecipientName ) {
    struct Recipient * _result;
    _com_dispatch_method(this, 0x210a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)RecipientName);
    return RecipientPtr(_result, false);
}

#pragma implementation_key(60)
inline Outlook::MAPIFolderPtr Outlook::_NameSpace::GetDefaultFolder ( enum OlDefaultFolders FolderType ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x210b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FolderType);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(61)
inline Outlook::MAPIFolderPtr Outlook::_NameSpace::GetFolderFromID ( _bstr_t EntryIDFolder, const _variant_t & EntryIDStore ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x2108, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)EntryIDFolder, &EntryIDStore);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(62)
inline IDispatchPtr Outlook::_NameSpace::GetItemFromID ( _bstr_t EntryIDItem, const _variant_t & EntryIDStore ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x2109, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)EntryIDItem, &EntryIDStore);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(63)
inline Outlook::RecipientPtr Outlook::_NameSpace::GetRecipientFromID ( _bstr_t EntryID ) {
    struct Recipient * _result;
    _com_dispatch_method(this, 0x2107, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)EntryID);
    return RecipientPtr(_result, false);
}

#pragma implementation_key(64)
inline Outlook::MAPIFolderPtr Outlook::_NameSpace::GetSharedDefaultFolder ( struct Recipient * Recipient, enum OlDefaultFolders FolderType ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x210c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003", Recipient, FolderType);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(65)
inline HRESULT Outlook::_NameSpace::Logoff ( ) {
    return _com_dispatch_method(this, 0x2106, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(66)
inline HRESULT Outlook::_NameSpace::Logon ( const _variant_t & Profile, const _variant_t & Password, const _variant_t & ShowDialog, const _variant_t & NewSession ) {
    return _com_dispatch_method(this, 0x2105, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c", &Profile, &Password, &ShowDialog, &NewSession);
}

#pragma implementation_key(67)
inline Outlook::MAPIFolderPtr Outlook::_NameSpace::PickFolder ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x210e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(68)
inline HRESULT Outlook::_NameSpace::RefreshRemoteHeaders ( ) {
    return _com_dispatch_method(this, 0x2117, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(69)
inline Outlook::SyncObjectsPtr Outlook::_NameSpace::GetSyncObjects ( ) {
    struct SyncObjects * _result;
    _com_dispatch_method(this, 0x2118, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SyncObjectsPtr(_result, false);
}

#pragma implementation_key(70)
inline HRESULT Outlook::_NameSpace::AddStore ( const _variant_t & Store ) {
    return _com_dispatch_method(this, 0x2119, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Store);
}

#pragma implementation_key(71)
inline HRESULT Outlook::_NameSpace::RemoveStore ( struct MAPIFolder * Folder ) {
    return _com_dispatch_method(this, 0x211a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Folder);
}

#pragma implementation_key(72)
inline VARIANT_BOOL Outlook::_NameSpace::GetOffline ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa4c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(73)
inline HRESULT Outlook::_NameSpace::Dial ( const _variant_t & ContactItem ) {
    return _com_dispatch_method(this, 0xfa0d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &ContactItem);
}

#pragma implementation_key(74)
inline IUnknownPtr Outlook::_NameSpace::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

//
// dispinterface Recipient wrapper method implementations
//

#pragma implementation_key(75)
inline Outlook::_ApplicationPtr Outlook::Recipient::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(76)
inline enum OlObjectClass Outlook::Recipient::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(77)
inline Outlook::_NameSpacePtr Outlook::Recipient::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(78)
inline IDispatchPtr Outlook::Recipient::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(79)
inline _bstr_t Outlook::Recipient::GetAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(80)
inline Outlook::AddressEntryPtr Outlook::Recipient::GetAddressEntry ( ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(81)
inline void Outlook::Recipient::PutRefAddressEntry ( struct AddressEntry * _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(82)
inline _bstr_t Outlook::Recipient::GetAutoResponse ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(83)
inline void Outlook::Recipient::PutAutoResponse ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(84)
inline enum OlDisplayType Outlook::Recipient::GetDisplayType ( ) {
    enum OlDisplayType _result;
    _com_dispatch_method(this, 0x3900, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(85)
inline _bstr_t Outlook::Recipient::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(86)
inline long Outlook::Recipient::GetIndex ( ) {
    long _result;
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(87)
inline enum OlResponseStatus Outlook::Recipient::GetMeetingResponseStatus ( ) {
    enum OlResponseStatus _result;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(88)
inline _bstr_t Outlook::Recipient::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(89)
inline VARIANT_BOOL Outlook::Recipient::GetResolved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(90)
inline enum OlTrackingStatus Outlook::Recipient::GetTrackingStatus ( ) {
    enum OlTrackingStatus _result;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(91)
inline void Outlook::Recipient::PutTrackingStatus ( enum OlTrackingStatus _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(92)
inline DATE Outlook::Recipient::GetTrackingStatusTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(93)
inline void Outlook::Recipient::PutTrackingStatusTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(94)
inline long Outlook::Recipient::GetType ( ) {
    long _result;
    _com_dispatch_method(this, 0xc15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(95)
inline void Outlook::Recipient::PutType ( long _arg1 ) {
    _com_dispatch_method(this, 0xc15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(96)
inline HRESULT Outlook::Recipient::Delete ( ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(97)
inline _bstr_t Outlook::Recipient::FreeBusy ( DATE Start, long MinPerChar, const _variant_t & CompleteFormat ) {
    BSTR _result;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0007\x0003\x080c", Start, MinPerChar, &CompleteFormat);
    return _bstr_t(_result, false);
}

#pragma implementation_key(98)
inline VARIANT_BOOL Outlook::Recipient::Resolve ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface AddressEntry wrapper method implementations
//

#pragma implementation_key(99)
inline Outlook::_ApplicationPtr Outlook::AddressEntry::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(100)
inline enum OlObjectClass Outlook::AddressEntry::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(101)
inline Outlook::_NameSpacePtr Outlook::AddressEntry::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(102)
inline IDispatchPtr Outlook::AddressEntry::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(103)
inline _bstr_t Outlook::AddressEntry::GetAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(104)
inline void Outlook::AddressEntry::PutAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(105)
inline enum OlDisplayType Outlook::AddressEntry::GetDisplayType ( ) {
    enum OlDisplayType _result;
    _com_dispatch_method(this, 0x3900, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(106)
inline _bstr_t Outlook::AddressEntry::GetID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(107)
inline Outlook::AddressEntryPtr Outlook::AddressEntry::GetManager ( ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x303, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(108)
inline IUnknownPtr Outlook::AddressEntry::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(109)
inline void Outlook::AddressEntry::PutMAPIOBJECT ( IUnknown * _arg1 ) {
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000d", _arg1);
}

#pragma implementation_key(110)
inline Outlook::AddressEntriesPtr Outlook::AddressEntry::GetMembers ( ) {
    struct AddressEntries * _result;
    _com_dispatch_method(this, 0x304, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntriesPtr(_result, false);
}

#pragma implementation_key(111)
inline _bstr_t Outlook::AddressEntry::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(112)
inline void Outlook::AddressEntry::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(113)
inline _bstr_t Outlook::AddressEntry::GetType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(114)
inline void Outlook::AddressEntry::PutType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(115)
inline HRESULT Outlook::AddressEntry::Delete ( ) {
    return _com_dispatch_method(this, 0x302, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(116)
inline HRESULT Outlook::AddressEntry::Details ( const _variant_t & HWnd ) {
    return _com_dispatch_method(this, 0x301, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &HWnd);
}

#pragma implementation_key(117)
inline _bstr_t Outlook::AddressEntry::GetFreeBusy ( DATE Start, long MinPerChar, const _variant_t & CompleteFormat ) {
    BSTR _result;
    _com_dispatch_method(this, 0x306, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0007\x0003\x080c", Start, MinPerChar, &CompleteFormat);
    return _bstr_t(_result, false);
}

#pragma implementation_key(118)
inline HRESULT Outlook::AddressEntry::Update ( const _variant_t & MakePermanent, const _variant_t & Refresh ) {
    return _com_dispatch_method(this, 0x300, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &MakePermanent, &Refresh);
}

#pragma implementation_key(119)
inline HRESULT Outlook::AddressEntry::UpdateFreeBusy ( ) {
    return _com_dispatch_method(this, 0x307, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface AddressEntries wrapper method implementations
//

#pragma implementation_key(120)
inline Outlook::_ApplicationPtr Outlook::AddressEntries::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(121)
inline enum OlObjectClass Outlook::AddressEntries::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(122)
inline Outlook::_NameSpacePtr Outlook::AddressEntries::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(123)
inline IDispatchPtr Outlook::AddressEntries::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(124)
inline long Outlook::AddressEntries::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(125)
inline Outlook::AddressEntryPtr Outlook::AddressEntries::Item ( const _variant_t & Index ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(126)
inline IUnknownPtr Outlook::AddressEntries::GetRawTable ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(127)
inline Outlook::AddressEntryPtr Outlook::AddressEntries::Add ( _bstr_t Type, const _variant_t & Name, const _variant_t & Address ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c", (BSTR)Type, &Name, &Address);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(128)
inline Outlook::AddressEntryPtr Outlook::AddressEntries::GetFirst ( ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(129)
inline Outlook::AddressEntryPtr Outlook::AddressEntries::GetLast ( ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(130)
inline Outlook::AddressEntryPtr Outlook::AddressEntries::GetNext ( ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(131)
inline Outlook::AddressEntryPtr Outlook::AddressEntries::GetPrevious ( ) {
    struct AddressEntry * _result;
    _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntryPtr(_result, false);
}

#pragma implementation_key(132)
inline HRESULT Outlook::AddressEntries::Sort ( const _variant_t & Property, const _variant_t & Order ) {
    return _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &Property, &Order);
}

//
// dispinterface _Folders wrapper method implementations
//

#pragma implementation_key(133)
inline Outlook::_ApplicationPtr Outlook::_Folders::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(134)
inline enum OlObjectClass Outlook::_Folders::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(135)
inline Outlook::_NameSpacePtr Outlook::_Folders::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(136)
inline IDispatchPtr Outlook::_Folders::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(137)
inline long Outlook::_Folders::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(138)
inline Outlook::MAPIFolderPtr Outlook::_Folders::Item ( const _variant_t & Index ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(139)
inline IUnknownPtr Outlook::_Folders::GetRawTable ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(140)
inline Outlook::MAPIFolderPtr Outlook::_Folders::Add ( _bstr_t Name, const _variant_t & Type ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)Name, &Type);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(141)
inline Outlook::MAPIFolderPtr Outlook::_Folders::GetFirst ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(142)
inline Outlook::MAPIFolderPtr Outlook::_Folders::GetLast ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(143)
inline Outlook::MAPIFolderPtr Outlook::_Folders::GetNext ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(144)
inline Outlook::MAPIFolderPtr Outlook::_Folders::GetPrevious ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(145)
inline HRESULT Outlook::_Folders::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

//
// dispinterface MAPIFolder wrapper method implementations
//

#pragma implementation_key(146)
inline Outlook::_ApplicationPtr Outlook::MAPIFolder::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(147)
inline enum OlObjectClass Outlook::MAPIFolder::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(148)
inline Outlook::_NameSpacePtr Outlook::MAPIFolder::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(149)
inline IDispatchPtr Outlook::MAPIFolder::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(150)
inline enum OlItemType Outlook::MAPIFolder::GetDefaultItemType ( ) {
    enum OlItemType _result;
    _com_dispatch_method(this, 0x3106, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(151)
inline _bstr_t Outlook::MAPIFolder::GetDefaultMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3107, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(152)
inline _bstr_t Outlook::MAPIFolder::GetDescription ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(153)
inline void Outlook::MAPIFolder::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(154)
inline _bstr_t Outlook::MAPIFolder::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(155)
inline Outlook::_FoldersPtr Outlook::MAPIFolder::GetFolders ( ) {
    struct _Folders * _result;
    _com_dispatch_method(this, 0x2103, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _FoldersPtr(_result, false);
}

#pragma implementation_key(156)
inline Outlook::_ItemsPtr Outlook::MAPIFolder::GetItems ( ) {
    struct _Items * _result;
    _com_dispatch_method(this, 0x3100, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ItemsPtr(_result, false);
}

#pragma implementation_key(157)
inline _bstr_t Outlook::MAPIFolder::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(158)
inline void Outlook::MAPIFolder::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(159)
inline _bstr_t Outlook::MAPIFolder::GetStoreID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3108, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(160)
inline long Outlook::MAPIFolder::GetUnReadItemCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x3603, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(161)
inline Outlook::MAPIFolderPtr Outlook::MAPIFolder::CopyTo ( struct MAPIFolder * DestinationFolder ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestinationFolder);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(162)
inline HRESULT Outlook::MAPIFolder::Delete ( ) {
    return _com_dispatch_method(this, 0xf045, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(163)
inline HRESULT Outlook::MAPIFolder::Display ( ) {
    return _com_dispatch_method(this, 0x3104, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(164)
inline Outlook::_ExplorerPtr Outlook::MAPIFolder::GetExplorer ( const _variant_t & DisplayMode ) {
    struct _Explorer * _result;
    _com_dispatch_method(this, 0x3101, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &DisplayMode);
    return _ExplorerPtr(_result, false);
}

#pragma implementation_key(165)
inline HRESULT Outlook::MAPIFolder::MoveTo ( struct MAPIFolder * DestinationFolder ) {
    return _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", DestinationFolder);
}

#pragma implementation_key(166)
inline IDispatchPtr Outlook::MAPIFolder::GetUserPermissions ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x3111, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(167)
inline VARIANT_BOOL Outlook::MAPIFolder::GetWebViewOn ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x3112, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(168)
inline void Outlook::MAPIFolder::PutWebViewOn ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3112, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(169)
inline _bstr_t Outlook::MAPIFolder::GetWebViewURL ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3113, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(170)
inline void Outlook::MAPIFolder::PutWebViewURL ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3113, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(171)
inline VARIANT_BOOL Outlook::MAPIFolder::GetWebViewAllowNavigation ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x3114, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(172)
inline void Outlook::MAPIFolder::PutWebViewAllowNavigation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3114, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(173)
inline HRESULT Outlook::MAPIFolder::AddToPFFavorites ( ) {
    return _com_dispatch_method(this, 0x3115, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(174)
inline _bstr_t Outlook::MAPIFolder::GetAddressBookName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa6e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(175)
inline void Outlook::MAPIFolder::PutAddressBookName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xfa6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(176)
inline VARIANT_BOOL Outlook::MAPIFolder::GetShowAsOutlookAB ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(177)
inline void Outlook::MAPIFolder::PutShowAsOutlookAB ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xfa6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(178)
inline _bstr_t Outlook::MAPIFolder::GetFolderPath ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(179)
inline HRESULT Outlook::MAPIFolder::AddToFavorites ( const _variant_t & fNoUI, const _variant_t & Name ) {
    return _com_dispatch_method(this, 0xfa61, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &fNoUI, &Name);
}

#pragma implementation_key(180)
inline VARIANT_BOOL Outlook::MAPIFolder::GetInAppFolderSyncObject ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa4b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(181)
inline void Outlook::MAPIFolder::PutInAppFolderSyncObject ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xfa4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(182)
inline Outlook::ViewPtr Outlook::MAPIFolder::GetCurrentView ( ) {
    struct View * _result;
    _com_dispatch_method(this, 0x2200, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ViewPtr(_result, false);
}

#pragma implementation_key(183)
inline VARIANT_BOOL Outlook::MAPIFolder::GetCustomViewsOnly ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa46, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(184)
inline void Outlook::MAPIFolder::PutCustomViewsOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xfa46, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(185)
inline Outlook::_ViewsPtr Outlook::MAPIFolder::GetViews ( ) {
    struct _Views * _result;
    _com_dispatch_method(this, 0x3109, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ViewsPtr(_result, false);
}

#pragma implementation_key(186)
inline IUnknownPtr Outlook::MAPIFolder::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(187)
inline _bstr_t Outlook::MAPIFolder::GetFullFolderPath ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa91, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// dispinterface _Items wrapper method implementations
//

#pragma implementation_key(188)
inline Outlook::_ApplicationPtr Outlook::_Items::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(189)
inline enum OlObjectClass Outlook::_Items::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(190)
inline Outlook::_NameSpacePtr Outlook::_Items::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(191)
inline IDispatchPtr Outlook::_Items::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(192)
inline long Outlook::_Items::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(193)
inline IDispatchPtr Outlook::_Items::Item ( const _variant_t & Index ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(194)
inline IUnknownPtr Outlook::_Items::GetRawTable ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(195)
inline VARIANT_BOOL Outlook::_Items::GetIncludeRecurrences ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xce, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(196)
inline void Outlook::_Items::PutIncludeRecurrences ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xce, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(197)
inline IDispatchPtr Outlook::_Items::Add ( const _variant_t & Type ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &Type);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(198)
inline IDispatchPtr Outlook::_Items::Find ( _bstr_t Filter ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x62, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Filter);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(199)
inline IDispatchPtr Outlook::_Items::FindNext ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x63, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(200)
inline IDispatchPtr Outlook::_Items::GetFirst ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(201)
inline IDispatchPtr Outlook::_Items::GetLast ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(202)
inline IDispatchPtr Outlook::_Items::GetNext ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(203)
inline IDispatchPtr Outlook::_Items::GetPrevious ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(204)
inline HRESULT Outlook::_Items::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(205)
inline HRESULT Outlook::_Items::ResetColumns ( ) {
    return _com_dispatch_method(this, 0x5d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(206)
inline Outlook::_ItemsPtr Outlook::_Items::Restrict ( _bstr_t Filter ) {
    struct _Items * _result;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Filter);
    return _ItemsPtr(_result, false);
}

#pragma implementation_key(207)
inline HRESULT Outlook::_Items::SetColumns ( _bstr_t Columns ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Columns);
}

#pragma implementation_key(208)
inline HRESULT Outlook::_Items::Sort ( _bstr_t Property, const _variant_t & Descending ) {
    return _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Property, &Descending);
}

//
// dispinterface _Explorer wrapper method implementations
//

#pragma implementation_key(209)
inline Outlook::_ApplicationPtr Outlook::_Explorer::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(210)
inline enum OlObjectClass Outlook::_Explorer::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(211)
inline Outlook::_NameSpacePtr Outlook::_Explorer::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(212)
inline IDispatchPtr Outlook::_Explorer::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(213)
inline Office::_CommandBarsPtr Outlook::_Explorer::GetCommandBars ( ) {
    struct Office::_CommandBars * _result;
    _com_dispatch_method(this, 0x2100, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Office::_CommandBarsPtr(_result, false);
}

#pragma implementation_key(214)
inline Outlook::MAPIFolderPtr Outlook::_Explorer::GetCurrentFolder ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0x2101, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(215)
inline void Outlook::_Explorer::PutRefCurrentFolder ( struct MAPIFolder * _arg1 ) {
    _com_dispatch_method(this, 0x2101, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(216)
inline HRESULT Outlook::_Explorer::Close ( ) {
    return _com_dispatch_method(this, 0x2103, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(217)
inline HRESULT Outlook::_Explorer::Display ( ) {
    return _com_dispatch_method(this, 0x2104, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(218)
inline _bstr_t Outlook::_Explorer::GetCaption ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x2111, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(219)
inline _variant_t Outlook::_Explorer::GetCurrentView ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2200, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(220)
inline void Outlook::_Explorer::PutCurrentView ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x2200, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(221)
inline long Outlook::_Explorer::GetHeight ( ) {
    long _result;
    _com_dispatch_method(this, 0x2114, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(222)
inline void Outlook::_Explorer::PutHeight ( long _arg1 ) {
    _com_dispatch_method(this, 0x2114, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(223)
inline long Outlook::_Explorer::GetLeft ( ) {
    long _result;
    _com_dispatch_method(this, 0x2115, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(224)
inline void Outlook::_Explorer::PutLeft ( long _arg1 ) {
    _com_dispatch_method(this, 0x2115, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(225)
inline Outlook::PanesPtr Outlook::_Explorer::GetPanes ( ) {
    struct Panes * _result;
    _com_dispatch_method(this, 0x2201, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PanesPtr(_result, false);
}

#pragma implementation_key(226)
inline Outlook::SelectionPtr Outlook::_Explorer::GetSelection ( ) {
    struct Selection * _result;
    _com_dispatch_method(this, 0x2202, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SelectionPtr(_result, false);
}

#pragma implementation_key(227)
inline long Outlook::_Explorer::GetTop ( ) {
    long _result;
    _com_dispatch_method(this, 0x2116, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(228)
inline void Outlook::_Explorer::PutTop ( long _arg1 ) {
    _com_dispatch_method(this, 0x2116, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(229)
inline long Outlook::_Explorer::GetWidth ( ) {
    long _result;
    _com_dispatch_method(this, 0x2117, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(230)
inline void Outlook::_Explorer::PutWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0x2117, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(231)
inline enum OlWindowState Outlook::_Explorer::GetWindowState ( ) {
    enum OlWindowState _result;
    _com_dispatch_method(this, 0x2112, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(232)
inline void Outlook::_Explorer::PutWindowState ( enum OlWindowState _arg1 ) {
    _com_dispatch_method(this, 0x2112, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(233)
inline HRESULT Outlook::_Explorer::Activate ( ) {
    return _com_dispatch_method(this, 0x2113, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(234)
inline VARIANT_BOOL Outlook::_Explorer::IsPaneVisible ( enum OlPane Pane ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x2203, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003", Pane);
    return _result;
}

#pragma implementation_key(235)
inline HRESULT Outlook::_Explorer::ShowPane ( enum OlPane Pane, VARIANT_BOOL Visible ) {
    return _com_dispatch_method(this, 0x2204, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b", Pane, Visible);
}

#pragma implementation_key(236)
inline IDispatchPtr Outlook::_Explorer::GetViews ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x3109, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(237)
inline IDispatchPtr Outlook::_Explorer::GetHTMLDocument ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xfa92, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Panes wrapper method implementations
//

#pragma implementation_key(238)
inline Outlook::_ApplicationPtr Outlook::Panes::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(239)
inline enum OlObjectClass Outlook::Panes::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(240)
inline Outlook::_NameSpacePtr Outlook::Panes::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(241)
inline IDispatchPtr Outlook::Panes::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(242)
inline long Outlook::Panes::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(243)
inline IDispatchPtr Outlook::Panes::Item ( const _variant_t & Index ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Selection wrapper method implementations
//

#pragma implementation_key(244)
inline Outlook::_ApplicationPtr Outlook::Selection::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(245)
inline enum OlObjectClass Outlook::Selection::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(246)
inline Outlook::_NameSpacePtr Outlook::Selection::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(247)
inline IDispatchPtr Outlook::Selection::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(248)
inline long Outlook::Selection::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(249)
inline IDispatchPtr Outlook::Selection::Item ( const _variant_t & Index ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// dispinterface View wrapper method implementations
//

#pragma implementation_key(250)
inline Outlook::_ApplicationPtr Outlook::View::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(251)
inline enum OlObjectClass Outlook::View::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(252)
inline Outlook::_NameSpacePtr Outlook::View::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(253)
inline IDispatchPtr Outlook::View::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(254)
inline HRESULT Outlook::View::Apply ( ) {
    return _com_dispatch_method(this, 0x197, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(255)
inline Outlook::ViewPtr Outlook::View::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption ) {
    struct View * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, SaveOption);
    return ViewPtr(_result, false);
}

#pragma implementation_key(256)
inline HRESULT Outlook::View::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(257)
inline HRESULT Outlook::View::Reset ( ) {
    return _com_dispatch_method(this, 0xfa44, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(258)
inline HRESULT Outlook::View::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(259)
inline _bstr_t Outlook::View::GetLanguage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa41, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(260)
inline void Outlook::View::PutLanguage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xfa41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(261)
inline VARIANT_BOOL Outlook::View::GetLockUserChanges ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa40, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(262)
inline void Outlook::View::PutLockUserChanges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xfa40, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(263)
inline _bstr_t Outlook::View::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(264)
inline void Outlook::View::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(265)
inline enum OlViewSaveOption Outlook::View::GetSaveOption ( ) {
    enum OlViewSaveOption _result;
    _com_dispatch_method(this, 0xfa3f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(266)
inline VARIANT_BOOL Outlook::View::GetStandard ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa3e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(267)
inline enum OlViewType Outlook::View::GetViewType ( ) {
    enum OlViewType _result;
    _com_dispatch_method(this, 0x194, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(268)
inline _bstr_t Outlook::View::GetXML ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa3c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(269)
inline void Outlook::View::PutXML ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xfa3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(270)
inline HRESULT Outlook::View::GoToDate ( DATE Date ) {
    return _com_dispatch_method(this, 0xfa36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0007", Date);
}

//
// dispinterface _Views wrapper method implementations
//

#pragma implementation_key(271)
inline Outlook::_ApplicationPtr Outlook::_Views::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(272)
inline enum OlObjectClass Outlook::_Views::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(273)
inline Outlook::_NameSpacePtr Outlook::_Views::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(274)
inline IDispatchPtr Outlook::_Views::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(275)
inline long Outlook::_Views::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(276)
inline Outlook::ViewPtr Outlook::_Views::Item ( const _variant_t & Index ) {
    struct View * _result;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ViewPtr(_result, false);
}

#pragma implementation_key(277)
inline Outlook::ViewPtr Outlook::_Views::Add ( _bstr_t Name, enum OlViewType ViewType, enum OlViewSaveOption SaveOption ) {
    struct View * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)Name, ViewType, SaveOption);
    return ViewPtr(_result, false);
}

#pragma implementation_key(278)
inline HRESULT Outlook::_Views::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(279)
inline IUnknownPtr Outlook::_Views::_NewEnum ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xfffffffc, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

//
// dispinterface AddressLists wrapper method implementations
//

#pragma implementation_key(280)
inline Outlook::_ApplicationPtr Outlook::AddressLists::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(281)
inline enum OlObjectClass Outlook::AddressLists::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(282)
inline Outlook::_NameSpacePtr Outlook::AddressLists::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(283)
inline IDispatchPtr Outlook::AddressLists::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(284)
inline long Outlook::AddressLists::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(285)
inline Outlook::AddressListPtr Outlook::AddressLists::Item ( const _variant_t & Index ) {
    struct AddressList * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AddressListPtr(_result, false);
}

//
// dispinterface AddressList wrapper method implementations
//

#pragma implementation_key(286)
inline Outlook::_ApplicationPtr Outlook::AddressList::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(287)
inline enum OlObjectClass Outlook::AddressList::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(288)
inline Outlook::_NameSpacePtr Outlook::AddressList::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(289)
inline IDispatchPtr Outlook::AddressList::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(290)
inline Outlook::AddressEntriesPtr Outlook::AddressList::GetAddressEntries ( ) {
    struct AddressEntries * _result;
    _com_dispatch_method(this, 0x100, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AddressEntriesPtr(_result, false);
}

#pragma implementation_key(291)
inline _bstr_t Outlook::AddressList::GetID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(292)
inline long Outlook::AddressList::GetIndex ( ) {
    long _result;
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(293)
inline VARIANT_BOOL Outlook::AddressList::GetIsReadOnly ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf017, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(294)
inline _bstr_t Outlook::AddressList::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// dispinterface SyncObjects wrapper method implementations
//

#pragma implementation_key(295)
inline Outlook::_ApplicationPtr Outlook::SyncObjects::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(296)
inline enum OlObjectClass Outlook::SyncObjects::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(297)
inline Outlook::_NameSpacePtr Outlook::SyncObjects::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(298)
inline IDispatchPtr Outlook::SyncObjects::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(299)
inline long Outlook::SyncObjects::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(300)
inline Outlook::_SyncObjectPtr Outlook::SyncObjects::Item ( const _variant_t & Index ) {
    struct _SyncObject * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return _SyncObjectPtr(_result, false);
}

#pragma implementation_key(301)
inline Outlook::_SyncObjectPtr Outlook::SyncObjects::GetAppFolders ( ) {
    struct _SyncObject * _result;
    _com_dispatch_method(this, 0xfa4a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _SyncObjectPtr(_result, false);
}

//
// dispinterface _SyncObject wrapper method implementations
//

#pragma implementation_key(302)
inline Outlook::_ApplicationPtr Outlook::_SyncObject::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(303)
inline enum OlObjectClass Outlook::_SyncObject::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(304)
inline Outlook::_NameSpacePtr Outlook::_SyncObject::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(305)
inline IDispatchPtr Outlook::_SyncObject::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(306)
inline _bstr_t Outlook::_SyncObject::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x2100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(307)
inline HRESULT Outlook::_SyncObject::Start ( ) {
    return _com_dispatch_method(this, 0x2101, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(308)
inline HRESULT Outlook::_SyncObject::Stop ( ) {
    return _com_dispatch_method(this, 0x2102, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface SyncObjectEvents wrapper method implementations
//

#pragma implementation_key(309)
inline HRESULT Outlook::SyncObjectEvents::SyncStart ( ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(310)
inline HRESULT Outlook::SyncObjectEvents::Progress ( enum OlSyncState State, _bstr_t Description, long Value, long Max ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0003\x0003", State, (BSTR)Description, Value, Max);
}

#pragma implementation_key(311)
inline HRESULT Outlook::SyncObjectEvents::OnError ( long Code, _bstr_t Description ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", Code, (BSTR)Description);
}

#pragma implementation_key(312)
inline HRESULT Outlook::SyncObjectEvents::SyncEnd ( ) {
    return _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface _Inspector wrapper method implementations
//

#pragma implementation_key(313)
inline Outlook::_ApplicationPtr Outlook::_Inspector::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(314)
inline enum OlObjectClass Outlook::_Inspector::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(315)
inline Outlook::_NameSpacePtr Outlook::_Inspector::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(316)
inline IDispatchPtr Outlook::_Inspector::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(317)
inline Office::_CommandBarsPtr Outlook::_Inspector::GetCommandBars ( ) {
    struct Office::_CommandBars * _result;
    _com_dispatch_method(this, 0x2100, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Office::_CommandBarsPtr(_result, false);
}

#pragma implementation_key(318)
inline IDispatchPtr Outlook::_Inspector::GetCurrentItem ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x2102, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(319)
inline enum OlEditorType Outlook::_Inspector::GetEditorType ( ) {
    enum OlEditorType _result;
    _com_dispatch_method(this, 0x2110, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(320)
inline IDispatchPtr Outlook::_Inspector::GetModifiedFormPages ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x2106, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(321)
inline HRESULT Outlook::_Inspector::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0x2103, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(322)
inline HRESULT Outlook::_Inspector::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0x2104, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(323)
inline HRESULT Outlook::_Inspector::HideFormPage ( _bstr_t PageName ) {
    return _com_dispatch_method(this, 0x2108, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)PageName);
}

#pragma implementation_key(324)
inline VARIANT_BOOL Outlook::_Inspector::IsWordMail ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x2105, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(325)
inline HRESULT Outlook::_Inspector::SetCurrentFormPage ( _bstr_t PageName ) {
    return _com_dispatch_method(this, 0x210c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)PageName);
}

#pragma implementation_key(326)
inline HRESULT Outlook::_Inspector::ShowFormPage ( _bstr_t PageName ) {
    return _com_dispatch_method(this, 0x2109, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)PageName);
}

#pragma implementation_key(327)
inline IDispatchPtr Outlook::_Inspector::GetHTMLEditor ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x210e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(328)
inline IDispatchPtr Outlook::_Inspector::GetWordEditor ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x210f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(329)
inline _bstr_t Outlook::_Inspector::GetCaption ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x2111, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(330)
inline long Outlook::_Inspector::GetHeight ( ) {
    long _result;
    _com_dispatch_method(this, 0x2114, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(331)
inline void Outlook::_Inspector::PutHeight ( long _arg1 ) {
    _com_dispatch_method(this, 0x2114, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(332)
inline long Outlook::_Inspector::GetLeft ( ) {
    long _result;
    _com_dispatch_method(this, 0x2115, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(333)
inline void Outlook::_Inspector::PutLeft ( long _arg1 ) {
    _com_dispatch_method(this, 0x2115, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(334)
inline long Outlook::_Inspector::GetTop ( ) {
    long _result;
    _com_dispatch_method(this, 0x2116, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(335)
inline void Outlook::_Inspector::PutTop ( long _arg1 ) {
    _com_dispatch_method(this, 0x2116, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(336)
inline long Outlook::_Inspector::GetWidth ( ) {
    long _result;
    _com_dispatch_method(this, 0x2117, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(337)
inline void Outlook::_Inspector::PutWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0x2117, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(338)
inline enum OlWindowState Outlook::_Inspector::GetWindowState ( ) {
    enum OlWindowState _result;
    _com_dispatch_method(this, 0x2112, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(339)
inline void Outlook::_Inspector::PutWindowState ( enum OlWindowState _arg1 ) {
    _com_dispatch_method(this, 0x2112, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(340)
inline HRESULT Outlook::_Inspector::Activate ( ) {
    return _com_dispatch_method(this, 0x2113, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface _Explorers wrapper method implementations
//

#pragma implementation_key(341)
inline Outlook::_ApplicationPtr Outlook::_Explorers::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(342)
inline enum OlObjectClass Outlook::_Explorers::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(343)
inline Outlook::_NameSpacePtr Outlook::_Explorers::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(344)
inline IDispatchPtr Outlook::_Explorers::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(345)
inline long Outlook::_Explorers::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(346)
inline Outlook::_ExplorerPtr Outlook::_Explorers::Item ( const _variant_t & Index ) {
    struct _Explorer * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return _ExplorerPtr(_result, false);
}

#pragma implementation_key(347)
inline Outlook::_ExplorerPtr Outlook::_Explorers::Add ( const _variant_t & Folder, enum OlFolderDisplayMode DisplayMode ) {
    struct _Explorer * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x0003", &Folder, DisplayMode);
    return _ExplorerPtr(_result, false);
}

//
// dispinterface ExplorerEvents wrapper method implementations
//

#pragma implementation_key(348)
inline HRESULT Outlook::ExplorerEvents::Activate ( ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(349)
inline HRESULT Outlook::ExplorerEvents::FolderSwitch ( ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(350)
inline HRESULT Outlook::ExplorerEvents::BeforeFolderSwitch ( IDispatch * NewFolder, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", NewFolder, Cancel);
}

#pragma implementation_key(351)
inline HRESULT Outlook::ExplorerEvents::ViewSwitch ( ) {
    return _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(352)
inline HRESULT Outlook::ExplorerEvents::BeforeViewSwitch ( const _variant_t & NewView, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x400b", &NewView, Cancel);
}

#pragma implementation_key(353)
inline HRESULT Outlook::ExplorerEvents::Deactivate ( ) {
    return _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(354)
inline HRESULT Outlook::ExplorerEvents::SelectionChange ( ) {
    return _com_dispatch_method(this, 0xf007, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(355)
inline HRESULT Outlook::ExplorerEvents::Close ( ) {
    return _com_dispatch_method(this, 0xf008, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface ExplorerEvents_10 wrapper method implementations
//

#pragma implementation_key(356)
inline HRESULT Outlook::ExplorerEvents_10::Activate ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(357)
inline HRESULT Outlook::ExplorerEvents_10::FolderSwitch ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(358)
inline HRESULT Outlook::ExplorerEvents_10::BeforeFolderSwitch ( IDispatch * NewFolder, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x400b", NewFolder, Cancel);
    return _result;
}

#pragma implementation_key(359)
inline HRESULT Outlook::ExplorerEvents_10::ViewSwitch ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(360)
inline HRESULT Outlook::ExplorerEvents_10::BeforeViewSwitch ( const _variant_t & NewView, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x000c\x400b", &NewView, Cancel);
    return _result;
}

#pragma implementation_key(361)
inline HRESULT Outlook::ExplorerEvents_10::Deactivate ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(362)
inline HRESULT Outlook::ExplorerEvents_10::SelectionChange ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf007, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(363)
inline HRESULT Outlook::ExplorerEvents_10::Close ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf008, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(364)
inline HRESULT Outlook::ExplorerEvents_10::BeforeMaximize ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa11, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(365)
inline HRESULT Outlook::ExplorerEvents_10::BeforeMinimize ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa12, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(366)
inline HRESULT Outlook::ExplorerEvents_10::BeforeMove ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa13, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(367)
inline HRESULT Outlook::ExplorerEvents_10::BeforeSize ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa14, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(368)
inline HRESULT Outlook::ExplorerEvents_10::BeforeItemCopy ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xfa0e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(369)
inline HRESULT Outlook::ExplorerEvents_10::BeforeItemCut ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xfa0f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(370)
inline HRESULT Outlook::ExplorerEvents_10::BeforeItemPaste ( VARIANT * ClipboardContent, struct MAPIFolder * Target, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xfa10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0009\x400b", ClipboardContent, Target, Cancel);
}

//
// dispinterface _Inspectors wrapper method implementations
//

#pragma implementation_key(371)
inline Outlook::_ApplicationPtr Outlook::_Inspectors::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(372)
inline enum OlObjectClass Outlook::_Inspectors::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(373)
inline Outlook::_NameSpacePtr Outlook::_Inspectors::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(374)
inline IDispatchPtr Outlook::_Inspectors::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(375)
inline long Outlook::_Inspectors::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(376)
inline Outlook::_InspectorPtr Outlook::_Inspectors::Item ( const _variant_t & Index ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(377)
inline Outlook::_InspectorPtr Outlook::_Inspectors::Add ( IDispatch * Item ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Item);
    return _InspectorPtr(_result, false);
}

//
// dispinterface InspectorEvents wrapper method implementations
//

#pragma implementation_key(378)
inline HRESULT Outlook::InspectorEvents::Activate ( ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(379)
inline HRESULT Outlook::InspectorEvents::Deactivate ( ) {
    return _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(380)
inline HRESULT Outlook::InspectorEvents::Close ( ) {
    return _com_dispatch_method(this, 0xf008, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface InspectorEvents_10 wrapper method implementations
//

#pragma implementation_key(381)
inline HRESULT Outlook::InspectorEvents_10::Activate ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(382)
inline HRESULT Outlook::InspectorEvents_10::Deactivate ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(383)
inline HRESULT Outlook::InspectorEvents_10::Close ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf008, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(384)
inline HRESULT Outlook::InspectorEvents_10::BeforeMaximize ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa11, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(385)
inline HRESULT Outlook::InspectorEvents_10::BeforeMinimize ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa12, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(386)
inline HRESULT Outlook::InspectorEvents_10::BeforeMove ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa13, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(387)
inline HRESULT Outlook::InspectorEvents_10::BeforeSize ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xfa14, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

//
// dispinterface Search wrapper method implementations
//

#pragma implementation_key(388)
inline Outlook::_ApplicationPtr Outlook::Search::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(389)
inline enum OlObjectClass Outlook::Search::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(390)
inline Outlook::_NameSpacePtr Outlook::Search::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(391)
inline IDispatchPtr Outlook::Search::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(392)
inline _bstr_t Outlook::Search::GetFilter ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa64, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(393)
inline VARIANT_BOOL Outlook::Search::GetIsSynchronous ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa68, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(394)
inline Outlook::_ResultsPtr Outlook::Search::GetResults ( ) {
    struct _Results * _result;
    _com_dispatch_method(this, 0xfa69, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ResultsPtr(_result, false);
}

#pragma implementation_key(395)
inline VARIANT_BOOL Outlook::Search::GetSearchSubFolders ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa66, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(396)
inline HRESULT Outlook::Search::Stop ( ) {
    return _com_dispatch_method(this, 0xfa67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(397)
inline _bstr_t Outlook::Search::GetTag ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(398)
inline _bstr_t Outlook::Search::GetScope ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfaa5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// dispinterface _Results wrapper method implementations
//

#pragma implementation_key(399)
inline Outlook::_ApplicationPtr Outlook::_Results::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(400)
inline enum OlObjectClass Outlook::_Results::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(401)
inline Outlook::_NameSpacePtr Outlook::_Results::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(402)
inline IDispatchPtr Outlook::_Results::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(403)
inline long Outlook::_Results::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(404)
inline IDispatchPtr Outlook::_Results::Item ( const _variant_t & Index ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(405)
inline IUnknownPtr Outlook::_Results::GetRawTable ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(406)
inline IDispatchPtr Outlook::_Results::GetFirst ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(407)
inline IDispatchPtr Outlook::_Results::GetLast ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(408)
inline IDispatchPtr Outlook::_Results::GetNext ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(409)
inline IDispatchPtr Outlook::_Results::GetPrevious ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(410)
inline HRESULT Outlook::_Results::ResetColumns ( ) {
    return _com_dispatch_method(this, 0x5d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(411)
inline HRESULT Outlook::_Results::SetColumns ( _bstr_t Columns ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Columns);
}

#pragma implementation_key(412)
inline HRESULT Outlook::_Results::Sort ( _bstr_t Property, const _variant_t & Descending ) {
    return _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Property, &Descending);
}

#pragma implementation_key(413)
inline enum OlItemType Outlook::_Results::GetDefaultItemType ( ) {
    enum OlItemType _result;
    _com_dispatch_method(this, 0xfa8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(414)
inline void Outlook::_Results::PutDefaultItemType ( enum OlItemType _arg1 ) {
    _com_dispatch_method(this, 0xfa8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// dispinterface _Reminders wrapper method implementations
//

#pragma implementation_key(415)
inline Outlook::_ApplicationPtr Outlook::_Reminders::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(416)
inline enum OlObjectClass Outlook::_Reminders::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(417)
inline Outlook::_NameSpacePtr Outlook::_Reminders::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(418)
inline IDispatchPtr Outlook::_Reminders::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(419)
inline long Outlook::_Reminders::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(420)
inline Outlook::_ReminderPtr Outlook::_Reminders::Item ( const _variant_t & Index ) {
    struct _Reminder * _result;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return _ReminderPtr(_result, false);
}

#pragma implementation_key(421)
inline HRESULT Outlook::_Reminders::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(422)
inline IUnknownPtr Outlook::_Reminders::_NewEnum ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xfffffffc, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

//
// dispinterface _Reminder wrapper method implementations
//

#pragma implementation_key(423)
inline Outlook::_ApplicationPtr Outlook::_Reminder::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(424)
inline enum OlObjectClass Outlook::_Reminder::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(425)
inline Outlook::_NameSpacePtr Outlook::_Reminder::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(426)
inline IDispatchPtr Outlook::_Reminder::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(427)
inline HRESULT Outlook::_Reminder::Dismiss ( ) {
    return _com_dispatch_method(this, 0xfa9a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(428)
inline HRESULT Outlook::_Reminder::Snooze ( const _variant_t & SnoozeTime ) {
    return _com_dispatch_method(this, 0xfa9b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &SnoozeTime);
}

#pragma implementation_key(429)
inline _bstr_t Outlook::_Reminder::GetCaption ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(430)
inline VARIANT_BOOL Outlook::_Reminder::GetIsVisible ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa9d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(431)
inline IDispatchPtr Outlook::_Reminder::GetItem ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xfa9e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(432)
inline DATE Outlook::_Reminder::GetNextReminderDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xfa9f, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(433)
inline DATE Outlook::_Reminder::GetOriginalReminderDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xfaa0, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Actions wrapper method implementations
//

#pragma implementation_key(434)
inline Outlook::_ApplicationPtr Outlook::Actions::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(435)
inline enum OlObjectClass Outlook::Actions::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(436)
inline Outlook::_NameSpacePtr Outlook::Actions::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(437)
inline IDispatchPtr Outlook::Actions::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(438)
inline long Outlook::Actions::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(439)
inline Outlook::ActionPtr Outlook::Actions::Item ( const _variant_t & Index ) {
    struct Action * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ActionPtr(_result, false);
}

#pragma implementation_key(440)
inline Outlook::ActionPtr Outlook::Actions::Add ( ) {
    struct Action * _result;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ActionPtr(_result, false);
}

#pragma implementation_key(441)
inline HRESULT Outlook::Actions::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

//
// dispinterface ApplicationEvents wrapper method implementations
//

#pragma implementation_key(442)
inline HRESULT Outlook::ApplicationEvents::ItemSend ( IDispatch * Item, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Item, Cancel);
}

#pragma implementation_key(443)
inline HRESULT Outlook::ApplicationEvents::NewMail ( ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(444)
inline HRESULT Outlook::ApplicationEvents::Reminder ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(445)
inline HRESULT Outlook::ApplicationEvents::OptionsPagesAdd ( struct PropertyPages * Pages ) {
    return _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Pages);
}

#pragma implementation_key(446)
inline HRESULT Outlook::ApplicationEvents::Startup ( ) {
    return _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(447)
inline HRESULT Outlook::ApplicationEvents::Quit ( ) {
    return _com_dispatch_method(this, 0xf007, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface PropertyPages wrapper method implementations
//

#pragma implementation_key(448)
inline Outlook::_ApplicationPtr Outlook::PropertyPages::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(449)
inline enum OlObjectClass Outlook::PropertyPages::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(450)
inline Outlook::_NameSpacePtr Outlook::PropertyPages::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(451)
inline IDispatchPtr Outlook::PropertyPages::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(452)
inline long Outlook::PropertyPages::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(453)
inline IDispatchPtr Outlook::PropertyPages::Item ( const _variant_t & Index ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(454)
inline HRESULT Outlook::PropertyPages::Add ( const _variant_t & Page, _bstr_t Title ) {
    return _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x0008", &Page, (BSTR)Title);
}

#pragma implementation_key(455)
inline HRESULT Outlook::PropertyPages::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

//
// dispinterface _AppointmentItem wrapper method implementations
//

#pragma implementation_key(456)
inline Outlook::_ApplicationPtr Outlook::_AppointmentItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(457)
inline enum OlObjectClass Outlook::_AppointmentItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(458)
inline Outlook::_NameSpacePtr Outlook::_AppointmentItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(459)
inline IDispatchPtr Outlook::_AppointmentItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(460)
inline Outlook::ActionsPtr Outlook::_AppointmentItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(461)
inline Outlook::AttachmentsPtr Outlook::_AppointmentItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(462)
inline _bstr_t Outlook::_AppointmentItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(463)
inline void Outlook::_AppointmentItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(464)
inline _bstr_t Outlook::_AppointmentItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(465)
inline void Outlook::_AppointmentItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(466)
inline _bstr_t Outlook::_AppointmentItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(467)
inline void Outlook::_AppointmentItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(468)
inline _bstr_t Outlook::_AppointmentItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(469)
inline void Outlook::_AppointmentItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(470)
inline _bstr_t Outlook::_AppointmentItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(471)
inline _bstr_t Outlook::_AppointmentItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(472)
inline DATE Outlook::_AppointmentItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(473)
inline _bstr_t Outlook::_AppointmentItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(474)
inline Outlook::FormDescriptionPtr Outlook::_AppointmentItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(475)
inline Outlook::_InspectorPtr Outlook::_AppointmentItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(476)
inline enum OlImportance Outlook::_AppointmentItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(477)
inline void Outlook::_AppointmentItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(478)
inline DATE Outlook::_AppointmentItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(479)
inline IUnknownPtr Outlook::_AppointmentItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(480)
inline _bstr_t Outlook::_AppointmentItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(481)
inline void Outlook::_AppointmentItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(482)
inline _bstr_t Outlook::_AppointmentItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(483)
inline void Outlook::_AppointmentItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(484)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(485)
inline void Outlook::_AppointmentItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(486)
inline long Outlook::_AppointmentItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(487)
inline _bstr_t Outlook::_AppointmentItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(488)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(489)
inline enum OlSensitivity Outlook::_AppointmentItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(490)
inline void Outlook::_AppointmentItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(491)
inline long Outlook::_AppointmentItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(492)
inline _bstr_t Outlook::_AppointmentItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(493)
inline void Outlook::_AppointmentItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(494)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(495)
inline void Outlook::_AppointmentItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(496)
inline Outlook::UserPropertiesPtr Outlook::_AppointmentItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(497)
inline HRESULT Outlook::_AppointmentItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(498)
inline IDispatchPtr Outlook::_AppointmentItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(499)
inline HRESULT Outlook::_AppointmentItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(500)
inline HRESULT Outlook::_AppointmentItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(501)
inline IDispatchPtr Outlook::_AppointmentItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(502)
inline HRESULT Outlook::_AppointmentItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(503)
inline HRESULT Outlook::_AppointmentItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(504)
inline HRESULT Outlook::_AppointmentItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(505)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetAllDayEvent ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8215, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(506)
inline void Outlook::_AppointmentItem::PutAllDayEvent ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8215, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(507)
inline enum OlBusyStatus Outlook::_AppointmentItem::GetBusyStatus ( ) {
    enum OlBusyStatus _result;
    _com_dispatch_method(this, 0x8205, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(508)
inline void Outlook::_AppointmentItem::PutBusyStatus ( enum OlBusyStatus _arg1 ) {
    _com_dispatch_method(this, 0x8205, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(509)
inline long Outlook::_AppointmentItem::GetDuration ( ) {
    long _result;
    _com_dispatch_method(this, 0x8213, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(510)
inline void Outlook::_AppointmentItem::PutDuration ( long _arg1 ) {
    _com_dispatch_method(this, 0x8213, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(511)
inline DATE Outlook::_AppointmentItem::GetEnd ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x820e, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(512)
inline void Outlook::_AppointmentItem::PutEnd ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x820e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(513)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetIsOnlineMeeting ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8240, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(514)
inline void Outlook::_AppointmentItem::PutIsOnlineMeeting ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8240, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(515)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetIsRecurring ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8223, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(516)
inline _bstr_t Outlook::_AppointmentItem::GetLocation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8208, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(517)
inline void Outlook::_AppointmentItem::PutLocation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8208, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(518)
inline enum OlMeetingStatus Outlook::_AppointmentItem::GetMeetingStatus ( ) {
    enum OlMeetingStatus _result;
    _com_dispatch_method(this, 0x8217, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(519)
inline void Outlook::_AppointmentItem::PutMeetingStatus ( enum OlMeetingStatus _arg1 ) {
    _com_dispatch_method(this, 0x8217, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(520)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetNetMeetingAutoStart ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8244, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(521)
inline void Outlook::_AppointmentItem::PutNetMeetingAutoStart ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8244, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(522)
inline _bstr_t Outlook::_AppointmentItem::GetNetMeetingOrganizerAlias ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8243, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(523)
inline void Outlook::_AppointmentItem::PutNetMeetingOrganizerAlias ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8243, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(524)
inline _bstr_t Outlook::_AppointmentItem::GetNetMeetingServer ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8242, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(525)
inline void Outlook::_AppointmentItem::PutNetMeetingServer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8242, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(526)
inline enum OlNetMeetingType Outlook::_AppointmentItem::GetNetMeetingType ( ) {
    enum OlNetMeetingType _result;
    _com_dispatch_method(this, 0x8241, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(527)
inline void Outlook::_AppointmentItem::PutNetMeetingType ( enum OlNetMeetingType _arg1 ) {
    _com_dispatch_method(this, 0x8241, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(528)
inline _bstr_t Outlook::_AppointmentItem::GetOptionalAttendees ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe03, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(529)
inline void Outlook::_AppointmentItem::PutOptionalAttendees ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe03, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(530)
inline _bstr_t Outlook::_AppointmentItem::GetOrganizer ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(531)
inline Outlook::RecipientsPtr Outlook::_AppointmentItem::GetRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf814, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(532)
inline enum OlRecurrenceState Outlook::_AppointmentItem::GetRecurrenceState ( ) {
    enum OlRecurrenceState _result;
    _com_dispatch_method(this, 0xf545, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(533)
inline long Outlook::_AppointmentItem::GetReminderMinutesBeforeStart ( ) {
    long _result;
    _com_dispatch_method(this, 0x8501, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(534)
inline void Outlook::_AppointmentItem::PutReminderMinutesBeforeStart ( long _arg1 ) {
    _com_dispatch_method(this, 0x8501, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(535)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetReminderOverrideDefault ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x851c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(536)
inline void Outlook::_AppointmentItem::PutReminderOverrideDefault ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x851c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(537)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetReminderPlaySound ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x851e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(538)
inline void Outlook::_AppointmentItem::PutReminderPlaySound ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x851e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(539)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetReminderSet ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(540)
inline void Outlook::_AppointmentItem::PutReminderSet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(541)
inline _bstr_t Outlook::_AppointmentItem::GetReminderSoundFile ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x851f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(542)
inline void Outlook::_AppointmentItem::PutReminderSoundFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x851f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(543)
inline DATE Outlook::_AppointmentItem::GetReplyTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8220, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(544)
inline void Outlook::_AppointmentItem::PutReplyTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8220, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(545)
inline _bstr_t Outlook::_AppointmentItem::GetRequiredAttendees ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe04, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(546)
inline void Outlook::_AppointmentItem::PutRequiredAttendees ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe04, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(547)
inline _bstr_t Outlook::_AppointmentItem::GetResources ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe02, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(548)
inline void Outlook::_AppointmentItem::PutResources ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe02, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(549)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetResponseRequested ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(550)
inline void Outlook::_AppointmentItem::PutResponseRequested ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(551)
inline enum OlResponseStatus Outlook::_AppointmentItem::GetResponseStatus ( ) {
    enum OlResponseStatus _result;
    _com_dispatch_method(this, 0x8218, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(552)
inline DATE Outlook::_AppointmentItem::GetStart ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x820d, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(553)
inline void Outlook::_AppointmentItem::PutStart ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x820d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(554)
inline HRESULT Outlook::_AppointmentItem::ClearRecurrencePattern ( ) {
    return _com_dispatch_method(this, 0xf0a5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(555)
inline Outlook::_MailItemPtr Outlook::_AppointmentItem::ForwardAsVcal ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf547, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(556)
inline Outlook::RecurrencePatternPtr Outlook::_AppointmentItem::GetRecurrencePattern ( ) {
    struct RecurrencePattern * _result;
    _com_dispatch_method(this, 0xf0a4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return RecurrencePatternPtr(_result, false);
}

#pragma implementation_key(557)
inline Outlook::_MeetingItemPtr Outlook::_AppointmentItem::Respond ( enum OlMeetingResponse Response, const _variant_t & fNoUI, const _variant_t & fAdditionalTextDialog ) {
    struct _MeetingItem * _result;
    _com_dispatch_method(this, 0xf502, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x080c\x080c", Response, &fNoUI, &fAdditionalTextDialog);
    return _MeetingItemPtr(_result, false);
}

#pragma implementation_key(558)
inline HRESULT Outlook::_AppointmentItem::Send ( ) {
    return _com_dispatch_method(this, 0xf075, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(559)
inline _bstr_t Outlook::_AppointmentItem::GetNetMeetingDocPathName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8247, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(560)
inline void Outlook::_AppointmentItem::PutNetMeetingDocPathName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8247, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(561)
inline _bstr_t Outlook::_AppointmentItem::GetNetShowURL ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8248, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(562)
inline void Outlook::_AppointmentItem::PutNetShowURL ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8248, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(563)
inline Outlook::LinksPtr Outlook::_AppointmentItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(564)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetConferenceServerAllowExternal ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8246, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(565)
inline void Outlook::_AppointmentItem::PutConferenceServerAllowExternal ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8246, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(566)
inline _bstr_t Outlook::_AppointmentItem::GetConferenceServerPassword ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8249, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(567)
inline void Outlook::_AppointmentItem::PutConferenceServerPassword ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8249, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(568)
inline Outlook::ItemPropertiesPtr Outlook::_AppointmentItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(569)
inline enum OlDownloadState Outlook::_AppointmentItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(570)
inline HRESULT Outlook::_AppointmentItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(571)
inline long Outlook::_AppointmentItem::GetInternetCodepage ( ) {
    long _result;
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(572)
inline void Outlook::_AppointmentItem::PutInternetCodepage ( long _arg1 ) {
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(573)
inline enum OlRemoteStatus Outlook::_AppointmentItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(574)
inline void Outlook::_AppointmentItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(575)
inline VARIANT_BOOL Outlook::_AppointmentItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Attachments wrapper method implementations
//

#pragma implementation_key(576)
inline Outlook::_ApplicationPtr Outlook::Attachments::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(577)
inline enum OlObjectClass Outlook::Attachments::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(578)
inline Outlook::_NameSpacePtr Outlook::Attachments::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(579)
inline IDispatchPtr Outlook::Attachments::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(580)
inline long Outlook::Attachments::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(581)
inline Outlook::AttachmentPtr Outlook::Attachments::Item ( const _variant_t & Index ) {
    struct Attachment * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AttachmentPtr(_result, false);
}

#pragma implementation_key(582)
inline Outlook::AttachmentPtr Outlook::Attachments::Add ( const _variant_t & Source, const _variant_t & Type, const _variant_t & Position, const _variant_t & DisplayName ) {
    struct Attachment * _result;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c", &Source, &Type, &Position, &DisplayName);
    return AttachmentPtr(_result, false);
}

#pragma implementation_key(583)
inline HRESULT Outlook::Attachments::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

//
// dispinterface Attachment wrapper method implementations
//

#pragma implementation_key(584)
inline Outlook::_ApplicationPtr Outlook::Attachment::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(585)
inline enum OlObjectClass Outlook::Attachment::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(586)
inline Outlook::_NameSpacePtr Outlook::Attachment::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(587)
inline IDispatchPtr Outlook::Attachment::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(588)
inline _bstr_t Outlook::Attachment::GetDisplayName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(589)
inline void Outlook::Attachment::PutDisplayName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(590)
inline _bstr_t Outlook::Attachment::GetFileName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3704, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(591)
inline long Outlook::Attachment::GetIndex ( ) {
    long _result;
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(592)
inline IUnknownPtr Outlook::Attachment::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(593)
inline _bstr_t Outlook::Attachment::GetPathName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3708, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(594)
inline long Outlook::Attachment::GetPosition ( ) {
    long _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(595)
inline void Outlook::Attachment::PutPosition ( long _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(596)
inline enum OlAttachmentType Outlook::Attachment::GetType ( ) {
    enum OlAttachmentType _result;
    _com_dispatch_method(this, 0x3705, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(597)
inline HRESULT Outlook::Attachment::Delete ( ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(598)
inline HRESULT Outlook::Attachment::SaveAsFile ( _bstr_t Path ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Path);
}

//
// dispinterface FormDescription wrapper method implementations
//

#pragma implementation_key(599)
inline Outlook::_ApplicationPtr Outlook::FormDescription::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(600)
inline enum OlObjectClass Outlook::FormDescription::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(601)
inline Outlook::_NameSpacePtr Outlook::FormDescription::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(602)
inline IDispatchPtr Outlook::FormDescription::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(603)
inline _bstr_t Outlook::FormDescription::GetCategory ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3304, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(604)
inline void Outlook::FormDescription::PutCategory ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3304, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(605)
inline _bstr_t Outlook::FormDescription::GetCategorySub ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3305, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(606)
inline void Outlook::FormDescription::PutCategorySub ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3305, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(607)
inline _bstr_t Outlook::FormDescription::GetComment ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(608)
inline void Outlook::FormDescription::PutComment ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(609)
inline _bstr_t Outlook::FormDescription::GetContactName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3303, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(610)
inline void Outlook::FormDescription::PutContactName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3303, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(611)
inline _bstr_t Outlook::FormDescription::GetDisplayName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(612)
inline void Outlook::FormDescription::PutDisplayName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(613)
inline VARIANT_BOOL Outlook::FormDescription::GetHidden ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x3307, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(614)
inline void Outlook::FormDescription::PutHidden ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3307, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(615)
inline _bstr_t Outlook::FormDescription::GetIcon ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xffd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(616)
inline void Outlook::FormDescription::PutIcon ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xffd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(617)
inline VARIANT_BOOL Outlook::FormDescription::GetLocked ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(618)
inline void Outlook::FormDescription::PutLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(619)
inline _bstr_t Outlook::FormDescription::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(620)
inline _bstr_t Outlook::FormDescription::GetMiniIcon ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xffc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(621)
inline void Outlook::FormDescription::PutMiniIcon ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xffc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(622)
inline _bstr_t Outlook::FormDescription::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(623)
inline void Outlook::FormDescription::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf01d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(624)
inline _bstr_t Outlook::FormDescription::GetNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(625)
inline void Outlook::FormDescription::PutNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(626)
inline VARIANT_BOOL Outlook::FormDescription::GetOneOff ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(627)
inline void Outlook::FormDescription::PutOneOff ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(628)
inline _bstr_t Outlook::FormDescription::GetPassword ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(629)
inline void Outlook::FormDescription::PutPassword ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(630)
inline _bstr_t Outlook::FormDescription::GetScriptText ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(631)
inline _bstr_t Outlook::FormDescription::GetTemplate ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(632)
inline void Outlook::FormDescription::PutTemplate ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(633)
inline VARIANT_BOOL Outlook::FormDescription::GetUseWordMail ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(634)
inline void Outlook::FormDescription::PutUseWordMail ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(635)
inline _bstr_t Outlook::FormDescription::GetVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3301, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(636)
inline void Outlook::FormDescription::PutVersion ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3301, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(637)
inline HRESULT Outlook::FormDescription::PublishForm ( enum OlFormRegistry Registry, const _variant_t & Folder ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c", Registry, &Folder);
}

//
// dispinterface UserProperties wrapper method implementations
//

#pragma implementation_key(638)
inline Outlook::_ApplicationPtr Outlook::UserProperties::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(639)
inline enum OlObjectClass Outlook::UserProperties::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(640)
inline Outlook::_NameSpacePtr Outlook::UserProperties::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(641)
inline IDispatchPtr Outlook::UserProperties::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(642)
inline long Outlook::UserProperties::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(643)
inline Outlook::UserPropertyPtr Outlook::UserProperties::Item ( const _variant_t & Index ) {
    struct UserProperty * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return UserPropertyPtr(_result, false);
}

#pragma implementation_key(644)
inline Outlook::UserPropertyPtr Outlook::UserProperties::Add ( _bstr_t Name, enum OlUserPropertyType Type, const _variant_t & AddToFolderFields, const _variant_t & DisplayFormat ) {
    struct UserProperty * _result;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x080c\x080c", (BSTR)Name, Type, &AddToFolderFields, &DisplayFormat);
    return UserPropertyPtr(_result, false);
}

#pragma implementation_key(645)
inline Outlook::UserPropertyPtr Outlook::UserProperties::Find ( _bstr_t Name, const _variant_t & Custom ) {
    struct UserProperty * _result;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)Name, &Custom);
    return UserPropertyPtr(_result, false);
}

#pragma implementation_key(646)
inline HRESULT Outlook::UserProperties::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

//
// dispinterface UserProperty wrapper method implementations
//

#pragma implementation_key(647)
inline Outlook::_ApplicationPtr Outlook::UserProperty::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(648)
inline enum OlObjectClass Outlook::UserProperty::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(649)
inline Outlook::_NameSpacePtr Outlook::UserProperty::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(650)
inline IDispatchPtr Outlook::UserProperty::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(651)
inline _bstr_t Outlook::UserProperty::GetFormula ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(652)
inline void Outlook::UserProperty::PutFormula ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(653)
inline _bstr_t Outlook::UserProperty::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(654)
inline enum OlUserPropertyType Outlook::UserProperty::GetType ( ) {
    enum OlUserPropertyType _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(655)
inline _bstr_t Outlook::UserProperty::GetValidationFormula ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(656)
inline void Outlook::UserProperty::PutValidationFormula ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(657)
inline _bstr_t Outlook::UserProperty::GetValidationText ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(658)
inline void Outlook::UserProperty::PutValidationText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(659)
inline _variant_t Outlook::UserProperty::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(660)
inline void Outlook::UserProperty::PutValue ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(661)
inline HRESULT Outlook::UserProperty::Delete ( ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(662)
inline VARIANT_BOOL Outlook::UserProperty::GetIsUserProperty ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa08, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Recipients wrapper method implementations
//

#pragma implementation_key(663)
inline Outlook::_ApplicationPtr Outlook::Recipients::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(664)
inline enum OlObjectClass Outlook::Recipients::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(665)
inline Outlook::_NameSpacePtr Outlook::Recipients::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(666)
inline IDispatchPtr Outlook::Recipients::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(667)
inline long Outlook::Recipients::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(668)
inline Outlook::RecipientPtr Outlook::Recipients::Item ( const _variant_t & Index ) {
    struct Recipient * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RecipientPtr(_result, false);
}

#pragma implementation_key(669)
inline Outlook::RecipientPtr Outlook::Recipients::Add ( _bstr_t Name ) {
    struct Recipient * _result;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return RecipientPtr(_result, false);
}

#pragma implementation_key(670)
inline HRESULT Outlook::Recipients::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(671)
inline VARIANT_BOOL Outlook::Recipients::ResolveAll ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _MailItem wrapper method implementations
//

#pragma implementation_key(672)
inline Outlook::_ApplicationPtr Outlook::_MailItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(673)
inline enum OlObjectClass Outlook::_MailItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(674)
inline Outlook::_NameSpacePtr Outlook::_MailItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(675)
inline IDispatchPtr Outlook::_MailItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(676)
inline Outlook::ActionsPtr Outlook::_MailItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(677)
inline Outlook::AttachmentsPtr Outlook::_MailItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(678)
inline _bstr_t Outlook::_MailItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(679)
inline void Outlook::_MailItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(680)
inline _bstr_t Outlook::_MailItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(681)
inline void Outlook::_MailItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(682)
inline _bstr_t Outlook::_MailItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(683)
inline void Outlook::_MailItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(684)
inline _bstr_t Outlook::_MailItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(685)
inline void Outlook::_MailItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(686)
inline _bstr_t Outlook::_MailItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(687)
inline _bstr_t Outlook::_MailItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(688)
inline DATE Outlook::_MailItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(689)
inline _bstr_t Outlook::_MailItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(690)
inline Outlook::FormDescriptionPtr Outlook::_MailItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(691)
inline Outlook::_InspectorPtr Outlook::_MailItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(692)
inline enum OlImportance Outlook::_MailItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(693)
inline void Outlook::_MailItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(694)
inline DATE Outlook::_MailItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(695)
inline IUnknownPtr Outlook::_MailItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(696)
inline _bstr_t Outlook::_MailItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(697)
inline void Outlook::_MailItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(698)
inline _bstr_t Outlook::_MailItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(699)
inline void Outlook::_MailItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(700)
inline VARIANT_BOOL Outlook::_MailItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(701)
inline void Outlook::_MailItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(702)
inline long Outlook::_MailItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(703)
inline _bstr_t Outlook::_MailItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(704)
inline VARIANT_BOOL Outlook::_MailItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(705)
inline enum OlSensitivity Outlook::_MailItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(706)
inline void Outlook::_MailItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(707)
inline long Outlook::_MailItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(708)
inline _bstr_t Outlook::_MailItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(709)
inline void Outlook::_MailItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(710)
inline VARIANT_BOOL Outlook::_MailItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(711)
inline void Outlook::_MailItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(712)
inline Outlook::UserPropertiesPtr Outlook::_MailItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(713)
inline HRESULT Outlook::_MailItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(714)
inline IDispatchPtr Outlook::_MailItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(715)
inline HRESULT Outlook::_MailItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(716)
inline HRESULT Outlook::_MailItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(717)
inline IDispatchPtr Outlook::_MailItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(718)
inline HRESULT Outlook::_MailItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(719)
inline HRESULT Outlook::_MailItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(720)
inline HRESULT Outlook::_MailItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(721)
inline VARIANT_BOOL Outlook::_MailItem::GetAlternateRecipientAllowed ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(722)
inline void Outlook::_MailItem::PutAlternateRecipientAllowed ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(723)
inline VARIANT_BOOL Outlook::_MailItem::GetAutoForwarded ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(724)
inline void Outlook::_MailItem::PutAutoForwarded ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(725)
inline _bstr_t Outlook::_MailItem::GetBCC ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe02, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(726)
inline void Outlook::_MailItem::PutBCC ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe02, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(727)
inline _bstr_t Outlook::_MailItem::GetCC ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe03, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(728)
inline void Outlook::_MailItem::PutCC ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe03, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(729)
inline DATE Outlook::_MailItem::GetDeferredDeliveryTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(730)
inline void Outlook::_MailItem::PutDeferredDeliveryTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(731)
inline VARIANT_BOOL Outlook::_MailItem::GetDeleteAfterSubmit ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xe01, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(732)
inline void Outlook::_MailItem::PutDeleteAfterSubmit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe01, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(733)
inline DATE Outlook::_MailItem::GetExpiryTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(734)
inline void Outlook::_MailItem::PutExpiryTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(735)
inline DATE Outlook::_MailItem::GetFlagDueBy ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(736)
inline void Outlook::_MailItem::PutFlagDueBy ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(737)
inline _bstr_t Outlook::_MailItem::GetFlagRequest ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8530, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(738)
inline void Outlook::_MailItem::PutFlagRequest ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8530, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(739)
inline enum OlFlagStatus Outlook::_MailItem::GetFlagStatus ( ) {
    enum OlFlagStatus _result;
    _com_dispatch_method(this, 0x1090, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(740)
inline void Outlook::_MailItem::PutFlagStatus ( enum OlFlagStatus _arg1 ) {
    _com_dispatch_method(this, 0x1090, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(741)
inline _bstr_t Outlook::_MailItem::GetHTMLBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf404, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(742)
inline void Outlook::_MailItem::PutHTMLBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf404, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(743)
inline VARIANT_BOOL Outlook::_MailItem::GetOriginatorDeliveryReportRequested ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(744)
inline void Outlook::_MailItem::PutOriginatorDeliveryReportRequested ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(745)
inline VARIANT_BOOL Outlook::_MailItem::GetReadReceiptRequested ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(746)
inline void Outlook::_MailItem::PutReadReceiptRequested ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(747)
inline _bstr_t Outlook::_MailItem::GetReceivedByEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(748)
inline _bstr_t Outlook::_MailItem::GetReceivedByName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x40, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(749)
inline _bstr_t Outlook::_MailItem::GetReceivedOnBehalfOfEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(750)
inline _bstr_t Outlook::_MailItem::GetReceivedOnBehalfOfName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(751)
inline DATE Outlook::_MailItem::GetReceivedTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xe06, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(752)
inline VARIANT_BOOL Outlook::_MailItem::GetRecipientReassignmentProhibited ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(753)
inline void Outlook::_MailItem::PutRecipientReassignmentProhibited ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(754)
inline Outlook::RecipientsPtr Outlook::_MailItem::GetRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf814, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(755)
inline VARIANT_BOOL Outlook::_MailItem::GetReminderOverrideDefault ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x851c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(756)
inline void Outlook::_MailItem::PutReminderOverrideDefault ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x851c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(757)
inline VARIANT_BOOL Outlook::_MailItem::GetReminderPlaySound ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x851e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(758)
inline void Outlook::_MailItem::PutReminderPlaySound ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x851e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(759)
inline VARIANT_BOOL Outlook::_MailItem::GetReminderSet ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(760)
inline void Outlook::_MailItem::PutReminderSet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(761)
inline _bstr_t Outlook::_MailItem::GetReminderSoundFile ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x851f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(762)
inline void Outlook::_MailItem::PutReminderSoundFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x851f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(763)
inline DATE Outlook::_MailItem::GetReminderTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8502, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(764)
inline void Outlook::_MailItem::PutReminderTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8502, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(765)
inline enum OlRemoteStatus Outlook::_MailItem::GetRemoteStatus ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8511, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(766)
inline void Outlook::_MailItem::PutRemoteStatus ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8511, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(767)
inline _bstr_t Outlook::_MailItem::GetReplyRecipientNames ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(768)
inline Outlook::RecipientsPtr Outlook::_MailItem::GetReplyRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf013, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(769)
inline Outlook::MAPIFolderPtr Outlook::_MailItem::GetSaveSentMessageFolder ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0xf401, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(770)
inline void Outlook::_MailItem::PutRefSaveSentMessageFolder ( struct MAPIFolder * _arg1 ) {
    _com_dispatch_method(this, 0xf401, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(771)
inline _bstr_t Outlook::_MailItem::GetSenderName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xc1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(772)
inline VARIANT_BOOL Outlook::_MailItem::GetSent ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf402, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(773)
inline DATE Outlook::_MailItem::GetSentOn ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(774)
inline _bstr_t Outlook::_MailItem::GetSentOnBehalfOfName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(775)
inline void Outlook::_MailItem::PutSentOnBehalfOfName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(776)
inline VARIANT_BOOL Outlook::_MailItem::GetSubmitted ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf403, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(777)
inline _bstr_t Outlook::_MailItem::GetTo ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe04, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(778)
inline void Outlook::_MailItem::PutTo ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe04, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(779)
inline _bstr_t Outlook::_MailItem::GetVotingOptions ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(780)
inline void Outlook::_MailItem::PutVotingOptions ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf01b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(781)
inline _bstr_t Outlook::_MailItem::GetVotingResponse ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8524, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(782)
inline void Outlook::_MailItem::PutVotingResponse ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8524, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(783)
inline HRESULT Outlook::_MailItem::ClearConversationIndex ( ) {
    return _com_dispatch_method(this, 0xf822, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(784)
inline Outlook::_MailItemPtr Outlook::_MailItem::Forward ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(785)
inline Outlook::_MailItemPtr Outlook::_MailItem::Reply ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf810, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(786)
inline Outlook::_MailItemPtr Outlook::_MailItem::ReplyAll ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf811, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(787)
inline HRESULT Outlook::_MailItem::Send ( ) {
    return _com_dispatch_method(this, 0xf075, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(788)
inline Outlook::LinksPtr Outlook::_MailItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(789)
inline Outlook::ItemPropertiesPtr Outlook::_MailItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(790)
inline enum OlBodyFormat Outlook::_MailItem::GetBodyFormat ( ) {
    enum OlBodyFormat _result;
    _com_dispatch_method(this, 0xfa49, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(791)
inline void Outlook::_MailItem::PutBodyFormat ( enum OlBodyFormat _arg1 ) {
    _com_dispatch_method(this, 0xfa49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(792)
inline enum OlDownloadState Outlook::_MailItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(793)
inline HRESULT Outlook::_MailItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(794)
inline long Outlook::_MailItem::GetInternetCodepage ( ) {
    long _result;
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(795)
inline void Outlook::_MailItem::PutInternetCodepage ( long _arg1 ) {
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(796)
inline enum OlRemoteStatus Outlook::_MailItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(797)
inline void Outlook::_MailItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(798)
inline VARIANT_BOOL Outlook::_MailItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Links wrapper method implementations
//

#pragma implementation_key(799)
inline Outlook::_ApplicationPtr Outlook::Links::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(800)
inline enum OlObjectClass Outlook::Links::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(801)
inline Outlook::_NameSpacePtr Outlook::Links::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(802)
inline IDispatchPtr Outlook::Links::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(803)
inline long Outlook::Links::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(804)
inline Outlook::LinkPtr Outlook::Links::Item ( const _variant_t & Index ) {
    struct Link * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LinkPtr(_result, false);
}

#pragma implementation_key(805)
inline Outlook::LinkPtr Outlook::Links::Add ( IDispatch * Item ) {
    struct Link * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Item);
    return LinkPtr(_result, false);
}

#pragma implementation_key(806)
inline HRESULT Outlook::Links::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

//
// dispinterface Link wrapper method implementations
//

#pragma implementation_key(807)
inline Outlook::_ApplicationPtr Outlook::Link::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(808)
inline enum OlObjectClass Outlook::Link::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(809)
inline Outlook::_NameSpacePtr Outlook::Link::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(810)
inline IDispatchPtr Outlook::Link::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(811)
inline _bstr_t Outlook::Link::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(812)
inline enum OlObjectClass Outlook::Link::GetType ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0x2101, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(813)
inline IDispatchPtr Outlook::Link::GetItem ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x2102, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface ItemProperties wrapper method implementations
//

#pragma implementation_key(814)
inline Outlook::_ApplicationPtr Outlook::ItemProperties::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(815)
inline enum OlObjectClass Outlook::ItemProperties::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(816)
inline Outlook::_NameSpacePtr Outlook::ItemProperties::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(817)
inline IDispatchPtr Outlook::ItemProperties::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(818)
inline long Outlook::ItemProperties::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(819)
inline Outlook::ItemPropertyPtr Outlook::ItemProperties::Item ( const _variant_t & Index ) {
    struct ItemProperty * _result;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ItemPropertyPtr(_result, false);
}

#pragma implementation_key(820)
inline IUnknownPtr Outlook::ItemProperties::_NewEnum ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xfffffffc, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(821)
inline Outlook::ItemPropertyPtr Outlook::ItemProperties::Add ( _bstr_t Name, enum OlUserPropertyType Type, const _variant_t & AddToFolderFields, const _variant_t & DisplayFormat ) {
    struct ItemProperty * _result;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x080c\x080c", (BSTR)Name, Type, &AddToFolderFields, &DisplayFormat);
    return ItemPropertyPtr(_result, false);
}

#pragma implementation_key(822)
inline HRESULT Outlook::ItemProperties::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

//
// dispinterface ItemProperty wrapper method implementations
//

#pragma implementation_key(823)
inline Outlook::_ApplicationPtr Outlook::ItemProperty::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(824)
inline enum OlObjectClass Outlook::ItemProperty::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(825)
inline Outlook::_NameSpacePtr Outlook::ItemProperty::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(826)
inline IDispatchPtr Outlook::ItemProperty::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(827)
inline _bstr_t Outlook::ItemProperty::GetFormula ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(828)
inline void Outlook::ItemProperty::PutFormula ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(829)
inline _bstr_t Outlook::ItemProperty::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(830)
inline enum OlUserPropertyType Outlook::ItemProperty::GetType ( ) {
    enum OlUserPropertyType _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(831)
inline _bstr_t Outlook::ItemProperty::GetValidationFormula ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(832)
inline void Outlook::ItemProperty::PutValidationFormula ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(833)
inline _bstr_t Outlook::ItemProperty::GetValidationText ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(834)
inline void Outlook::ItemProperty::PutValidationText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(835)
inline _variant_t Outlook::ItemProperty::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(836)
inline void Outlook::ItemProperty::PutValue ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(837)
inline HRESULT Outlook::ItemProperty::Delete ( ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(838)
inline VARIANT_BOOL Outlook::ItemProperty::GetIsUserProperty ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfa08, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface ItemEvents wrapper method implementations
//

#pragma implementation_key(839)
inline HRESULT Outlook::ItemEvents::Open ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(840)
inline HRESULT Outlook::ItemEvents::CustomAction ( IDispatch * Action, IDispatch * Response, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x400b", Action, Response, Cancel);
}

#pragma implementation_key(841)
inline HRESULT Outlook::ItemEvents::CustomPropertyChange ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0xf008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(842)
inline HRESULT Outlook::ItemEvents::Forward ( IDispatch * Forward, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf468, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Forward, Cancel);
}

#pragma implementation_key(843)
inline HRESULT Outlook::ItemEvents::Close ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(844)
inline HRESULT Outlook::ItemEvents::PropertyChange ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0xf009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(845)
inline HRESULT Outlook::ItemEvents::Read ( ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(846)
inline HRESULT Outlook::ItemEvents::Reply ( IDispatch * Response, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf466, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Response, Cancel);
}

#pragma implementation_key(847)
inline HRESULT Outlook::ItemEvents::ReplyAll ( IDispatch * Response, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf467, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Response, Cancel);
}

#pragma implementation_key(848)
inline HRESULT Outlook::ItemEvents::Send ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(849)
inline HRESULT Outlook::ItemEvents::Write ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(850)
inline HRESULT Outlook::ItemEvents::BeforeCheckNames ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf00a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(851)
inline HRESULT Outlook::ItemEvents::AttachmentAdd ( struct Attachment * Attachment ) {
    return _com_dispatch_method(this, 0xf00b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Attachment);
}

#pragma implementation_key(852)
inline HRESULT Outlook::ItemEvents::AttachmentRead ( struct Attachment * Attachment ) {
    return _com_dispatch_method(this, 0xf00c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Attachment);
}

#pragma implementation_key(853)
inline HRESULT Outlook::ItemEvents::BeforeAttachmentSave ( struct Attachment * Attachment, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf00d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Attachment, Cancel);
}

//
// dispinterface ItemEvents_10 wrapper method implementations
//

#pragma implementation_key(854)
inline HRESULT Outlook::ItemEvents_10::Open ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(855)
inline HRESULT Outlook::ItemEvents_10::CustomAction ( IDispatch * Action, IDispatch * Response, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x0009\x400b", Action, Response, Cancel);
    return _result;
}

#pragma implementation_key(856)
inline HRESULT Outlook::ItemEvents_10::CustomPropertyChange ( _bstr_t Name ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf008, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(857)
inline HRESULT Outlook::ItemEvents_10::Forward ( IDispatch * Forward, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf468, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x400b", Forward, Cancel);
    return _result;
}

#pragma implementation_key(858)
inline HRESULT Outlook::ItemEvents_10::Close ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(859)
inline HRESULT Outlook::ItemEvents_10::PropertyChange ( _bstr_t Name ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf009, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(860)
inline HRESULT Outlook::ItemEvents_10::Read ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(861)
inline HRESULT Outlook::ItemEvents_10::Reply ( IDispatch * Response, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf466, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x400b", Response, Cancel);
    return _result;
}

#pragma implementation_key(862)
inline HRESULT Outlook::ItemEvents_10::ReplyAll ( IDispatch * Response, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf467, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x400b", Response, Cancel);
    return _result;
}

#pragma implementation_key(863)
inline HRESULT Outlook::ItemEvents_10::Send ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(864)
inline HRESULT Outlook::ItemEvents_10::Write ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(865)
inline HRESULT Outlook::ItemEvents_10::BeforeCheckNames ( VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x400b", Cancel);
    return _result;
}

#pragma implementation_key(866)
inline HRESULT Outlook::ItemEvents_10::AttachmentAdd ( struct Attachment * Attachment ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009", Attachment);
    return _result;
}

#pragma implementation_key(867)
inline HRESULT Outlook::ItemEvents_10::AttachmentRead ( struct Attachment * Attachment ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf00c, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009", Attachment);
    return _result;
}

#pragma implementation_key(868)
inline HRESULT Outlook::ItemEvents_10::BeforeAttachmentSave ( struct Attachment * Attachment, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf00d, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x400b", Attachment, Cancel);
    return _result;
}

#pragma implementation_key(869)
inline HRESULT Outlook::ItemEvents_10::BeforeDelete ( IDispatch * Item, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xfa75, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Item, Cancel);
}

//
// dispinterface RecurrencePattern wrapper method implementations
//

#pragma implementation_key(870)
inline Outlook::_ApplicationPtr Outlook::RecurrencePattern::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(871)
inline enum OlObjectClass Outlook::RecurrencePattern::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(872)
inline Outlook::_NameSpacePtr Outlook::RecurrencePattern::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(873)
inline IDispatchPtr Outlook::RecurrencePattern::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(874)
inline long Outlook::RecurrencePattern::GetDayOfMonth ( ) {
    long _result;
    _com_dispatch_method(this, 0x1000, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(875)
inline void Outlook::RecurrencePattern::PutDayOfMonth ( long _arg1 ) {
    _com_dispatch_method(this, 0x1000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(876)
inline enum OlDaysOfWeek Outlook::RecurrencePattern::GetDayOfWeekMask ( ) {
    enum OlDaysOfWeek _result;
    _com_dispatch_method(this, 0x1001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(877)
inline void Outlook::RecurrencePattern::PutDayOfWeekMask ( enum OlDaysOfWeek _arg1 ) {
    _com_dispatch_method(this, 0x1001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(878)
inline long Outlook::RecurrencePattern::GetDuration ( ) {
    long _result;
    _com_dispatch_method(this, 0x100d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(879)
inline void Outlook::RecurrencePattern::PutDuration ( long _arg1 ) {
    _com_dispatch_method(this, 0x100d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(880)
inline DATE Outlook::RecurrencePattern::GetEndTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x100c, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(881)
inline void Outlook::RecurrencePattern::PutEndTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x100c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(882)
inline Outlook::ExceptionsPtr Outlook::RecurrencePattern::GetExceptions ( ) {
    struct Exceptions * _result;
    _com_dispatch_method(this, 0x100e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ExceptionsPtr(_result, false);
}

#pragma implementation_key(883)
inline long Outlook::RecurrencePattern::GetInstance ( ) {
    long _result;
    _com_dispatch_method(this, 0x1003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(884)
inline void Outlook::RecurrencePattern::PutInstance ( long _arg1 ) {
    _com_dispatch_method(this, 0x1003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(885)
inline long Outlook::RecurrencePattern::GetInterval ( ) {
    long _result;
    _com_dispatch_method(this, 0x1004, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(886)
inline void Outlook::RecurrencePattern::PutInterval ( long _arg1 ) {
    _com_dispatch_method(this, 0x1004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(887)
inline long Outlook::RecurrencePattern::GetMonthOfYear ( ) {
    long _result;
    _com_dispatch_method(this, 0x1006, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(888)
inline void Outlook::RecurrencePattern::PutMonthOfYear ( long _arg1 ) {
    _com_dispatch_method(this, 0x1006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(889)
inline VARIANT_BOOL Outlook::RecurrencePattern::GetNoEndDate ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x100b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(890)
inline void Outlook::RecurrencePattern::PutNoEndDate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x100b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(891)
inline long Outlook::RecurrencePattern::GetOccurrences ( ) {
    long _result;
    _com_dispatch_method(this, 0x1005, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(892)
inline void Outlook::RecurrencePattern::PutOccurrences ( long _arg1 ) {
    _com_dispatch_method(this, 0x1005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(893)
inline DATE Outlook::RecurrencePattern::GetPatternEndDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x1002, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(894)
inline void Outlook::RecurrencePattern::PutPatternEndDate ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x1002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(895)
inline DATE Outlook::RecurrencePattern::GetPatternStartDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x1008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(896)
inline void Outlook::RecurrencePattern::PutPatternStartDate ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x1008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(897)
inline enum OlRecurrenceType Outlook::RecurrencePattern::GetRecurrenceType ( ) {
    enum OlRecurrenceType _result;
    _com_dispatch_method(this, 0x1007, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(898)
inline void Outlook::RecurrencePattern::PutRecurrenceType ( enum OlRecurrenceType _arg1 ) {
    _com_dispatch_method(this, 0x1007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(899)
inline VARIANT_BOOL Outlook::RecurrencePattern::GetRegenerate ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x100a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(900)
inline void Outlook::RecurrencePattern::PutRegenerate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x100a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(901)
inline DATE Outlook::RecurrencePattern::GetStartTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x1009, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(902)
inline void Outlook::RecurrencePattern::PutStartTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x1009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(903)
inline Outlook::_AppointmentItemPtr Outlook::RecurrencePattern::GetOccurrence ( DATE StartDate ) {
    struct _AppointmentItem * _result;
    _com_dispatch_method(this, 0x100f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0007", StartDate);
    return _AppointmentItemPtr(_result, false);
}

//
// dispinterface Exceptions wrapper method implementations
//

#pragma implementation_key(904)
inline Outlook::_ApplicationPtr Outlook::Exceptions::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(905)
inline enum OlObjectClass Outlook::Exceptions::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(906)
inline Outlook::_NameSpacePtr Outlook::Exceptions::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(907)
inline IDispatchPtr Outlook::Exceptions::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(908)
inline long Outlook::Exceptions::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(909)
inline Outlook::ExceptionPtr Outlook::Exceptions::Item ( const _variant_t & Index ) {
    struct Exception * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ExceptionPtr(_result, false);
}

//
// dispinterface Exception wrapper method implementations
//

#pragma implementation_key(910)
inline Outlook::_ApplicationPtr Outlook::Exception::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(911)
inline enum OlObjectClass Outlook::Exception::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(912)
inline Outlook::_NameSpacePtr Outlook::Exception::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(913)
inline IDispatchPtr Outlook::Exception::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(914)
inline Outlook::_AppointmentItemPtr Outlook::Exception::GetAppointmentItem ( ) {
    struct _AppointmentItem * _result;
    _com_dispatch_method(this, 0x2001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _AppointmentItemPtr(_result, false);
}

#pragma implementation_key(915)
inline VARIANT_BOOL Outlook::Exception::GetDeleted ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x2002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(916)
inline DATE Outlook::Exception::GetOriginalDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x2000, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(917)
inline Outlook::ItemPropertiesPtr Outlook::Exception::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

//
// dispinterface _MeetingItem wrapper method implementations
//

#pragma implementation_key(918)
inline Outlook::_ApplicationPtr Outlook::_MeetingItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(919)
inline enum OlObjectClass Outlook::_MeetingItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(920)
inline Outlook::_NameSpacePtr Outlook::_MeetingItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(921)
inline IDispatchPtr Outlook::_MeetingItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(922)
inline Outlook::ActionsPtr Outlook::_MeetingItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(923)
inline Outlook::AttachmentsPtr Outlook::_MeetingItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(924)
inline _bstr_t Outlook::_MeetingItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(925)
inline void Outlook::_MeetingItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(926)
inline _bstr_t Outlook::_MeetingItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(927)
inline void Outlook::_MeetingItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(928)
inline _bstr_t Outlook::_MeetingItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(929)
inline void Outlook::_MeetingItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(930)
inline _bstr_t Outlook::_MeetingItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(931)
inline void Outlook::_MeetingItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(932)
inline _bstr_t Outlook::_MeetingItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(933)
inline _bstr_t Outlook::_MeetingItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(934)
inline DATE Outlook::_MeetingItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(935)
inline _bstr_t Outlook::_MeetingItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(936)
inline Outlook::FormDescriptionPtr Outlook::_MeetingItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(937)
inline Outlook::_InspectorPtr Outlook::_MeetingItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(938)
inline enum OlImportance Outlook::_MeetingItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(939)
inline void Outlook::_MeetingItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(940)
inline DATE Outlook::_MeetingItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(941)
inline IUnknownPtr Outlook::_MeetingItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(942)
inline _bstr_t Outlook::_MeetingItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(943)
inline void Outlook::_MeetingItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(944)
inline _bstr_t Outlook::_MeetingItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(945)
inline void Outlook::_MeetingItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(946)
inline VARIANT_BOOL Outlook::_MeetingItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(947)
inline void Outlook::_MeetingItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(948)
inline long Outlook::_MeetingItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(949)
inline _bstr_t Outlook::_MeetingItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(950)
inline VARIANT_BOOL Outlook::_MeetingItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(951)
inline enum OlSensitivity Outlook::_MeetingItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(952)
inline void Outlook::_MeetingItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(953)
inline long Outlook::_MeetingItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(954)
inline _bstr_t Outlook::_MeetingItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(955)
inline void Outlook::_MeetingItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(956)
inline VARIANT_BOOL Outlook::_MeetingItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(957)
inline void Outlook::_MeetingItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(958)
inline Outlook::UserPropertiesPtr Outlook::_MeetingItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(959)
inline HRESULT Outlook::_MeetingItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(960)
inline IDispatchPtr Outlook::_MeetingItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(961)
inline HRESULT Outlook::_MeetingItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(962)
inline HRESULT Outlook::_MeetingItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(963)
inline IDispatchPtr Outlook::_MeetingItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(964)
inline HRESULT Outlook::_MeetingItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(965)
inline HRESULT Outlook::_MeetingItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(966)
inline HRESULT Outlook::_MeetingItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(967)
inline VARIANT_BOOL Outlook::_MeetingItem::GetAutoForwarded ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(968)
inline void Outlook::_MeetingItem::PutAutoForwarded ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(969)
inline DATE Outlook::_MeetingItem::GetDeferredDeliveryTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(970)
inline void Outlook::_MeetingItem::PutDeferredDeliveryTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(971)
inline VARIANT_BOOL Outlook::_MeetingItem::GetDeleteAfterSubmit ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xe01, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(972)
inline void Outlook::_MeetingItem::PutDeleteAfterSubmit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe01, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(973)
inline DATE Outlook::_MeetingItem::GetExpiryTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(974)
inline void Outlook::_MeetingItem::PutExpiryTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(975)
inline DATE Outlook::_MeetingItem::GetFlagDueBy ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(976)
inline void Outlook::_MeetingItem::PutFlagDueBy ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(977)
inline _bstr_t Outlook::_MeetingItem::GetFlagRequest ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8530, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(978)
inline void Outlook::_MeetingItem::PutFlagRequest ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8530, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(979)
inline enum OlFlagStatus Outlook::_MeetingItem::GetFlagStatus ( ) {
    enum OlFlagStatus _result;
    _com_dispatch_method(this, 0x1090, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(980)
inline void Outlook::_MeetingItem::PutFlagStatus ( enum OlFlagStatus _arg1 ) {
    _com_dispatch_method(this, 0x1090, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(981)
inline VARIANT_BOOL Outlook::_MeetingItem::GetOriginatorDeliveryReportRequested ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(982)
inline void Outlook::_MeetingItem::PutOriginatorDeliveryReportRequested ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(983)
inline DATE Outlook::_MeetingItem::GetReceivedTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xe06, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(984)
inline void Outlook::_MeetingItem::PutReceivedTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0xe06, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(985)
inline Outlook::RecipientsPtr Outlook::_MeetingItem::GetRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf814, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(986)
inline VARIANT_BOOL Outlook::_MeetingItem::GetReminderSet ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(987)
inline void Outlook::_MeetingItem::PutReminderSet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(988)
inline DATE Outlook::_MeetingItem::GetReminderTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8502, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(989)
inline void Outlook::_MeetingItem::PutReminderTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8502, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(990)
inline Outlook::RecipientsPtr Outlook::_MeetingItem::GetReplyRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf013, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(991)
inline Outlook::MAPIFolderPtr Outlook::_MeetingItem::GetSaveSentMessageFolder ( ) {
    struct MAPIFolder * _result;
    _com_dispatch_method(this, 0xf401, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return MAPIFolderPtr(_result, false);
}

#pragma implementation_key(992)
inline void Outlook::_MeetingItem::PutRefSaveSentMessageFolder ( struct MAPIFolder * _arg1 ) {
    _com_dispatch_method(this, 0xf401, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(993)
inline _bstr_t Outlook::_MeetingItem::GetSenderName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xc1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(994)
inline VARIANT_BOOL Outlook::_MeetingItem::GetSent ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf402, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(995)
inline DATE Outlook::_MeetingItem::GetSentOn ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(996)
inline VARIANT_BOOL Outlook::_MeetingItem::GetSubmitted ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf403, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(997)
inline Outlook::_MeetingItemPtr Outlook::_MeetingItem::Forward ( ) {
    struct _MeetingItem * _result;
    _com_dispatch_method(this, 0xf813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MeetingItemPtr(_result, false);
}

#pragma implementation_key(998)
inline Outlook::_AppointmentItemPtr Outlook::_MeetingItem::GetAssociatedAppointment ( VARIANT_BOOL AddToCalendar ) {
    struct _AppointmentItem * _result;
    _com_dispatch_method(this, 0xf760, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", AddToCalendar);
    return _AppointmentItemPtr(_result, false);
}

#pragma implementation_key(999)
inline Outlook::_MailItemPtr Outlook::_MeetingItem::Reply ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf810, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1000)
inline Outlook::_MailItemPtr Outlook::_MeetingItem::ReplyAll ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf811, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1001)
inline HRESULT Outlook::_MeetingItem::Send ( ) {
    return _com_dispatch_method(this, 0xf075, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1002)
inline Outlook::LinksPtr Outlook::_MeetingItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1003)
inline enum OlDownloadState Outlook::_MeetingItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1004)
inline HRESULT Outlook::_MeetingItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1005)
inline Outlook::ItemPropertiesPtr Outlook::_MeetingItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1006)
inline enum OlRemoteStatus Outlook::_MeetingItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1007)
inline void Outlook::_MeetingItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1008)
inline VARIANT_BOOL Outlook::_MeetingItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _ContactItem wrapper method implementations
//

#pragma implementation_key(1009)
inline Outlook::_ApplicationPtr Outlook::_ContactItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1010)
inline enum OlObjectClass Outlook::_ContactItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1011)
inline Outlook::_NameSpacePtr Outlook::_ContactItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1012)
inline IDispatchPtr Outlook::_ContactItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1013)
inline Outlook::ActionsPtr Outlook::_ContactItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1014)
inline Outlook::AttachmentsPtr Outlook::_ContactItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1015)
inline _bstr_t Outlook::_ContactItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1016)
inline void Outlook::_ContactItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1017)
inline _bstr_t Outlook::_ContactItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1018)
inline void Outlook::_ContactItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1019)
inline _bstr_t Outlook::_ContactItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1020)
inline void Outlook::_ContactItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1021)
inline _bstr_t Outlook::_ContactItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1022)
inline void Outlook::_ContactItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1023)
inline _bstr_t Outlook::_ContactItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1024)
inline _bstr_t Outlook::_ContactItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1025)
inline DATE Outlook::_ContactItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1026)
inline _bstr_t Outlook::_ContactItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1027)
inline Outlook::FormDescriptionPtr Outlook::_ContactItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1028)
inline Outlook::_InspectorPtr Outlook::_ContactItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1029)
inline enum OlImportance Outlook::_ContactItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1030)
inline void Outlook::_ContactItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1031)
inline DATE Outlook::_ContactItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1032)
inline IUnknownPtr Outlook::_ContactItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1033)
inline _bstr_t Outlook::_ContactItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1034)
inline void Outlook::_ContactItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1035)
inline _bstr_t Outlook::_ContactItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1036)
inline void Outlook::_ContactItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1037)
inline VARIANT_BOOL Outlook::_ContactItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1038)
inline void Outlook::_ContactItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1039)
inline long Outlook::_ContactItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1040)
inline _bstr_t Outlook::_ContactItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1041)
inline VARIANT_BOOL Outlook::_ContactItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1042)
inline enum OlSensitivity Outlook::_ContactItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1043)
inline void Outlook::_ContactItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1044)
inline long Outlook::_ContactItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1045)
inline _bstr_t Outlook::_ContactItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1046)
inline void Outlook::_ContactItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1047)
inline VARIANT_BOOL Outlook::_ContactItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1048)
inline void Outlook::_ContactItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1049)
inline Outlook::UserPropertiesPtr Outlook::_ContactItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1050)
inline HRESULT Outlook::_ContactItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1051)
inline IDispatchPtr Outlook::_ContactItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1052)
inline HRESULT Outlook::_ContactItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1053)
inline HRESULT Outlook::_ContactItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1054)
inline IDispatchPtr Outlook::_ContactItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1055)
inline HRESULT Outlook::_ContactItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1056)
inline HRESULT Outlook::_ContactItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1057)
inline HRESULT Outlook::_ContactItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1058)
inline _bstr_t Outlook::_ContactItem::GetAccount ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a00, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1059)
inline void Outlook::_ContactItem::PutAccount ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a00, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1060)
inline DATE Outlook::_ContactItem::GetAnniversary ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3a41, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1061)
inline void Outlook::_ContactItem::PutAnniversary ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x3a41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1062)
inline _bstr_t Outlook::_ContactItem::GetAssistantName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a30, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1063)
inline void Outlook::_ContactItem::PutAssistantName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1064)
inline _bstr_t Outlook::_ContactItem::GetAssistantTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a2e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1065)
inline void Outlook::_ContactItem::PutAssistantTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1066)
inline DATE Outlook::_ContactItem::GetBirthday ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3a42, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1067)
inline void Outlook::_ContactItem::PutBirthday ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x3a42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1068)
inline _bstr_t Outlook::_ContactItem::GetBusiness2TelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a1b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1069)
inline void Outlook::_ContactItem::PutBusiness2TelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1070)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x801b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1071)
inline void Outlook::_ContactItem::PutBusinessAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x801b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1072)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddressCity ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8046, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1073)
inline void Outlook::_ContactItem::PutBusinessAddressCity ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8046, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1074)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddressCountry ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8049, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1075)
inline void Outlook::_ContactItem::PutBusinessAddressCountry ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8049, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1076)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddressPostalCode ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8048, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1077)
inline void Outlook::_ContactItem::PutBusinessAddressPostalCode ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8048, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1078)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddressPostOfficeBox ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x804a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1079)
inline void Outlook::_ContactItem::PutBusinessAddressPostOfficeBox ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x804a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1080)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddressState ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8047, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1081)
inline void Outlook::_ContactItem::PutBusinessAddressState ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8047, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1082)
inline _bstr_t Outlook::_ContactItem::GetBusinessAddressStreet ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8045, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1083)
inline void Outlook::_ContactItem::PutBusinessAddressStreet ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8045, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1084)
inline _bstr_t Outlook::_ContactItem::GetBusinessFaxNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a24, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1085)
inline void Outlook::_ContactItem::PutBusinessFaxNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1086)
inline _bstr_t Outlook::_ContactItem::GetBusinessHomePage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a51, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1087)
inline void Outlook::_ContactItem::PutBusinessHomePage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1088)
inline _bstr_t Outlook::_ContactItem::GetBusinessTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a08, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1089)
inline void Outlook::_ContactItem::PutBusinessTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a08, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1090)
inline _bstr_t Outlook::_ContactItem::GetCallbackTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a02, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1091)
inline void Outlook::_ContactItem::PutCallbackTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a02, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1092)
inline _bstr_t Outlook::_ContactItem::GetCarTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a1e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1093)
inline void Outlook::_ContactItem::PutCarTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1094)
inline _bstr_t Outlook::_ContactItem::GetChildren ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x800c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1095)
inline void Outlook::_ContactItem::PutChildren ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x800c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1096)
inline _bstr_t Outlook::_ContactItem::GetCompanyAndFullName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8018, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1097)
inline _bstr_t Outlook::_ContactItem::GetCompanyLastFirstNoSpace ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8032, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1098)
inline _bstr_t Outlook::_ContactItem::GetCompanyLastFirstSpaceOnly ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8033, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1099)
inline _bstr_t Outlook::_ContactItem::GetCompanyMainTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a57, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1100)
inline void Outlook::_ContactItem::PutCompanyMainTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1101)
inline _bstr_t Outlook::_ContactItem::GetCompanyName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1102)
inline void Outlook::_ContactItem::PutCompanyName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1103)
inline _bstr_t Outlook::_ContactItem::GetComputerNetworkName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a49, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1104)
inline void Outlook::_ContactItem::PutComputerNetworkName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1105)
inline _bstr_t Outlook::_ContactItem::GetCustomerID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a4a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1106)
inline void Outlook::_ContactItem::PutCustomerID ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1107)
inline _bstr_t Outlook::_ContactItem::GetDepartment ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a18, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1108)
inline void Outlook::_ContactItem::PutDepartment ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1109)
inline _bstr_t Outlook::_ContactItem::GetEmail1Address ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8083, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1110)
inline void Outlook::_ContactItem::PutEmail1Address ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8083, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1111)
inline _bstr_t Outlook::_ContactItem::GetEmail1AddressType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8082, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1112)
inline void Outlook::_ContactItem::PutEmail1AddressType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8082, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1113)
inline _bstr_t Outlook::_ContactItem::GetEmail1DisplayName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8080, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1114)
inline _bstr_t Outlook::_ContactItem::GetEmail1EntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8085, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1115)
inline _bstr_t Outlook::_ContactItem::GetEmail2Address ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8093, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1116)
inline void Outlook::_ContactItem::PutEmail2Address ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8093, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1117)
inline _bstr_t Outlook::_ContactItem::GetEmail2AddressType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8092, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1118)
inline void Outlook::_ContactItem::PutEmail2AddressType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8092, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1119)
inline _bstr_t Outlook::_ContactItem::GetEmail2DisplayName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8090, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1120)
inline _bstr_t Outlook::_ContactItem::GetEmail2EntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8095, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1121)
inline _bstr_t Outlook::_ContactItem::GetEmail3Address ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80a3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1122)
inline void Outlook::_ContactItem::PutEmail3Address ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x80a3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1123)
inline _bstr_t Outlook::_ContactItem::GetEmail3AddressType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80a2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1124)
inline void Outlook::_ContactItem::PutEmail3AddressType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x80a2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1125)
inline _bstr_t Outlook::_ContactItem::GetEmail3DisplayName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80a0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1126)
inline _bstr_t Outlook::_ContactItem::GetEmail3EntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80a5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1127)
inline _bstr_t Outlook::_ContactItem::GetFileAs ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8005, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1128)
inline void Outlook::_ContactItem::PutFileAs ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1129)
inline _bstr_t Outlook::_ContactItem::GetFirstName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a06, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1130)
inline void Outlook::_ContactItem::PutFirstName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a06, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1131)
inline _bstr_t Outlook::_ContactItem::GetFTPSite ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a4c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1132)
inline void Outlook::_ContactItem::PutFTPSite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a4c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1133)
inline _bstr_t Outlook::_ContactItem::GetFullName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1134)
inline void Outlook::_ContactItem::PutFullName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1135)
inline _bstr_t Outlook::_ContactItem::GetFullNameAndCompany ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8019, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1136)
inline enum OlGender Outlook::_ContactItem::GetGender ( ) {
    enum OlGender _result;
    _com_dispatch_method(this, 0x3a4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1137)
inline void Outlook::_ContactItem::PutGender ( enum OlGender _arg1 ) {
    _com_dispatch_method(this, 0x3a4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1138)
inline _bstr_t Outlook::_ContactItem::GetGovernmentIDNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a07, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1139)
inline void Outlook::_ContactItem::PutGovernmentIDNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a07, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1140)
inline _bstr_t Outlook::_ContactItem::GetHobby ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a43, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1141)
inline void Outlook::_ContactItem::PutHobby ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a43, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1142)
inline _bstr_t Outlook::_ContactItem::GetHome2TelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a2f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1143)
inline void Outlook::_ContactItem::PutHome2TelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1144)
inline _bstr_t Outlook::_ContactItem::GetHomeAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x801a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1145)
inline void Outlook::_ContactItem::PutHomeAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x801a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1146)
inline _bstr_t Outlook::_ContactItem::GetHomeAddressCity ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a59, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1147)
inline void Outlook::_ContactItem::PutHomeAddressCity ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a59, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1148)
inline _bstr_t Outlook::_ContactItem::GetHomeAddressCountry ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a5a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1149)
inline void Outlook::_ContactItem::PutHomeAddressCountry ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1150)
inline _bstr_t Outlook::_ContactItem::GetHomeAddressPostalCode ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a5b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1151)
inline void Outlook::_ContactItem::PutHomeAddressPostalCode ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1152)
inline _bstr_t Outlook::_ContactItem::GetHomeAddressPostOfficeBox ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a5e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1153)
inline void Outlook::_ContactItem::PutHomeAddressPostOfficeBox ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a5e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1154)
inline _bstr_t Outlook::_ContactItem::GetHomeAddressState ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a5c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1155)
inline void Outlook::_ContactItem::PutHomeAddressState ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a5c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1156)
inline _bstr_t Outlook::_ContactItem::GetHomeAddressStreet ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a5d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1157)
inline void Outlook::_ContactItem::PutHomeAddressStreet ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a5d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1158)
inline _bstr_t Outlook::_ContactItem::GetHomeFaxNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a25, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1159)
inline void Outlook::_ContactItem::PutHomeFaxNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1160)
inline _bstr_t Outlook::_ContactItem::GetHomeTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a09, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1161)
inline void Outlook::_ContactItem::PutHomeTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a09, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1162)
inline _bstr_t Outlook::_ContactItem::GetInitials ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a0a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1163)
inline void Outlook::_ContactItem::PutInitials ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a0a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1164)
inline _bstr_t Outlook::_ContactItem::GetInternetFreeBusyAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x80d8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1165)
inline void Outlook::_ContactItem::PutInternetFreeBusyAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x80d8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1166)
inline _bstr_t Outlook::_ContactItem::GetISDNNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a2d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1167)
inline void Outlook::_ContactItem::PutISDNNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1168)
inline _bstr_t Outlook::_ContactItem::GetJobTitle ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1169)
inline void Outlook::_ContactItem::PutJobTitle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1170)
inline VARIANT_BOOL Outlook::_ContactItem::GetJournal ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8025, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1171)
inline void Outlook::_ContactItem::PutJournal ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8025, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1172)
inline _bstr_t Outlook::_ContactItem::GetLanguage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a0c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1173)
inline void Outlook::_ContactItem::PutLanguage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a0c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1174)
inline _bstr_t Outlook::_ContactItem::GetLastFirstAndSuffix ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8036, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1175)
inline _bstr_t Outlook::_ContactItem::GetLastFirstNoSpace ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8030, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1176)
inline _bstr_t Outlook::_ContactItem::GetLastFirstNoSpaceCompany ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8034, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1177)
inline _bstr_t Outlook::_ContactItem::GetLastFirstSpaceOnly ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8031, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1178)
inline _bstr_t Outlook::_ContactItem::GetLastFirstSpaceOnlyCompany ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8035, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1179)
inline _bstr_t Outlook::_ContactItem::GetLastName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1180)
inline void Outlook::_ContactItem::PutLastName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1181)
inline _bstr_t Outlook::_ContactItem::GetLastNameAndFirstName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8017, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1182)
inline _bstr_t Outlook::_ContactItem::GetMailingAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a15, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1183)
inline void Outlook::_ContactItem::PutMailingAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1184)
inline _bstr_t Outlook::_ContactItem::GetMailingAddressCity ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a27, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1185)
inline void Outlook::_ContactItem::PutMailingAddressCity ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1186)
inline _bstr_t Outlook::_ContactItem::GetMailingAddressCountry ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a26, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1187)
inline void Outlook::_ContactItem::PutMailingAddressCountry ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1188)
inline _bstr_t Outlook::_ContactItem::GetMailingAddressPostalCode ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a2a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1189)
inline void Outlook::_ContactItem::PutMailingAddressPostalCode ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1190)
inline _bstr_t Outlook::_ContactItem::GetMailingAddressPostOfficeBox ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a2b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1191)
inline void Outlook::_ContactItem::PutMailingAddressPostOfficeBox ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1192)
inline _bstr_t Outlook::_ContactItem::GetMailingAddressState ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a28, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1193)
inline void Outlook::_ContactItem::PutMailingAddressState ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1194)
inline _bstr_t Outlook::_ContactItem::GetMailingAddressStreet ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a29, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1195)
inline void Outlook::_ContactItem::PutMailingAddressStreet ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1196)
inline _bstr_t Outlook::_ContactItem::GetManagerName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a4e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1197)
inline void Outlook::_ContactItem::PutManagerName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a4e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1198)
inline _bstr_t Outlook::_ContactItem::GetMiddleName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a44, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1199)
inline void Outlook::_ContactItem::PutMiddleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1200)
inline _bstr_t Outlook::_ContactItem::GetMobileTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a1c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1201)
inline void Outlook::_ContactItem::PutMobileTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1202)
inline _bstr_t Outlook::_ContactItem::GetNetMeetingAlias ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x805f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1203)
inline void Outlook::_ContactItem::PutNetMeetingAlias ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x805f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1204)
inline _bstr_t Outlook::_ContactItem::GetNetMeetingServer ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8060, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1205)
inline void Outlook::_ContactItem::PutNetMeetingServer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8060, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1206)
inline _bstr_t Outlook::_ContactItem::GetNickName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a4f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1207)
inline void Outlook::_ContactItem::PutNickName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a4f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1208)
inline _bstr_t Outlook::_ContactItem::GetOfficeLocation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a19, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1209)
inline void Outlook::_ContactItem::PutOfficeLocation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1210)
inline _bstr_t Outlook::_ContactItem::GetOrganizationalIDNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a10, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1211)
inline void Outlook::_ContactItem::PutOrganizationalIDNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1212)
inline _bstr_t Outlook::_ContactItem::GetOtherAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x801c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1213)
inline void Outlook::_ContactItem::PutOtherAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x801c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1214)
inline _bstr_t Outlook::_ContactItem::GetOtherAddressCity ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a5f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1215)
inline void Outlook::_ContactItem::PutOtherAddressCity ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a5f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1216)
inline _bstr_t Outlook::_ContactItem::GetOtherAddressCountry ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a60, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1217)
inline void Outlook::_ContactItem::PutOtherAddressCountry ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a60, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1218)
inline _bstr_t Outlook::_ContactItem::GetOtherAddressPostalCode ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a61, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1219)
inline void Outlook::_ContactItem::PutOtherAddressPostalCode ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a61, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1220)
inline _bstr_t Outlook::_ContactItem::GetOtherAddressPostOfficeBox ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a64, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1221)
inline void Outlook::_ContactItem::PutOtherAddressPostOfficeBox ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1222)
inline _bstr_t Outlook::_ContactItem::GetOtherAddressState ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a62, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1223)
inline void Outlook::_ContactItem::PutOtherAddressState ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a62, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1224)
inline _bstr_t Outlook::_ContactItem::GetOtherAddressStreet ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a63, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1225)
inline void Outlook::_ContactItem::PutOtherAddressStreet ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1226)
inline _bstr_t Outlook::_ContactItem::GetOtherFaxNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1227)
inline void Outlook::_ContactItem::PutOtherFaxNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1228)
inline _bstr_t Outlook::_ContactItem::GetOtherTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a1f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1229)
inline void Outlook::_ContactItem::PutOtherTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1230)
inline _bstr_t Outlook::_ContactItem::GetPagerNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a21, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1231)
inline void Outlook::_ContactItem::PutPagerNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1232)
inline _bstr_t Outlook::_ContactItem::GetPersonalHomePage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a50, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1233)
inline void Outlook::_ContactItem::PutPersonalHomePage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1234)
inline _bstr_t Outlook::_ContactItem::GetPrimaryTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1235)
inline void Outlook::_ContactItem::PutPrimaryTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1236)
inline _bstr_t Outlook::_ContactItem::GetProfession ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a46, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1237)
inline void Outlook::_ContactItem::PutProfession ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a46, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1238)
inline _bstr_t Outlook::_ContactItem::GetRadioTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a1d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1239)
inline void Outlook::_ContactItem::PutRadioTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1240)
inline _bstr_t Outlook::_ContactItem::GetReferredBy ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a47, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1241)
inline void Outlook::_ContactItem::PutReferredBy ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a47, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1242)
inline enum OlMailingAddress Outlook::_ContactItem::GetSelectedMailingAddress ( ) {
    enum OlMailingAddress _result;
    _com_dispatch_method(this, 0x8022, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1243)
inline void Outlook::_ContactItem::PutSelectedMailingAddress ( enum OlMailingAddress _arg1 ) {
    _com_dispatch_method(this, 0x8022, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1244)
inline _bstr_t Outlook::_ContactItem::GetSpouse ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a48, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1245)
inline void Outlook::_ContactItem::PutSpouse ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a48, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1246)
inline _bstr_t Outlook::_ContactItem::GetSuffix ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a05, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1247)
inline void Outlook::_ContactItem::PutSuffix ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a05, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1248)
inline _bstr_t Outlook::_ContactItem::GetTelexNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a2c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1249)
inline void Outlook::_ContactItem::PutTelexNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1250)
inline _bstr_t Outlook::_ContactItem::GetTitle ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a45, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1251)
inline void Outlook::_ContactItem::PutTitle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1252)
inline _bstr_t Outlook::_ContactItem::GetTTYTDDTelephoneNumber ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x3a4b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1253)
inline void Outlook::_ContactItem::PutTTYTDDTelephoneNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3a4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1254)
inline _bstr_t Outlook::_ContactItem::GetUser1 ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x804f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1255)
inline void Outlook::_ContactItem::PutUser1 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x804f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1256)
inline _bstr_t Outlook::_ContactItem::GetUser2 ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8050, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1257)
inline void Outlook::_ContactItem::PutUser2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8050, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1258)
inline _bstr_t Outlook::_ContactItem::GetUser3 ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8051, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1259)
inline void Outlook::_ContactItem::PutUser3 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8051, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1260)
inline _bstr_t Outlook::_ContactItem::GetUser4 ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8052, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1261)
inline void Outlook::_ContactItem::PutUser4 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8052, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1262)
inline _bstr_t Outlook::_ContactItem::GetUserCertificate ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8016, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1263)
inline void Outlook::_ContactItem::PutUserCertificate ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8016, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1264)
inline _bstr_t Outlook::_ContactItem::GetWebPage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x802b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1265)
inline void Outlook::_ContactItem::PutWebPage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x802b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1266)
inline _bstr_t Outlook::_ContactItem::GetYomiCompanyName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x802e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1267)
inline void Outlook::_ContactItem::PutYomiCompanyName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x802e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1268)
inline _bstr_t Outlook::_ContactItem::GetYomiFirstName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x802c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1269)
inline void Outlook::_ContactItem::PutYomiFirstName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x802c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1270)
inline _bstr_t Outlook::_ContactItem::GetYomiLastName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x802d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1271)
inline void Outlook::_ContactItem::PutYomiLastName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x802d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1272)
inline Outlook::_MailItemPtr Outlook::_ContactItem::ForwardAsVcard ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf8a1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1273)
inline Outlook::LinksPtr Outlook::_ContactItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1274)
inline Outlook::ItemPropertiesPtr Outlook::_ContactItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1275)
inline _bstr_t Outlook::_ContactItem::GetLastFirstNoSpaceAndSuffix ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8038, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1276)
inline enum OlDownloadState Outlook::_ContactItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1277)
inline HRESULT Outlook::_ContactItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1278)
inline _bstr_t Outlook::_ContactItem::GetIMAddress ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8062, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1279)
inline void Outlook::_ContactItem::PutIMAddress ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8062, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1280)
inline enum OlRemoteStatus Outlook::_ContactItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1281)
inline void Outlook::_ContactItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1282)
inline void Outlook::_ContactItem::PutEmail1DisplayName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8080, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1283)
inline void Outlook::_ContactItem::PutEmail2DisplayName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8090, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1284)
inline void Outlook::_ContactItem::PutEmail3DisplayName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x80a0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1285)
inline VARIANT_BOOL Outlook::_ContactItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _DistListItem wrapper method implementations
//

#pragma implementation_key(1286)
inline Outlook::_ApplicationPtr Outlook::_DistListItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1287)
inline enum OlObjectClass Outlook::_DistListItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1288)
inline Outlook::_NameSpacePtr Outlook::_DistListItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1289)
inline IDispatchPtr Outlook::_DistListItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1290)
inline Outlook::ActionsPtr Outlook::_DistListItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1291)
inline Outlook::AttachmentsPtr Outlook::_DistListItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1292)
inline _bstr_t Outlook::_DistListItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1293)
inline void Outlook::_DistListItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1294)
inline _bstr_t Outlook::_DistListItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1295)
inline void Outlook::_DistListItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1296)
inline _bstr_t Outlook::_DistListItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1297)
inline void Outlook::_DistListItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1298)
inline _bstr_t Outlook::_DistListItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1299)
inline void Outlook::_DistListItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1300)
inline _bstr_t Outlook::_DistListItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1301)
inline _bstr_t Outlook::_DistListItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1302)
inline DATE Outlook::_DistListItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1303)
inline _bstr_t Outlook::_DistListItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1304)
inline Outlook::FormDescriptionPtr Outlook::_DistListItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1305)
inline Outlook::_InspectorPtr Outlook::_DistListItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1306)
inline enum OlImportance Outlook::_DistListItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1307)
inline void Outlook::_DistListItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1308)
inline DATE Outlook::_DistListItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1309)
inline IUnknownPtr Outlook::_DistListItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1310)
inline _bstr_t Outlook::_DistListItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1311)
inline void Outlook::_DistListItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1312)
inline _bstr_t Outlook::_DistListItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1313)
inline void Outlook::_DistListItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1314)
inline VARIANT_BOOL Outlook::_DistListItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1315)
inline void Outlook::_DistListItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1316)
inline long Outlook::_DistListItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1317)
inline _bstr_t Outlook::_DistListItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1318)
inline VARIANT_BOOL Outlook::_DistListItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1319)
inline enum OlSensitivity Outlook::_DistListItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1320)
inline void Outlook::_DistListItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1321)
inline long Outlook::_DistListItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1322)
inline _bstr_t Outlook::_DistListItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1323)
inline void Outlook::_DistListItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1324)
inline VARIANT_BOOL Outlook::_DistListItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1325)
inline void Outlook::_DistListItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1326)
inline Outlook::UserPropertiesPtr Outlook::_DistListItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1327)
inline HRESULT Outlook::_DistListItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1328)
inline IDispatchPtr Outlook::_DistListItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1329)
inline HRESULT Outlook::_DistListItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1330)
inline HRESULT Outlook::_DistListItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1331)
inline IDispatchPtr Outlook::_DistListItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1332)
inline HRESULT Outlook::_DistListItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1333)
inline HRESULT Outlook::_DistListItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1334)
inline HRESULT Outlook::_DistListItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1335)
inline _bstr_t Outlook::_DistListItem::GetDLName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8053, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1336)
inline void Outlook::_DistListItem::PutDLName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8053, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1337)
inline long Outlook::_DistListItem::GetMemberCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x804b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1338)
inline long Outlook::_DistListItem::GetCheckSum ( ) {
    long _result;
    _com_dispatch_method(this, 0x804c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1339)
inline _variant_t Outlook::_DistListItem::GetMembers ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x8055, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1340)
inline void Outlook::_DistListItem::PutMembers ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x8055, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1341)
inline _variant_t Outlook::_DistListItem::GetOneOffMembers ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x8054, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1342)
inline void Outlook::_DistListItem::PutOneOffMembers ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x8054, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1343)
inline Outlook::LinksPtr Outlook::_DistListItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1344)
inline HRESULT Outlook::_DistListItem::AddMembers ( struct Recipients * Recipients ) {
    return _com_dispatch_method(this, 0xf900, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Recipients);
}

#pragma implementation_key(1345)
inline HRESULT Outlook::_DistListItem::RemoveMembers ( struct Recipients * Recipients ) {
    return _com_dispatch_method(this, 0xf901, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Recipients);
}

#pragma implementation_key(1346)
inline Outlook::RecipientPtr Outlook::_DistListItem::GetMember ( long Index ) {
    struct Recipient * _result;
    _com_dispatch_method(this, 0xf905, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Index);
    return RecipientPtr(_result, false);
}

#pragma implementation_key(1347)
inline enum OlDownloadState Outlook::_DistListItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1348)
inline HRESULT Outlook::_DistListItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1349)
inline HRESULT Outlook::_DistListItem::AddMember ( struct Recipient * Recipient ) {
    return _com_dispatch_method(this, 0xfa8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Recipient);
}

#pragma implementation_key(1350)
inline HRESULT Outlook::_DistListItem::RemoveMember ( struct Recipient * Recipient ) {
    return _com_dispatch_method(this, 0xfa8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Recipient);
}

#pragma implementation_key(1351)
inline Outlook::ItemPropertiesPtr Outlook::_DistListItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1352)
inline enum OlRemoteStatus Outlook::_DistListItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1353)
inline void Outlook::_DistListItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1354)
inline VARIANT_BOOL Outlook::_DistListItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _DocumentItem wrapper method implementations
//

#pragma implementation_key(1355)
inline Outlook::_ApplicationPtr Outlook::_DocumentItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1356)
inline enum OlObjectClass Outlook::_DocumentItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1357)
inline Outlook::_NameSpacePtr Outlook::_DocumentItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1358)
inline IDispatchPtr Outlook::_DocumentItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1359)
inline Outlook::ActionsPtr Outlook::_DocumentItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1360)
inline Outlook::AttachmentsPtr Outlook::_DocumentItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1361)
inline _bstr_t Outlook::_DocumentItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1362)
inline void Outlook::_DocumentItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1363)
inline _bstr_t Outlook::_DocumentItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1364)
inline void Outlook::_DocumentItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1365)
inline _bstr_t Outlook::_DocumentItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1366)
inline void Outlook::_DocumentItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1367)
inline _bstr_t Outlook::_DocumentItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1368)
inline void Outlook::_DocumentItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1369)
inline _bstr_t Outlook::_DocumentItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1370)
inline _bstr_t Outlook::_DocumentItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1371)
inline DATE Outlook::_DocumentItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1372)
inline _bstr_t Outlook::_DocumentItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1373)
inline Outlook::FormDescriptionPtr Outlook::_DocumentItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1374)
inline Outlook::_InspectorPtr Outlook::_DocumentItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1375)
inline enum OlImportance Outlook::_DocumentItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1376)
inline void Outlook::_DocumentItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1377)
inline DATE Outlook::_DocumentItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1378)
inline IUnknownPtr Outlook::_DocumentItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1379)
inline _bstr_t Outlook::_DocumentItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1380)
inline void Outlook::_DocumentItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1381)
inline _bstr_t Outlook::_DocumentItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1382)
inline void Outlook::_DocumentItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1383)
inline VARIANT_BOOL Outlook::_DocumentItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1384)
inline void Outlook::_DocumentItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1385)
inline long Outlook::_DocumentItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1386)
inline _bstr_t Outlook::_DocumentItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1387)
inline VARIANT_BOOL Outlook::_DocumentItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1388)
inline enum OlSensitivity Outlook::_DocumentItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1389)
inline void Outlook::_DocumentItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1390)
inline long Outlook::_DocumentItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1391)
inline _bstr_t Outlook::_DocumentItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1392)
inline void Outlook::_DocumentItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1393)
inline VARIANT_BOOL Outlook::_DocumentItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1394)
inline void Outlook::_DocumentItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1395)
inline Outlook::UserPropertiesPtr Outlook::_DocumentItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1396)
inline HRESULT Outlook::_DocumentItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1397)
inline IDispatchPtr Outlook::_DocumentItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1398)
inline HRESULT Outlook::_DocumentItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1399)
inline HRESULT Outlook::_DocumentItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1400)
inline IDispatchPtr Outlook::_DocumentItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1401)
inline HRESULT Outlook::_DocumentItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1402)
inline HRESULT Outlook::_DocumentItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1403)
inline HRESULT Outlook::_DocumentItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1404)
inline Outlook::LinksPtr Outlook::_DocumentItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1405)
inline enum OlDownloadState Outlook::_DocumentItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1406)
inline HRESULT Outlook::_DocumentItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1407)
inline Outlook::ItemPropertiesPtr Outlook::_DocumentItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1408)
inline enum OlRemoteStatus Outlook::_DocumentItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1409)
inline void Outlook::_DocumentItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1410)
inline VARIANT_BOOL Outlook::_DocumentItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface ExplorersEvents wrapper method implementations
//

#pragma implementation_key(1411)
inline HRESULT Outlook::ExplorersEvents::NewExplorer ( struct _Explorer * Explorer ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Explorer);
}

//
// dispinterface FoldersEvents wrapper method implementations
//

#pragma implementation_key(1412)
inline HRESULT Outlook::FoldersEvents::FolderAdd ( struct MAPIFolder * Folder ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Folder);
}

#pragma implementation_key(1413)
inline HRESULT Outlook::FoldersEvents::FolderChange ( struct MAPIFolder * Folder ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Folder);
}

#pragma implementation_key(1414)
inline HRESULT Outlook::FoldersEvents::FolderRemove ( ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface InspectorsEvents wrapper method implementations
//

#pragma implementation_key(1415)
inline HRESULT Outlook::InspectorsEvents::NewInspector ( struct _Inspector * Inspector ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Inspector);
}

//
// dispinterface ItemsEvents wrapper method implementations
//

#pragma implementation_key(1416)
inline HRESULT Outlook::ItemsEvents::ItemAdd ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(1417)
inline HRESULT Outlook::ItemsEvents::ItemChange ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(1418)
inline HRESULT Outlook::ItemsEvents::ItemRemove ( ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface _JournalItem wrapper method implementations
//

#pragma implementation_key(1419)
inline Outlook::_ApplicationPtr Outlook::_JournalItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1420)
inline enum OlObjectClass Outlook::_JournalItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1421)
inline Outlook::_NameSpacePtr Outlook::_JournalItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1422)
inline IDispatchPtr Outlook::_JournalItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1423)
inline Outlook::ActionsPtr Outlook::_JournalItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1424)
inline Outlook::AttachmentsPtr Outlook::_JournalItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1425)
inline _bstr_t Outlook::_JournalItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1426)
inline void Outlook::_JournalItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1427)
inline _bstr_t Outlook::_JournalItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1428)
inline void Outlook::_JournalItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1429)
inline _bstr_t Outlook::_JournalItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1430)
inline void Outlook::_JournalItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1431)
inline _bstr_t Outlook::_JournalItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1432)
inline void Outlook::_JournalItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1433)
inline _bstr_t Outlook::_JournalItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1434)
inline _bstr_t Outlook::_JournalItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1435)
inline DATE Outlook::_JournalItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1436)
inline _bstr_t Outlook::_JournalItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1437)
inline Outlook::FormDescriptionPtr Outlook::_JournalItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1438)
inline Outlook::_InspectorPtr Outlook::_JournalItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1439)
inline enum OlImportance Outlook::_JournalItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1440)
inline void Outlook::_JournalItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1441)
inline DATE Outlook::_JournalItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1442)
inline IUnknownPtr Outlook::_JournalItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1443)
inline _bstr_t Outlook::_JournalItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1444)
inline void Outlook::_JournalItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1445)
inline _bstr_t Outlook::_JournalItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1446)
inline void Outlook::_JournalItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1447)
inline VARIANT_BOOL Outlook::_JournalItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1448)
inline void Outlook::_JournalItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1449)
inline long Outlook::_JournalItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1450)
inline _bstr_t Outlook::_JournalItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1451)
inline VARIANT_BOOL Outlook::_JournalItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1452)
inline enum OlSensitivity Outlook::_JournalItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1453)
inline void Outlook::_JournalItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1454)
inline long Outlook::_JournalItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1455)
inline _bstr_t Outlook::_JournalItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1456)
inline void Outlook::_JournalItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1457)
inline VARIANT_BOOL Outlook::_JournalItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1458)
inline void Outlook::_JournalItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1459)
inline Outlook::UserPropertiesPtr Outlook::_JournalItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1460)
inline HRESULT Outlook::_JournalItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1461)
inline IDispatchPtr Outlook::_JournalItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1462)
inline HRESULT Outlook::_JournalItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1463)
inline HRESULT Outlook::_JournalItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1464)
inline IDispatchPtr Outlook::_JournalItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1465)
inline HRESULT Outlook::_JournalItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1466)
inline HRESULT Outlook::_JournalItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1467)
inline HRESULT Outlook::_JournalItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1468)
inline _bstr_t Outlook::_JournalItem::GetContactNames ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe04, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1469)
inline void Outlook::_JournalItem::PutContactNames ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe04, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1470)
inline VARIANT_BOOL Outlook::_JournalItem::GetDocPosted ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8711, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1471)
inline void Outlook::_JournalItem::PutDocPosted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8711, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1472)
inline VARIANT_BOOL Outlook::_JournalItem::GetDocPrinted ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x870e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1473)
inline void Outlook::_JournalItem::PutDocPrinted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1474)
inline VARIANT_BOOL Outlook::_JournalItem::GetDocRouted ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8710, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1475)
inline void Outlook::_JournalItem::PutDocRouted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8710, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1476)
inline VARIANT_BOOL Outlook::_JournalItem::GetDocSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x870f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1477)
inline void Outlook::_JournalItem::PutDocSaved ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1478)
inline long Outlook::_JournalItem::GetDuration ( ) {
    long _result;
    _com_dispatch_method(this, 0x8707, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1479)
inline void Outlook::_JournalItem::PutDuration ( long _arg1 ) {
    _com_dispatch_method(this, 0x8707, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1480)
inline DATE Outlook::_JournalItem::GetEnd ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8708, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1481)
inline void Outlook::_JournalItem::PutEnd ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8708, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1482)
inline _bstr_t Outlook::_JournalItem::GetType ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8700, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1483)
inline void Outlook::_JournalItem::PutType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8700, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1484)
inline Outlook::RecipientsPtr Outlook::_JournalItem::GetRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf814, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(1485)
inline DATE Outlook::_JournalItem::GetStart ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8706, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1486)
inline void Outlook::_JournalItem::PutStart ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8706, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1487)
inline Outlook::_MailItemPtr Outlook::_JournalItem::Forward ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1488)
inline Outlook::_MailItemPtr Outlook::_JournalItem::Reply ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf810, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1489)
inline Outlook::_MailItemPtr Outlook::_JournalItem::ReplyAll ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf811, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1490)
inline HRESULT Outlook::_JournalItem::StartTimer ( ) {
    return _com_dispatch_method(this, 0xf725, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1491)
inline HRESULT Outlook::_JournalItem::StopTimer ( ) {
    return _com_dispatch_method(this, 0xf726, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1492)
inline Outlook::LinksPtr Outlook::_JournalItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1493)
inline enum OlDownloadState Outlook::_JournalItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1494)
inline HRESULT Outlook::_JournalItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1495)
inline Outlook::ItemPropertiesPtr Outlook::_JournalItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1496)
inline enum OlRemoteStatus Outlook::_JournalItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1497)
inline void Outlook::_JournalItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1498)
inline VARIANT_BOOL Outlook::_JournalItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface NameSpaceEvents wrapper method implementations
//

#pragma implementation_key(1499)
inline HRESULT Outlook::NameSpaceEvents::OptionsPagesAdd ( struct PropertyPages * Pages, struct MAPIFolder * Folder ) {
    return _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009", Pages, Folder);
}

//
// dispinterface _NoteItem wrapper method implementations
//

#pragma implementation_key(1500)
inline Outlook::_ApplicationPtr Outlook::_NoteItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1501)
inline enum OlObjectClass Outlook::_NoteItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1502)
inline Outlook::_NameSpacePtr Outlook::_NoteItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1503)
inline IDispatchPtr Outlook::_NoteItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1504)
inline _bstr_t Outlook::_NoteItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1505)
inline void Outlook::_NoteItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1506)
inline _bstr_t Outlook::_NoteItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1507)
inline void Outlook::_NoteItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1508)
inline enum OlNoteColor Outlook::_NoteItem::GetColor ( ) {
    enum OlNoteColor _result;
    _com_dispatch_method(this, 0x8b00, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1509)
inline void Outlook::_NoteItem::PutColor ( enum OlNoteColor _arg1 ) {
    _com_dispatch_method(this, 0x8b00, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1510)
inline DATE Outlook::_NoteItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1511)
inline _bstr_t Outlook::_NoteItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1512)
inline Outlook::_InspectorPtr Outlook::_NoteItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1513)
inline long Outlook::_NoteItem::GetHeight ( ) {
    long _result;
    _com_dispatch_method(this, 0x8b03, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1514)
inline void Outlook::_NoteItem::PutHeight ( long _arg1 ) {
    _com_dispatch_method(this, 0x8b03, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1515)
inline DATE Outlook::_NoteItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1516)
inline long Outlook::_NoteItem::GetLeft ( ) {
    long _result;
    _com_dispatch_method(this, 0x8b04, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1517)
inline void Outlook::_NoteItem::PutLeft ( long _arg1 ) {
    _com_dispatch_method(this, 0x8b04, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1518)
inline _bstr_t Outlook::_NoteItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1519)
inline void Outlook::_NoteItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1520)
inline VARIANT_BOOL Outlook::_NoteItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1521)
inline long Outlook::_NoteItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1522)
inline _bstr_t Outlook::_NoteItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf7a0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1523)
inline long Outlook::_NoteItem::GetTop ( ) {
    long _result;
    _com_dispatch_method(this, 0x8b05, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1524)
inline void Outlook::_NoteItem::PutTop ( long _arg1 ) {
    _com_dispatch_method(this, 0x8b05, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1525)
inline long Outlook::_NoteItem::GetWidth ( ) {
    long _result;
    _com_dispatch_method(this, 0x8b02, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1526)
inline void Outlook::_NoteItem::PutWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0x8b02, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1527)
inline HRESULT Outlook::_NoteItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1528)
inline IDispatchPtr Outlook::_NoteItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1529)
inline HRESULT Outlook::_NoteItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1530)
inline HRESULT Outlook::_NoteItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1531)
inline IDispatchPtr Outlook::_NoteItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1532)
inline HRESULT Outlook::_NoteItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1533)
inline HRESULT Outlook::_NoteItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1534)
inline HRESULT Outlook::_NoteItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1535)
inline Outlook::LinksPtr Outlook::_NoteItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1536)
inline enum OlDownloadState Outlook::_NoteItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1537)
inline Outlook::ItemPropertiesPtr Outlook::_NoteItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1538)
inline enum OlRemoteStatus Outlook::_NoteItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1539)
inline void Outlook::_NoteItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1540)
inline VARIANT_BOOL Outlook::_NoteItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface OutlookBarGroup wrapper method implementations
//

#pragma implementation_key(1541)
inline Outlook::_ApplicationPtr Outlook::OutlookBarGroup::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1542)
inline enum OlObjectClass Outlook::OutlookBarGroup::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1543)
inline Outlook::_NameSpacePtr Outlook::OutlookBarGroup::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1544)
inline IDispatchPtr Outlook::OutlookBarGroup::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1545)
inline _bstr_t Outlook::OutlookBarGroup::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1546)
inline void Outlook::OutlookBarGroup::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1547)
inline Outlook::_OutlookBarShortcutsPtr Outlook::OutlookBarGroup::GetShortcuts ( ) {
    struct _OutlookBarShortcuts * _result;
    _com_dispatch_method(this, 0x2102, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _OutlookBarShortcutsPtr(_result, false);
}

#pragma implementation_key(1548)
inline enum OlOutlookBarViewType Outlook::OutlookBarGroup::GetViewType ( ) {
    enum OlOutlookBarViewType _result;
    _com_dispatch_method(this, 0x2103, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1549)
inline void Outlook::OutlookBarGroup::PutViewType ( enum OlOutlookBarViewType _arg1 ) {
    _com_dispatch_method(this, 0x2103, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// dispinterface _OutlookBarShortcuts wrapper method implementations
//

#pragma implementation_key(1550)
inline Outlook::_ApplicationPtr Outlook::_OutlookBarShortcuts::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1551)
inline enum OlObjectClass Outlook::_OutlookBarShortcuts::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1552)
inline Outlook::_NameSpacePtr Outlook::_OutlookBarShortcuts::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1553)
inline IDispatchPtr Outlook::_OutlookBarShortcuts::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1554)
inline long Outlook::_OutlookBarShortcuts::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1555)
inline Outlook::OutlookBarShortcutPtr Outlook::_OutlookBarShortcuts::Item ( const _variant_t & Index ) {
    struct OutlookBarShortcut * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return OutlookBarShortcutPtr(_result, false);
}

#pragma implementation_key(1556)
inline Outlook::OutlookBarShortcutPtr Outlook::_OutlookBarShortcuts::Add ( const _variant_t & Target, _bstr_t Name, const _variant_t & Index ) {
    struct OutlookBarShortcut * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x0008\x080c", &Target, (BSTR)Name, &Index);
    return OutlookBarShortcutPtr(_result, false);
}

#pragma implementation_key(1557)
inline HRESULT Outlook::_OutlookBarShortcuts::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

//
// dispinterface OutlookBarShortcut wrapper method implementations
//

#pragma implementation_key(1558)
inline Outlook::_ApplicationPtr Outlook::OutlookBarShortcut::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1559)
inline enum OlObjectClass Outlook::OutlookBarShortcut::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1560)
inline Outlook::_NameSpacePtr Outlook::OutlookBarShortcut::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1561)
inline IDispatchPtr Outlook::OutlookBarShortcut::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1562)
inline _bstr_t Outlook::OutlookBarShortcut::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1563)
inline void Outlook::OutlookBarShortcut::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1564)
inline _variant_t Outlook::OutlookBarShortcut::GetTarget ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2100, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1565)
inline HRESULT Outlook::OutlookBarShortcut::SetIcon ( const _variant_t & Icon ) {
    return _com_dispatch_method(this, 0xfaa2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Icon);
}

//
// dispinterface _OutlookBarGroups wrapper method implementations
//

#pragma implementation_key(1566)
inline Outlook::_ApplicationPtr Outlook::_OutlookBarGroups::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1567)
inline enum OlObjectClass Outlook::_OutlookBarGroups::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1568)
inline Outlook::_NameSpacePtr Outlook::_OutlookBarGroups::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1569)
inline IDispatchPtr Outlook::_OutlookBarGroups::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1570)
inline long Outlook::_OutlookBarGroups::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1571)
inline Outlook::OutlookBarGroupPtr Outlook::_OutlookBarGroups::Item ( const _variant_t & Index ) {
    struct OutlookBarGroup * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return OutlookBarGroupPtr(_result, false);
}

#pragma implementation_key(1572)
inline Outlook::OutlookBarGroupPtr Outlook::_OutlookBarGroups::Add ( _bstr_t Name, const _variant_t & Index ) {
    struct OutlookBarGroup * _result;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)Name, &Index);
    return OutlookBarGroupPtr(_result, false);
}

#pragma implementation_key(1573)
inline HRESULT Outlook::_OutlookBarGroups::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

//
// dispinterface OutlookBarGroupsEvents wrapper method implementations
//

#pragma implementation_key(1574)
inline HRESULT Outlook::OutlookBarGroupsEvents::GroupAdd ( struct OutlookBarGroup * NewGroup ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", NewGroup);
}

#pragma implementation_key(1575)
inline HRESULT Outlook::OutlookBarGroupsEvents::BeforeGroupAdd ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(1576)
inline HRESULT Outlook::OutlookBarGroupsEvents::BeforeGroupRemove ( struct OutlookBarGroup * Group, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Group, Cancel);
}

//
// dispinterface _OutlookBarPane wrapper method implementations
//

#pragma implementation_key(1577)
inline Outlook::_ApplicationPtr Outlook::_OutlookBarPane::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1578)
inline enum OlObjectClass Outlook::_OutlookBarPane::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1579)
inline Outlook::_NameSpacePtr Outlook::_OutlookBarPane::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1580)
inline IDispatchPtr Outlook::_OutlookBarPane::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1581)
inline Outlook::OutlookBarStoragePtr Outlook::_OutlookBarPane::GetContents ( ) {
    struct OutlookBarStorage * _result;
    _com_dispatch_method(this, 0x2100, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OutlookBarStoragePtr(_result, false);
}

#pragma implementation_key(1582)
inline Outlook::OutlookBarGroupPtr Outlook::_OutlookBarPane::GetCurrentGroup ( ) {
    struct OutlookBarGroup * _result;
    _com_dispatch_method(this, 0x2101, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OutlookBarGroupPtr(_result, false);
}

#pragma implementation_key(1583)
inline void Outlook::_OutlookBarPane::PutRefCurrentGroup ( struct OutlookBarGroup * _arg1 ) {
    _com_dispatch_method(this, 0x2101, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1584)
inline _bstr_t Outlook::_OutlookBarPane::GetName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1585)
inline VARIANT_BOOL Outlook::_OutlookBarPane::GetVisible ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x2103, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1586)
inline void Outlook::_OutlookBarPane::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2103, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// dispinterface OutlookBarStorage wrapper method implementations
//

#pragma implementation_key(1587)
inline Outlook::_ApplicationPtr Outlook::OutlookBarStorage::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1588)
inline enum OlObjectClass Outlook::OutlookBarStorage::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1589)
inline Outlook::_NameSpacePtr Outlook::OutlookBarStorage::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1590)
inline IDispatchPtr Outlook::OutlookBarStorage::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1591)
inline Outlook::_OutlookBarGroupsPtr Outlook::OutlookBarStorage::GetGroups ( ) {
    struct _OutlookBarGroups * _result;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _OutlookBarGroupsPtr(_result, false);
}

//
// dispinterface OutlookBarPaneEvents wrapper method implementations
//

#pragma implementation_key(1592)
inline HRESULT Outlook::OutlookBarPaneEvents::BeforeNavigate ( struct OutlookBarShortcut * Shortcut, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Shortcut, Cancel);
}

#pragma implementation_key(1593)
inline HRESULT Outlook::OutlookBarPaneEvents::BeforeGroupSwitch ( struct OutlookBarGroup * ToGroup, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", ToGroup, Cancel);
}

//
// dispinterface OutlookBarShortcutsEvents wrapper method implementations
//

#pragma implementation_key(1594)
inline HRESULT Outlook::OutlookBarShortcutsEvents::ShortcutAdd ( struct OutlookBarShortcut * NewShortcut ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", NewShortcut);
}

#pragma implementation_key(1595)
inline HRESULT Outlook::OutlookBarShortcutsEvents::BeforeShortcutAdd ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(1596)
inline HRESULT Outlook::OutlookBarShortcutsEvents::BeforeShortcutRemove ( struct OutlookBarShortcut * Shortcut, VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b", Shortcut, Cancel);
}

//
// interface PropertyPage wrapper method implementations
//

#pragma implementation_key(1597)
inline HRESULT Outlook::PropertyPage::GetPageInfo ( BSTR * HelpFile, long * HelpContext ) {
    HRESULT _hr = raw_GetPageInfo(HelpFile, HelpContext);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1598)
inline VARIANT_BOOL Outlook::PropertyPage::GetDirty ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Dirty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1599)
inline HRESULT Outlook::PropertyPage::Apply ( ) {
    HRESULT _hr = raw_Apply();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface PropertyPageSite wrapper method implementations
//

#pragma implementation_key(1600)
inline Outlook::_ApplicationPtr Outlook::PropertyPageSite::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1601)
inline enum OlObjectClass Outlook::PropertyPageSite::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1602)
inline Outlook::_NameSpacePtr Outlook::PropertyPageSite::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1603)
inline IDispatchPtr Outlook::PropertyPageSite::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1604)
inline HRESULT Outlook::PropertyPageSite::OnStatusChange ( ) {
    return _com_dispatch_method(this, 0x2100, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface Pages wrapper method implementations
//

#pragma implementation_key(1605)
inline Outlook::_ApplicationPtr Outlook::Pages::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1606)
inline enum OlObjectClass Outlook::Pages::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1607)
inline Outlook::_NameSpacePtr Outlook::Pages::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1608)
inline IDispatchPtr Outlook::Pages::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1609)
inline long Outlook::Pages::GetCount ( ) {
    long _result;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1610)
inline IDispatchPtr Outlook::Pages::Item ( const _variant_t & Index ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1611)
inline IDispatchPtr Outlook::Pages::Add ( const _variant_t & Name ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0x12c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &Name);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1612)
inline HRESULT Outlook::Pages::Remove ( long Index ) {
    return _com_dispatch_method(this, 0x12d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

//
// dispinterface _PostItem wrapper method implementations
//

#pragma implementation_key(1613)
inline Outlook::_ApplicationPtr Outlook::_PostItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1614)
inline enum OlObjectClass Outlook::_PostItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1615)
inline Outlook::_NameSpacePtr Outlook::_PostItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1616)
inline IDispatchPtr Outlook::_PostItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1617)
inline Outlook::ActionsPtr Outlook::_PostItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1618)
inline Outlook::AttachmentsPtr Outlook::_PostItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1619)
inline _bstr_t Outlook::_PostItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1620)
inline void Outlook::_PostItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1621)
inline _bstr_t Outlook::_PostItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1622)
inline void Outlook::_PostItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1623)
inline _bstr_t Outlook::_PostItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1624)
inline void Outlook::_PostItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1625)
inline _bstr_t Outlook::_PostItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1626)
inline void Outlook::_PostItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1627)
inline _bstr_t Outlook::_PostItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1628)
inline _bstr_t Outlook::_PostItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1629)
inline DATE Outlook::_PostItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1630)
inline _bstr_t Outlook::_PostItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1631)
inline Outlook::FormDescriptionPtr Outlook::_PostItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1632)
inline Outlook::_InspectorPtr Outlook::_PostItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1633)
inline enum OlImportance Outlook::_PostItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1634)
inline void Outlook::_PostItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1635)
inline DATE Outlook::_PostItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1636)
inline IUnknownPtr Outlook::_PostItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1637)
inline _bstr_t Outlook::_PostItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1638)
inline void Outlook::_PostItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1639)
inline _bstr_t Outlook::_PostItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1640)
inline void Outlook::_PostItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1641)
inline VARIANT_BOOL Outlook::_PostItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1642)
inline void Outlook::_PostItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1643)
inline long Outlook::_PostItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1644)
inline _bstr_t Outlook::_PostItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1645)
inline VARIANT_BOOL Outlook::_PostItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1646)
inline enum OlSensitivity Outlook::_PostItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1647)
inline void Outlook::_PostItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1648)
inline long Outlook::_PostItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1649)
inline _bstr_t Outlook::_PostItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1650)
inline void Outlook::_PostItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1651)
inline VARIANT_BOOL Outlook::_PostItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1652)
inline void Outlook::_PostItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1653)
inline Outlook::UserPropertiesPtr Outlook::_PostItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1654)
inline HRESULT Outlook::_PostItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1655)
inline IDispatchPtr Outlook::_PostItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1656)
inline HRESULT Outlook::_PostItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1657)
inline HRESULT Outlook::_PostItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1658)
inline IDispatchPtr Outlook::_PostItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1659)
inline HRESULT Outlook::_PostItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1660)
inline HRESULT Outlook::_PostItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1661)
inline HRESULT Outlook::_PostItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1662)
inline DATE Outlook::_PostItem::GetExpiryTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1663)
inline void Outlook::_PostItem::PutExpiryTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1664)
inline _bstr_t Outlook::_PostItem::GetHTMLBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf404, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1665)
inline void Outlook::_PostItem::PutHTMLBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf404, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1666)
inline DATE Outlook::_PostItem::GetReceivedTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0xe06, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1667)
inline _bstr_t Outlook::_PostItem::GetSenderName ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xc1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1668)
inline DATE Outlook::_PostItem::GetSentOn ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1669)
inline HRESULT Outlook::_PostItem::ClearConversationIndex ( ) {
    return _com_dispatch_method(this, 0xf822, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1670)
inline Outlook::_MailItemPtr Outlook::_PostItem::Forward ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1671)
inline HRESULT Outlook::_PostItem::Post ( ) {
    return _com_dispatch_method(this, 0xf075, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1672)
inline Outlook::_MailItemPtr Outlook::_PostItem::Reply ( ) {
    struct _MailItem * _result;
    _com_dispatch_method(this, 0xf810, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _MailItemPtr(_result, false);
}

#pragma implementation_key(1673)
inline Outlook::LinksPtr Outlook::_PostItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1674)
inline Outlook::ItemPropertiesPtr Outlook::_PostItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1675)
inline enum OlBodyFormat Outlook::_PostItem::GetBodyFormat ( ) {
    enum OlBodyFormat _result;
    _com_dispatch_method(this, 0xfa49, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1676)
inline void Outlook::_PostItem::PutBodyFormat ( enum OlBodyFormat _arg1 ) {
    _com_dispatch_method(this, 0xfa49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1677)
inline enum OlDownloadState Outlook::_PostItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1678)
inline HRESULT Outlook::_PostItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1679)
inline long Outlook::_PostItem::GetInternetCodepage ( ) {
    long _result;
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1680)
inline void Outlook::_PostItem::PutInternetCodepage ( long _arg1 ) {
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1681)
inline enum OlRemoteStatus Outlook::_PostItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1682)
inline void Outlook::_PostItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1683)
inline VARIANT_BOOL Outlook::_PostItem::SetACLs ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa3, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1684)
inline VARIANT_BOOL Outlook::_PostItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _RemoteItem wrapper method implementations
//

#pragma implementation_key(1685)
inline Outlook::_ApplicationPtr Outlook::_RemoteItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1686)
inline enum OlObjectClass Outlook::_RemoteItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1687)
inline Outlook::_NameSpacePtr Outlook::_RemoteItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1688)
inline IDispatchPtr Outlook::_RemoteItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1689)
inline Outlook::ActionsPtr Outlook::_RemoteItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1690)
inline Outlook::AttachmentsPtr Outlook::_RemoteItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1691)
inline _bstr_t Outlook::_RemoteItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1692)
inline void Outlook::_RemoteItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1693)
inline _bstr_t Outlook::_RemoteItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1694)
inline void Outlook::_RemoteItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1695)
inline _bstr_t Outlook::_RemoteItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1696)
inline void Outlook::_RemoteItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1697)
inline _bstr_t Outlook::_RemoteItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1698)
inline void Outlook::_RemoteItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1699)
inline _bstr_t Outlook::_RemoteItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1700)
inline _bstr_t Outlook::_RemoteItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1701)
inline DATE Outlook::_RemoteItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1702)
inline _bstr_t Outlook::_RemoteItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1703)
inline Outlook::FormDescriptionPtr Outlook::_RemoteItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1704)
inline Outlook::_InspectorPtr Outlook::_RemoteItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1705)
inline enum OlImportance Outlook::_RemoteItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1706)
inline void Outlook::_RemoteItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1707)
inline DATE Outlook::_RemoteItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1708)
inline IUnknownPtr Outlook::_RemoteItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1709)
inline _bstr_t Outlook::_RemoteItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1710)
inline void Outlook::_RemoteItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1711)
inline _bstr_t Outlook::_RemoteItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1712)
inline void Outlook::_RemoteItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1713)
inline VARIANT_BOOL Outlook::_RemoteItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1714)
inline void Outlook::_RemoteItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1715)
inline long Outlook::_RemoteItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1716)
inline _bstr_t Outlook::_RemoteItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1717)
inline VARIANT_BOOL Outlook::_RemoteItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1718)
inline enum OlSensitivity Outlook::_RemoteItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1719)
inline void Outlook::_RemoteItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1720)
inline long Outlook::_RemoteItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1721)
inline _bstr_t Outlook::_RemoteItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1722)
inline void Outlook::_RemoteItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1723)
inline VARIANT_BOOL Outlook::_RemoteItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1724)
inline void Outlook::_RemoteItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1725)
inline Outlook::UserPropertiesPtr Outlook::_RemoteItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1726)
inline HRESULT Outlook::_RemoteItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1727)
inline IDispatchPtr Outlook::_RemoteItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1728)
inline HRESULT Outlook::_RemoteItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1729)
inline HRESULT Outlook::_RemoteItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1730)
inline IDispatchPtr Outlook::_RemoteItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1731)
inline HRESULT Outlook::_RemoteItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1732)
inline HRESULT Outlook::_RemoteItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1733)
inline HRESULT Outlook::_RemoteItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1734)
inline VARIANT_BOOL Outlook::_RemoteItem::GetHasAttachment ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8f07, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1735)
inline _bstr_t Outlook::_RemoteItem::GetRemoteMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8f02, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1736)
inline long Outlook::_RemoteItem::GetTransferSize ( ) {
    long _result;
    _com_dispatch_method(this, 0x8f05, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1737)
inline long Outlook::_RemoteItem::GetTransferTime ( ) {
    long _result;
    _com_dispatch_method(this, 0x8f04, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1738)
inline Outlook::LinksPtr Outlook::_RemoteItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1739)
inline enum OlDownloadState Outlook::_RemoteItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1740)
inline HRESULT Outlook::_RemoteItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1741)
inline Outlook::ItemPropertiesPtr Outlook::_RemoteItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1742)
inline enum OlRemoteStatus Outlook::_RemoteItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1743)
inline void Outlook::_RemoteItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1744)
inline VARIANT_BOOL Outlook::_RemoteItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _ReportItem wrapper method implementations
//

#pragma implementation_key(1745)
inline Outlook::_ApplicationPtr Outlook::_ReportItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1746)
inline enum OlObjectClass Outlook::_ReportItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1747)
inline Outlook::_NameSpacePtr Outlook::_ReportItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1748)
inline IDispatchPtr Outlook::_ReportItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1749)
inline Outlook::ActionsPtr Outlook::_ReportItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1750)
inline Outlook::AttachmentsPtr Outlook::_ReportItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1751)
inline _bstr_t Outlook::_ReportItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1752)
inline void Outlook::_ReportItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1753)
inline _bstr_t Outlook::_ReportItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1754)
inline void Outlook::_ReportItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1755)
inline _bstr_t Outlook::_ReportItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1756)
inline void Outlook::_ReportItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1757)
inline _bstr_t Outlook::_ReportItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1758)
inline void Outlook::_ReportItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1759)
inline _bstr_t Outlook::_ReportItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1760)
inline _bstr_t Outlook::_ReportItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1761)
inline DATE Outlook::_ReportItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1762)
inline _bstr_t Outlook::_ReportItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1763)
inline Outlook::FormDescriptionPtr Outlook::_ReportItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1764)
inline Outlook::_InspectorPtr Outlook::_ReportItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1765)
inline enum OlImportance Outlook::_ReportItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1766)
inline void Outlook::_ReportItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1767)
inline DATE Outlook::_ReportItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1768)
inline IUnknownPtr Outlook::_ReportItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1769)
inline _bstr_t Outlook::_ReportItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1770)
inline void Outlook::_ReportItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1771)
inline _bstr_t Outlook::_ReportItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1772)
inline void Outlook::_ReportItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1773)
inline VARIANT_BOOL Outlook::_ReportItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1774)
inline void Outlook::_ReportItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1775)
inline long Outlook::_ReportItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1776)
inline _bstr_t Outlook::_ReportItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1777)
inline VARIANT_BOOL Outlook::_ReportItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1778)
inline enum OlSensitivity Outlook::_ReportItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1779)
inline void Outlook::_ReportItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1780)
inline long Outlook::_ReportItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1781)
inline _bstr_t Outlook::_ReportItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1782)
inline void Outlook::_ReportItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1783)
inline VARIANT_BOOL Outlook::_ReportItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1784)
inline void Outlook::_ReportItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1785)
inline Outlook::UserPropertiesPtr Outlook::_ReportItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1786)
inline HRESULT Outlook::_ReportItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1787)
inline IDispatchPtr Outlook::_ReportItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1788)
inline HRESULT Outlook::_ReportItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1789)
inline HRESULT Outlook::_ReportItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1790)
inline IDispatchPtr Outlook::_ReportItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1791)
inline HRESULT Outlook::_ReportItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1792)
inline HRESULT Outlook::_ReportItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1793)
inline HRESULT Outlook::_ReportItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1794)
inline Outlook::LinksPtr Outlook::_ReportItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1795)
inline enum OlDownloadState Outlook::_ReportItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1796)
inline HRESULT Outlook::_ReportItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1797)
inline Outlook::ItemPropertiesPtr Outlook::_ReportItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1798)
inline enum OlRemoteStatus Outlook::_ReportItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1799)
inline void Outlook::_ReportItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1800)
inline VARIANT_BOOL Outlook::_ReportItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _TaskItem wrapper method implementations
//

#pragma implementation_key(1801)
inline Outlook::_ApplicationPtr Outlook::_TaskItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1802)
inline enum OlObjectClass Outlook::_TaskItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1803)
inline Outlook::_NameSpacePtr Outlook::_TaskItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1804)
inline IDispatchPtr Outlook::_TaskItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1805)
inline Outlook::ActionsPtr Outlook::_TaskItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1806)
inline Outlook::AttachmentsPtr Outlook::_TaskItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1807)
inline _bstr_t Outlook::_TaskItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1808)
inline void Outlook::_TaskItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1809)
inline _bstr_t Outlook::_TaskItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1810)
inline void Outlook::_TaskItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1811)
inline _bstr_t Outlook::_TaskItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1812)
inline void Outlook::_TaskItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1813)
inline _bstr_t Outlook::_TaskItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1814)
inline void Outlook::_TaskItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1815)
inline _bstr_t Outlook::_TaskItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1816)
inline _bstr_t Outlook::_TaskItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1817)
inline DATE Outlook::_TaskItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1818)
inline _bstr_t Outlook::_TaskItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1819)
inline Outlook::FormDescriptionPtr Outlook::_TaskItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1820)
inline Outlook::_InspectorPtr Outlook::_TaskItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1821)
inline enum OlImportance Outlook::_TaskItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1822)
inline void Outlook::_TaskItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1823)
inline DATE Outlook::_TaskItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1824)
inline IUnknownPtr Outlook::_TaskItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1825)
inline _bstr_t Outlook::_TaskItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1826)
inline void Outlook::_TaskItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1827)
inline _bstr_t Outlook::_TaskItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1828)
inline void Outlook::_TaskItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1829)
inline VARIANT_BOOL Outlook::_TaskItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1830)
inline void Outlook::_TaskItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1831)
inline long Outlook::_TaskItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1832)
inline _bstr_t Outlook::_TaskItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1833)
inline VARIANT_BOOL Outlook::_TaskItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1834)
inline enum OlSensitivity Outlook::_TaskItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1835)
inline void Outlook::_TaskItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1836)
inline long Outlook::_TaskItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1837)
inline _bstr_t Outlook::_TaskItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1838)
inline void Outlook::_TaskItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1839)
inline VARIANT_BOOL Outlook::_TaskItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1840)
inline void Outlook::_TaskItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1841)
inline Outlook::UserPropertiesPtr Outlook::_TaskItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1842)
inline HRESULT Outlook::_TaskItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1843)
inline IDispatchPtr Outlook::_TaskItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1844)
inline HRESULT Outlook::_TaskItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1845)
inline HRESULT Outlook::_TaskItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1846)
inline IDispatchPtr Outlook::_TaskItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1847)
inline HRESULT Outlook::_TaskItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1848)
inline HRESULT Outlook::_TaskItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1849)
inline HRESULT Outlook::_TaskItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1850)
inline long Outlook::_TaskItem::GetActualWork ( ) {
    long _result;
    _com_dispatch_method(this, 0x8110, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1851)
inline void Outlook::_TaskItem::PutActualWork ( long _arg1 ) {
    _com_dispatch_method(this, 0x8110, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1852)
inline _bstr_t Outlook::_TaskItem::GetCardData ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x812b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1853)
inline void Outlook::_TaskItem::PutCardData ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x812b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1854)
inline VARIANT_BOOL Outlook::_TaskItem::GetComplete ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x811c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1855)
inline void Outlook::_TaskItem::PutComplete ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x811c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1856)
inline _bstr_t Outlook::_TaskItem::GetContacts ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1857)
inline void Outlook::_TaskItem::PutContacts ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1858)
inline _bstr_t Outlook::_TaskItem::GetContactNames ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1859)
inline void Outlook::_TaskItem::PutContactNames ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1860)
inline DATE Outlook::_TaskItem::GetDateCompleted ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x810f, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1861)
inline void Outlook::_TaskItem::PutDateCompleted ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x810f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1862)
inline enum OlTaskDelegationState Outlook::_TaskItem::GetDelegationState ( ) {
    enum OlTaskDelegationState _result;
    _com_dispatch_method(this, 0x812a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1863)
inline _bstr_t Outlook::_TaskItem::GetDelegator ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8121, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1864)
inline DATE Outlook::_TaskItem::GetDueDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8105, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1865)
inline void Outlook::_TaskItem::PutDueDate ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8105, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1866)
inline VARIANT_BOOL Outlook::_TaskItem::GetIsRecurring ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf617, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1867)
inline long Outlook::_TaskItem::GetOrdinal ( ) {
    long _result;
    _com_dispatch_method(this, 0x8123, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1868)
inline void Outlook::_TaskItem::PutOrdinal ( long _arg1 ) {
    _com_dispatch_method(this, 0x8123, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1869)
inline _bstr_t Outlook::_TaskItem::GetOwner ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x811f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1870)
inline void Outlook::_TaskItem::PutOwner ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x811f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1871)
inline enum OlTaskOwnership Outlook::_TaskItem::GetOwnership ( ) {
    enum OlTaskOwnership _result;
    _com_dispatch_method(this, 0x8129, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1872)
inline long Outlook::_TaskItem::GetPercentComplete ( ) {
    long _result;
    _com_dispatch_method(this, 0xf61f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1873)
inline void Outlook::_TaskItem::PutPercentComplete ( long _arg1 ) {
    _com_dispatch_method(this, 0xf61f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1874)
inline Outlook::RecipientsPtr Outlook::_TaskItem::GetRecipients ( ) {
    struct Recipients * _result;
    _com_dispatch_method(this, 0xf814, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RecipientsPtr(_result, false);
}

#pragma implementation_key(1875)
inline DATE Outlook::_TaskItem::GetReminderTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8502, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1876)
inline void Outlook::_TaskItem::PutReminderTime ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8502, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1877)
inline VARIANT_BOOL Outlook::_TaskItem::GetReminderOverrideDefault ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x851c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1878)
inline void Outlook::_TaskItem::PutReminderOverrideDefault ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x851c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1879)
inline VARIANT_BOOL Outlook::_TaskItem::GetReminderPlaySound ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x851e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1880)
inline void Outlook::_TaskItem::PutReminderPlaySound ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x851e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1881)
inline VARIANT_BOOL Outlook::_TaskItem::GetReminderSet ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1882)
inline void Outlook::_TaskItem::PutReminderSet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8503, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1883)
inline _bstr_t Outlook::_TaskItem::GetReminderSoundFile ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x851f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1884)
inline void Outlook::_TaskItem::PutReminderSoundFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x851f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1885)
inline enum OlTaskResponse Outlook::_TaskItem::GetResponseState ( ) {
    enum OlTaskResponse _result;
    _com_dispatch_method(this, 0xf623, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1886)
inline _bstr_t Outlook::_TaskItem::GetRole ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8127, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1887)
inline void Outlook::_TaskItem::PutRole ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8127, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1888)
inline _bstr_t Outlook::_TaskItem::GetSchedulePlusPriority ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x812f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1889)
inline void Outlook::_TaskItem::PutSchedulePlusPriority ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x812f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1890)
inline DATE Outlook::_TaskItem::GetStartDate ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x8104, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1891)
inline void Outlook::_TaskItem::PutStartDate ( DATE _arg1 ) {
    _com_dispatch_method(this, 0x8104, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0007", _arg1);
}

#pragma implementation_key(1892)
inline enum OlTaskStatus Outlook::_TaskItem::GetStatus ( ) {
    enum OlTaskStatus _result;
    _com_dispatch_method(this, 0x8101, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1893)
inline void Outlook::_TaskItem::PutStatus ( enum OlTaskStatus _arg1 ) {
    _com_dispatch_method(this, 0x8101, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1894)
inline _bstr_t Outlook::_TaskItem::GetStatusOnCompletionRecipients ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe02, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1895)
inline void Outlook::_TaskItem::PutStatusOnCompletionRecipients ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe02, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1896)
inline _bstr_t Outlook::_TaskItem::GetStatusUpdateRecipients ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xe03, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1897)
inline void Outlook::_TaskItem::PutStatusUpdateRecipients ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe03, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1898)
inline VARIANT_BOOL Outlook::_TaskItem::GetTeamTask ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8103, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1899)
inline void Outlook::_TaskItem::PutTeamTask ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8103, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1900)
inline long Outlook::_TaskItem::GetTotalWork ( ) {
    long _result;
    _com_dispatch_method(this, 0x8111, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1901)
inline void Outlook::_TaskItem::PutTotalWork ( long _arg1 ) {
    _com_dispatch_method(this, 0x8111, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1902)
inline Outlook::_TaskItemPtr Outlook::_TaskItem::Assign ( ) {
    struct _TaskItem * _result;
    _com_dispatch_method(this, 0xf620, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return _TaskItemPtr(_result, false);
}

#pragma implementation_key(1903)
inline HRESULT Outlook::_TaskItem::CancelResponseState ( ) {
    return _com_dispatch_method(this, 0xf622, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1904)
inline HRESULT Outlook::_TaskItem::ClearRecurrencePattern ( ) {
    return _com_dispatch_method(this, 0xf0a5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1905)
inline Outlook::RecurrencePatternPtr Outlook::_TaskItem::GetRecurrencePattern ( ) {
    struct RecurrencePattern * _result;
    _com_dispatch_method(this, 0xf0a4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return RecurrencePatternPtr(_result, false);
}

#pragma implementation_key(1906)
inline HRESULT Outlook::_TaskItem::MarkComplete ( ) {
    return _com_dispatch_method(this, 0xf60d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1907)
inline Outlook::_TaskItemPtr Outlook::_TaskItem::Respond ( enum OlTaskResponse Response, const _variant_t & fNoUI, const _variant_t & fAdditionalTextDialog ) {
    struct _TaskItem * _result;
    _com_dispatch_method(this, 0xf621, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x000c\x000c", Response, &fNoUI, &fAdditionalTextDialog);
    return _TaskItemPtr(_result, false);
}

#pragma implementation_key(1908)
inline HRESULT Outlook::_TaskItem::Send ( ) {
    return _com_dispatch_method(this, 0xf075, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1909)
inline VARIANT_BOOL Outlook::_TaskItem::SkipRecurrence ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf624, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1910)
inline IDispatchPtr Outlook::_TaskItem::StatusReport ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf612, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1911)
inline Outlook::LinksPtr Outlook::_TaskItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1912)
inline enum OlDownloadState Outlook::_TaskItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1913)
inline HRESULT Outlook::_TaskItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1914)
inline Outlook::ItemPropertiesPtr Outlook::_TaskItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1915)
inline long Outlook::_TaskItem::GetInternetCodepage ( ) {
    long _result;
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1916)
inline void Outlook::_TaskItem::PutInternetCodepage ( long _arg1 ) {
    _com_dispatch_method(this, 0x3fde, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1917)
inline enum OlRemoteStatus Outlook::_TaskItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1918)
inline void Outlook::_TaskItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1919)
inline VARIANT_BOOL Outlook::_TaskItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _TaskRequestAcceptItem wrapper method implementations
//

#pragma implementation_key(1920)
inline Outlook::_ApplicationPtr Outlook::_TaskRequestAcceptItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1921)
inline enum OlObjectClass Outlook::_TaskRequestAcceptItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1922)
inline Outlook::_NameSpacePtr Outlook::_TaskRequestAcceptItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1923)
inline IDispatchPtr Outlook::_TaskRequestAcceptItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1924)
inline Outlook::ActionsPtr Outlook::_TaskRequestAcceptItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1925)
inline Outlook::AttachmentsPtr Outlook::_TaskRequestAcceptItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1926)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1927)
inline void Outlook::_TaskRequestAcceptItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1928)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1929)
inline void Outlook::_TaskRequestAcceptItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1930)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1931)
inline void Outlook::_TaskRequestAcceptItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1932)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1933)
inline void Outlook::_TaskRequestAcceptItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1934)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1935)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1936)
inline DATE Outlook::_TaskRequestAcceptItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1937)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1938)
inline Outlook::FormDescriptionPtr Outlook::_TaskRequestAcceptItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1939)
inline Outlook::_InspectorPtr Outlook::_TaskRequestAcceptItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1940)
inline enum OlImportance Outlook::_TaskRequestAcceptItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1941)
inline void Outlook::_TaskRequestAcceptItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1942)
inline DATE Outlook::_TaskRequestAcceptItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1943)
inline IUnknownPtr Outlook::_TaskRequestAcceptItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1944)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1945)
inline void Outlook::_TaskRequestAcceptItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1946)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1947)
inline void Outlook::_TaskRequestAcceptItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1948)
inline VARIANT_BOOL Outlook::_TaskRequestAcceptItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1949)
inline void Outlook::_TaskRequestAcceptItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1950)
inline long Outlook::_TaskRequestAcceptItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1951)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1952)
inline VARIANT_BOOL Outlook::_TaskRequestAcceptItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1953)
inline enum OlSensitivity Outlook::_TaskRequestAcceptItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1954)
inline void Outlook::_TaskRequestAcceptItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1955)
inline long Outlook::_TaskRequestAcceptItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1956)
inline _bstr_t Outlook::_TaskRequestAcceptItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1957)
inline void Outlook::_TaskRequestAcceptItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1958)
inline VARIANT_BOOL Outlook::_TaskRequestAcceptItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1959)
inline void Outlook::_TaskRequestAcceptItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1960)
inline Outlook::UserPropertiesPtr Outlook::_TaskRequestAcceptItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(1961)
inline HRESULT Outlook::_TaskRequestAcceptItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(1962)
inline IDispatchPtr Outlook::_TaskRequestAcceptItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1963)
inline HRESULT Outlook::_TaskRequestAcceptItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1964)
inline HRESULT Outlook::_TaskRequestAcceptItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(1965)
inline IDispatchPtr Outlook::_TaskRequestAcceptItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1966)
inline HRESULT Outlook::_TaskRequestAcceptItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1967)
inline HRESULT Outlook::_TaskRequestAcceptItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1968)
inline HRESULT Outlook::_TaskRequestAcceptItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(1969)
inline Outlook::_TaskItemPtr Outlook::_TaskRequestAcceptItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList ) {
    struct _TaskItem * _result;
    _com_dispatch_method(this, 0xf014, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", AddToTaskList);
    return _TaskItemPtr(_result, false);
}

#pragma implementation_key(1970)
inline Outlook::LinksPtr Outlook::_TaskRequestAcceptItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(1971)
inline enum OlDownloadState Outlook::_TaskRequestAcceptItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1972)
inline HRESULT Outlook::_TaskRequestAcceptItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1973)
inline Outlook::ItemPropertiesPtr Outlook::_TaskRequestAcceptItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(1974)
inline enum OlRemoteStatus Outlook::_TaskRequestAcceptItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1975)
inline void Outlook::_TaskRequestAcceptItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1976)
inline VARIANT_BOOL Outlook::_TaskRequestAcceptItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _TaskRequestDeclineItem wrapper method implementations
//

#pragma implementation_key(1977)
inline Outlook::_ApplicationPtr Outlook::_TaskRequestDeclineItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(1978)
inline enum OlObjectClass Outlook::_TaskRequestDeclineItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1979)
inline Outlook::_NameSpacePtr Outlook::_TaskRequestDeclineItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(1980)
inline IDispatchPtr Outlook::_TaskRequestDeclineItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1981)
inline Outlook::ActionsPtr Outlook::_TaskRequestDeclineItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(1982)
inline Outlook::AttachmentsPtr Outlook::_TaskRequestDeclineItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(1983)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1984)
inline void Outlook::_TaskRequestDeclineItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1985)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1986)
inline void Outlook::_TaskRequestDeclineItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1987)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1988)
inline void Outlook::_TaskRequestDeclineItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1989)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1990)
inline void Outlook::_TaskRequestDeclineItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1991)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1992)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1993)
inline DATE Outlook::_TaskRequestDeclineItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1994)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1995)
inline Outlook::FormDescriptionPtr Outlook::_TaskRequestDeclineItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(1996)
inline Outlook::_InspectorPtr Outlook::_TaskRequestDeclineItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(1997)
inline enum OlImportance Outlook::_TaskRequestDeclineItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1998)
inline void Outlook::_TaskRequestDeclineItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1999)
inline DATE Outlook::_TaskRequestDeclineItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2000)
inline IUnknownPtr Outlook::_TaskRequestDeclineItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2001)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2002)
inline void Outlook::_TaskRequestDeclineItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2003)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2004)
inline void Outlook::_TaskRequestDeclineItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2005)
inline VARIANT_BOOL Outlook::_TaskRequestDeclineItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2006)
inline void Outlook::_TaskRequestDeclineItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2007)
inline long Outlook::_TaskRequestDeclineItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2008)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2009)
inline VARIANT_BOOL Outlook::_TaskRequestDeclineItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2010)
inline enum OlSensitivity Outlook::_TaskRequestDeclineItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2011)
inline void Outlook::_TaskRequestDeclineItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2012)
inline long Outlook::_TaskRequestDeclineItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2013)
inline _bstr_t Outlook::_TaskRequestDeclineItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2014)
inline void Outlook::_TaskRequestDeclineItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2015)
inline VARIANT_BOOL Outlook::_TaskRequestDeclineItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2016)
inline void Outlook::_TaskRequestDeclineItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2017)
inline Outlook::UserPropertiesPtr Outlook::_TaskRequestDeclineItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(2018)
inline HRESULT Outlook::_TaskRequestDeclineItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(2019)
inline IDispatchPtr Outlook::_TaskRequestDeclineItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2020)
inline HRESULT Outlook::_TaskRequestDeclineItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2021)
inline HRESULT Outlook::_TaskRequestDeclineItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(2022)
inline IDispatchPtr Outlook::_TaskRequestDeclineItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2023)
inline HRESULT Outlook::_TaskRequestDeclineItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2024)
inline HRESULT Outlook::_TaskRequestDeclineItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2025)
inline HRESULT Outlook::_TaskRequestDeclineItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(2026)
inline Outlook::_TaskItemPtr Outlook::_TaskRequestDeclineItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList ) {
    struct _TaskItem * _result;
    _com_dispatch_method(this, 0xf014, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", AddToTaskList);
    return _TaskItemPtr(_result, false);
}

#pragma implementation_key(2027)
inline Outlook::LinksPtr Outlook::_TaskRequestDeclineItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(2028)
inline enum OlDownloadState Outlook::_TaskRequestDeclineItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2029)
inline HRESULT Outlook::_TaskRequestDeclineItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2030)
inline Outlook::ItemPropertiesPtr Outlook::_TaskRequestDeclineItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(2031)
inline enum OlRemoteStatus Outlook::_TaskRequestDeclineItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2032)
inline void Outlook::_TaskRequestDeclineItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2033)
inline VARIANT_BOOL Outlook::_TaskRequestDeclineItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _TaskRequestItem wrapper method implementations
//

#pragma implementation_key(2034)
inline Outlook::_ApplicationPtr Outlook::_TaskRequestItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(2035)
inline enum OlObjectClass Outlook::_TaskRequestItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2036)
inline Outlook::_NameSpacePtr Outlook::_TaskRequestItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(2037)
inline IDispatchPtr Outlook::_TaskRequestItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2038)
inline Outlook::ActionsPtr Outlook::_TaskRequestItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(2039)
inline Outlook::AttachmentsPtr Outlook::_TaskRequestItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(2040)
inline _bstr_t Outlook::_TaskRequestItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2041)
inline void Outlook::_TaskRequestItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2042)
inline _bstr_t Outlook::_TaskRequestItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2043)
inline void Outlook::_TaskRequestItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2044)
inline _bstr_t Outlook::_TaskRequestItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2045)
inline void Outlook::_TaskRequestItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2046)
inline _bstr_t Outlook::_TaskRequestItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2047)
inline void Outlook::_TaskRequestItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2048)
inline _bstr_t Outlook::_TaskRequestItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2049)
inline _bstr_t Outlook::_TaskRequestItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2050)
inline DATE Outlook::_TaskRequestItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2051)
inline _bstr_t Outlook::_TaskRequestItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2052)
inline Outlook::FormDescriptionPtr Outlook::_TaskRequestItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(2053)
inline Outlook::_InspectorPtr Outlook::_TaskRequestItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(2054)
inline enum OlImportance Outlook::_TaskRequestItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2055)
inline void Outlook::_TaskRequestItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2056)
inline DATE Outlook::_TaskRequestItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2057)
inline IUnknownPtr Outlook::_TaskRequestItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2058)
inline _bstr_t Outlook::_TaskRequestItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2059)
inline void Outlook::_TaskRequestItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2060)
inline _bstr_t Outlook::_TaskRequestItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2061)
inline void Outlook::_TaskRequestItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2062)
inline VARIANT_BOOL Outlook::_TaskRequestItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2063)
inline void Outlook::_TaskRequestItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2064)
inline long Outlook::_TaskRequestItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2065)
inline _bstr_t Outlook::_TaskRequestItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2066)
inline VARIANT_BOOL Outlook::_TaskRequestItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2067)
inline enum OlSensitivity Outlook::_TaskRequestItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2068)
inline void Outlook::_TaskRequestItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2069)
inline long Outlook::_TaskRequestItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2070)
inline _bstr_t Outlook::_TaskRequestItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2071)
inline void Outlook::_TaskRequestItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2072)
inline VARIANT_BOOL Outlook::_TaskRequestItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2073)
inline void Outlook::_TaskRequestItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2074)
inline Outlook::UserPropertiesPtr Outlook::_TaskRequestItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(2075)
inline HRESULT Outlook::_TaskRequestItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(2076)
inline IDispatchPtr Outlook::_TaskRequestItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2077)
inline HRESULT Outlook::_TaskRequestItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2078)
inline HRESULT Outlook::_TaskRequestItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(2079)
inline IDispatchPtr Outlook::_TaskRequestItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2080)
inline HRESULT Outlook::_TaskRequestItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2081)
inline HRESULT Outlook::_TaskRequestItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2082)
inline HRESULT Outlook::_TaskRequestItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(2083)
inline Outlook::_TaskItemPtr Outlook::_TaskRequestItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList ) {
    struct _TaskItem * _result;
    _com_dispatch_method(this, 0xf014, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", AddToTaskList);
    return _TaskItemPtr(_result, false);
}

#pragma implementation_key(2084)
inline Outlook::LinksPtr Outlook::_TaskRequestItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(2085)
inline enum OlDownloadState Outlook::_TaskRequestItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2086)
inline HRESULT Outlook::_TaskRequestItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2087)
inline Outlook::ItemPropertiesPtr Outlook::_TaskRequestItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(2088)
inline enum OlRemoteStatus Outlook::_TaskRequestItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2089)
inline void Outlook::_TaskRequestItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2090)
inline VARIANT_BOOL Outlook::_TaskRequestItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface _TaskRequestUpdateItem wrapper method implementations
//

#pragma implementation_key(2091)
inline Outlook::_ApplicationPtr Outlook::_TaskRequestUpdateItem::GetApplication ( ) {
    struct _Application * _result;
    _com_dispatch_method(this, 0xf000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _ApplicationPtr(_result, false);
}

#pragma implementation_key(2092)
inline enum OlObjectClass Outlook::_TaskRequestUpdateItem::GetClass ( ) {
    enum OlObjectClass _result;
    _com_dispatch_method(this, 0xf00a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2093)
inline Outlook::_NameSpacePtr Outlook::_TaskRequestUpdateItem::GetSession ( ) {
    struct _NameSpace * _result;
    _com_dispatch_method(this, 0xf00b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _NameSpacePtr(_result, false);
}

#pragma implementation_key(2094)
inline IDispatchPtr Outlook::_TaskRequestUpdateItem::GetParent ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2095)
inline Outlook::ActionsPtr Outlook::_TaskRequestUpdateItem::GetActions ( ) {
    struct Actions * _result;
    _com_dispatch_method(this, 0xf817, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ActionsPtr(_result, false);
}

#pragma implementation_key(2096)
inline Outlook::AttachmentsPtr Outlook::_TaskRequestUpdateItem::GetAttachments ( ) {
    struct Attachments * _result;
    _com_dispatch_method(this, 0xf815, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttachmentsPtr(_result, false);
}

#pragma implementation_key(2097)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetBillingInformation ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2098)
inline void Outlook::_TaskRequestUpdateItem::PutBillingInformation ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8535, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2099)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetBody ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2100)
inline void Outlook::_TaskRequestUpdateItem::PutBody ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2101)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetCategories ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2102)
inline void Outlook::_TaskRequestUpdateItem::PutCategories ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2103)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetCompanies ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2104)
inline void Outlook::_TaskRequestUpdateItem::PutCompanies ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x853b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2105)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetConversationIndex ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2106)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetConversationTopic ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2107)
inline DATE Outlook::_TaskRequestUpdateItem::GetCreationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2108)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetEntryID ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xf01e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2109)
inline Outlook::FormDescriptionPtr Outlook::_TaskRequestUpdateItem::GetFormDescription ( ) {
    struct FormDescription * _result;
    _com_dispatch_method(this, 0xf095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FormDescriptionPtr(_result, false);
}

#pragma implementation_key(2110)
inline Outlook::_InspectorPtr Outlook::_TaskRequestUpdateItem::GetGetInspector ( ) {
    struct _Inspector * _result;
    _com_dispatch_method(this, 0xf03e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return _InspectorPtr(_result, false);
}

#pragma implementation_key(2111)
inline enum OlImportance Outlook::_TaskRequestUpdateItem::GetImportance ( ) {
    enum OlImportance _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2112)
inline void Outlook::_TaskRequestUpdateItem::PutImportance ( enum OlImportance _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2113)
inline DATE Outlook::_TaskRequestUpdateItem::GetLastModificationTime ( ) {
    DATE _result;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_DATE, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2114)
inline IUnknownPtr Outlook::_TaskRequestUpdateItem::GetMAPIOBJECT ( ) {
    IUnknown * _result;
    _com_dispatch_method(this, 0xf100, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2115)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetMessageClass ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2116)
inline void Outlook::_TaskRequestUpdateItem::PutMessageClass ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2117)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetMileage ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2118)
inline void Outlook::_TaskRequestUpdateItem::PutMileage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8534, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2119)
inline VARIANT_BOOL Outlook::_TaskRequestUpdateItem::GetNoAging ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2120)
inline void Outlook::_TaskRequestUpdateItem::PutNoAging ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x850e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2121)
inline long Outlook::_TaskRequestUpdateItem::GetOutlookInternalVersion ( ) {
    long _result;
    _com_dispatch_method(this, 0x8552, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2122)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetOutlookVersion ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x8554, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2123)
inline VARIANT_BOOL Outlook::_TaskRequestUpdateItem::GetSaved ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf0a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2124)
inline enum OlSensitivity Outlook::_TaskRequestUpdateItem::GetSensitivity ( ) {
    enum OlSensitivity _result;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2125)
inline void Outlook::_TaskRequestUpdateItem::PutSensitivity ( enum OlSensitivity _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2126)
inline long Outlook::_TaskRequestUpdateItem::GetSize ( ) {
    long _result;
    _com_dispatch_method(this, 0xe08, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2127)
inline _bstr_t Outlook::_TaskRequestUpdateItem::GetSubject ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2128)
inline void Outlook::_TaskRequestUpdateItem::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2129)
inline VARIANT_BOOL Outlook::_TaskRequestUpdateItem::GetUnRead ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2130)
inline void Outlook::_TaskRequestUpdateItem::PutUnRead ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf01c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2131)
inline Outlook::UserPropertiesPtr Outlook::_TaskRequestUpdateItem::GetUserProperties ( ) {
    struct UserProperties * _result;
    _com_dispatch_method(this, 0xf816, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UserPropertiesPtr(_result, false);
}

#pragma implementation_key(2132)
inline HRESULT Outlook::_TaskRequestUpdateItem::Close ( enum OlInspectorClose SaveMode ) {
    return _com_dispatch_method(this, 0xf023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", SaveMode);
}

#pragma implementation_key(2133)
inline IDispatchPtr Outlook::_TaskRequestUpdateItem::Copy ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf032, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2134)
inline HRESULT Outlook::_TaskRequestUpdateItem::Delete ( ) {
    return _com_dispatch_method(this, 0xf04a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2135)
inline HRESULT Outlook::_TaskRequestUpdateItem::Display ( const _variant_t & Modal ) {
    return _com_dispatch_method(this, 0xf0a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Modal);
}

#pragma implementation_key(2136)
inline IDispatchPtr Outlook::_TaskRequestUpdateItem::Move ( struct MAPIFolder * DestFldr ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xf034, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DestFldr);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2137)
inline HRESULT Outlook::_TaskRequestUpdateItem::PrintOut ( ) {
    return _com_dispatch_method(this, 0xf033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2138)
inline HRESULT Outlook::_TaskRequestUpdateItem::Save ( ) {
    return _com_dispatch_method(this, 0xf048, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2139)
inline HRESULT Outlook::_TaskRequestUpdateItem::SaveAs ( _bstr_t Path, const _variant_t & Type ) {
    return _com_dispatch_method(this, 0xf051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Path, &Type);
}

#pragma implementation_key(2140)
inline Outlook::_TaskItemPtr Outlook::_TaskRequestUpdateItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList ) {
    struct _TaskItem * _result;
    _com_dispatch_method(this, 0xf014, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", AddToTaskList);
    return _TaskItemPtr(_result, false);
}

#pragma implementation_key(2141)
inline Outlook::LinksPtr Outlook::_TaskRequestUpdateItem::GetLinks ( ) {
    struct Links * _result;
    _com_dispatch_method(this, 0xf405, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LinksPtr(_result, false);
}

#pragma implementation_key(2142)
inline enum OlDownloadState Outlook::_TaskRequestUpdateItem::GetDownloadState ( ) {
    enum OlDownloadState _result;
    _com_dispatch_method(this, 0xfa4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2143)
inline HRESULT Outlook::_TaskRequestUpdateItem::ShowCategoriesDialog ( ) {
    return _com_dispatch_method(this, 0xfa0b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2144)
inline Outlook::ItemPropertiesPtr Outlook::_TaskRequestUpdateItem::GetItemProperties ( ) {
    struct ItemProperties * _result;
    _com_dispatch_method(this, 0xfa09, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemPropertiesPtr(_result, false);
}

#pragma implementation_key(2145)
inline enum OlRemoteStatus Outlook::_TaskRequestUpdateItem::GetMarkForDownload ( ) {
    enum OlRemoteStatus _result;
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2146)
inline void Outlook::_TaskRequestUpdateItem::PutMarkForDownload ( enum OlRemoteStatus _arg1 ) {
    _com_dispatch_method(this, 0x8571, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2147)
inline VARIANT_BOOL Outlook::_TaskRequestUpdateItem::GetIsConflict ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0xfaa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface ApplicationEvents_10 wrapper method implementations
//

#pragma implementation_key(2148)
inline HRESULT Outlook::ApplicationEvents_10::ItemSend ( IDispatch * Item, VARIANT_BOOL * Cancel ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009\x400b", Item, Cancel);
    return _result;
}

#pragma implementation_key(2149)
inline HRESULT Outlook::ApplicationEvents_10::NewMail ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2150)
inline HRESULT Outlook::ApplicationEvents_10::Reminder ( IDispatch * Item ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf004, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009", Item);
    return _result;
}

#pragma implementation_key(2151)
inline HRESULT Outlook::ApplicationEvents_10::OptionsPagesAdd ( struct PropertyPages * Pages ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf005, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0009", Pages);
    return _result;
}

#pragma implementation_key(2152)
inline HRESULT Outlook::ApplicationEvents_10::Startup ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf006, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2153)
inline HRESULT Outlook::ApplicationEvents_10::Quit ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0xf007, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2154)
inline HRESULT Outlook::ApplicationEvents_10::AdvancedSearchComplete ( struct Search * SearchObject ) {
    return _com_dispatch_method(this, 0xfa6a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", SearchObject);
}

#pragma implementation_key(2155)
inline HRESULT Outlook::ApplicationEvents_10::AdvancedSearchStopped ( struct Search * SearchObject ) {
    return _com_dispatch_method(this, 0xfa6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", SearchObject);
}

#pragma implementation_key(2156)
inline HRESULT Outlook::ApplicationEvents_10::MAPILogonComplete ( ) {
    return _com_dispatch_method(this, 0xfa90, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface ResultsEvents wrapper method implementations
//

#pragma implementation_key(2157)
inline HRESULT Outlook::ResultsEvents::ItemAdd ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0xf001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(2158)
inline HRESULT Outlook::ResultsEvents::ItemChange ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0xf002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(2159)
inline HRESULT Outlook::ResultsEvents::ItemRemove ( ) {
    return _com_dispatch_method(this, 0xf003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface _ViewsEvents wrapper method implementations
//

#pragma implementation_key(2160)
inline HRESULT Outlook::_ViewsEvents::ViewAdd ( struct View * View ) {
    return _com_dispatch_method(this, 0x190, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", View);
}

#pragma implementation_key(2161)
inline HRESULT Outlook::_ViewsEvents::ViewRemove ( struct View * View ) {
    return _com_dispatch_method(this, 0xfa47, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", View);
}

//
// dispinterface ReminderCollectionEvents wrapper method implementations
//

#pragma implementation_key(2162)
inline HRESULT Outlook::ReminderCollectionEvents::BeforeReminderShow ( VARIANT_BOOL * Cancel ) {
    return _com_dispatch_method(this, 0xfa93, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", Cancel);
}

#pragma implementation_key(2163)
inline HRESULT Outlook::ReminderCollectionEvents::ReminderAdd ( struct _Reminder * ReminderObject ) {
    return _com_dispatch_method(this, 0xfa94, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ReminderObject);
}

#pragma implementation_key(2164)
inline HRESULT Outlook::ReminderCollectionEvents::ReminderChange ( struct _Reminder * ReminderObject ) {
    return _com_dispatch_method(this, 0xfa95, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ReminderObject);
}

#pragma implementation_key(2165)
inline HRESULT Outlook::ReminderCollectionEvents::ReminderFire ( struct _Reminder * ReminderObject ) {
    return _com_dispatch_method(this, 0xfa96, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ReminderObject);
}

#pragma implementation_key(2166)
inline HRESULT Outlook::ReminderCollectionEvents::ReminderRemove ( ) {
    return _com_dispatch_method(this, 0xfa97, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2167)
inline HRESULT Outlook::ReminderCollectionEvents::Snooze ( struct _Reminder * ReminderObject ) {
    return _com_dispatch_method(this, 0xfa98, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ReminderObject);
}

//
// interface _IRecipientControl wrapper method implementations
//

#pragma implementation_key(2168)
inline VARIANT_BOOL Outlook::_IRecipientControl::GetEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2169)
inline void Outlook::_IRecipientControl::PutEnabled ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_Enabled(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2170)
inline long Outlook::_IRecipientControl::GetBackColor ( ) {
    long _result;
    HRESULT _hr = get_BackColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2171)
inline void Outlook::_IRecipientControl::PutBackColor ( long BackColor ) {
    HRESULT _hr = put_BackColor(BackColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2172)
inline long Outlook::_IRecipientControl::GetForeColor ( ) {
    long _result;
    HRESULT _hr = get_ForeColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2173)
inline void Outlook::_IRecipientControl::PutForeColor ( long ForeColor ) {
    HRESULT _hr = put_ForeColor(ForeColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2174)
inline VARIANT_BOOL Outlook::_IRecipientControl::GetReadOnly ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2175)
inline void Outlook::_IRecipientControl::PutReadOnly ( VARIANT_BOOL ReadOnly ) {
    HRESULT _hr = put_ReadOnly(ReadOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2176)
inline IDispatchPtr Outlook::_IRecipientControl::GetFont ( ) {
    IDispatch * _result;
    HRESULT _hr = get_Font(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2177)
inline void Outlook::_IRecipientControl::PutFont ( IDispatch * Font ) {
    HRESULT _hr = put_Font(Font);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2178)
inline long Outlook::_IRecipientControl::GetSpecialEffect ( ) {
    long _result;
    HRESULT _hr = get_SpecialEffect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2179)
inline void Outlook::_IRecipientControl::PutSpecialEffect ( long Effect ) {
    HRESULT _hr = put_SpecialEffect(Effect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface _DRecipientControl wrapper method implementations
//

#pragma implementation_key(2180)
inline VARIANT_BOOL Outlook::_DRecipientControl::GetEnabled ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, DISPID_ENABLED, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2181)
inline void Outlook::_DRecipientControl::PutEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, DISPID_ENABLED, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2182)
inline long Outlook::_DRecipientControl::GetBackColor ( ) {
    long _result;
    _com_dispatch_method(this, DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2183)
inline void Outlook::_DRecipientControl::PutBackColor ( long _arg1 ) {
    _com_dispatch_method(this, DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2184)
inline long Outlook::_DRecipientControl::GetForeColor ( ) {
    long _result;
    _com_dispatch_method(this, DISPID_FORECOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2185)
inline void Outlook::_DRecipientControl::PutForeColor ( long _arg1 ) {
    _com_dispatch_method(this, DISPID_FORECOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2186)
inline VARIANT_BOOL Outlook::_DRecipientControl::GetReadOnly ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8001f008, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2187)
inline void Outlook::_DRecipientControl::PutReadOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8001f008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2188)
inline IDispatchPtr Outlook::_DRecipientControl::GetFont ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, DISPID_FONT, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2189)
inline void Outlook::_DRecipientControl::PutFont ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, DISPID_FONT, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2190)
inline long Outlook::_DRecipientControl::GetSpecialEffect ( ) {
    long _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2191)
inline void Outlook::_DRecipientControl::PutSpecialEffect ( long _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// interface _IDocSiteControl wrapper method implementations
//

#pragma implementation_key(2192)
inline VARIANT_BOOL Outlook::_IDocSiteControl::GetReadOnly ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2193)
inline void Outlook::_IDocSiteControl::PutReadOnly ( VARIANT_BOOL ReadOnly ) {
    HRESULT _hr = put_ReadOnly(ReadOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface _DDocSiteControl wrapper method implementations
//

#pragma implementation_key(2194)
inline VARIANT_BOOL Outlook::_DDocSiteControl::GetReadOnly ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_method(this, 0x8001f008, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2195)
inline void Outlook::_DDocSiteControl::PutReadOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8001f008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// dispinterface _IDpxCtrl wrapper method implementations
//

#pragma implementation_key(2196)
inline long Outlook::_IDpxCtrl::GetStartDate ( ) {
    long _result;
    _com_dispatch_method(this, 0xfa5b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2197)
inline void Outlook::_IDpxCtrl::PutStartDate ( long _arg1 ) {
    _com_dispatch_method(this, 0xfa5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2198)
inline long Outlook::_IDpxCtrl::GetEndDate ( ) {
    long _result;
    _com_dispatch_method(this, 0xfa5c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2199)
inline void Outlook::_IDpxCtrl::PutEndDate ( long _arg1 ) {
    _com_dispatch_method(this, 0xfa5c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// interface _IPageWrapCtrl wrapper method implementations
//

#pragma implementation_key(2200)
inline unsigned long Outlook::_IPageWrapCtrl::GetBackColor ( ) {
    unsigned long _result;
    HRESULT _hr = get_BackColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2201)
inline void Outlook::_IPageWrapCtrl::PutBackColor ( unsigned long pcolorRef ) {
    HRESULT _hr = put_BackColor(pcolorRef);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface _DPageWrapCtrl wrapper method implementations
//

#pragma implementation_key(2202)
inline unsigned long Outlook::_DPageWrapCtrl::GetBackColor ( ) {
    unsigned long _result;
    _com_dispatch_method(this, 0xfa5a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2203)
inline void Outlook::_DPageWrapCtrl::PutBackColor ( unsigned long _arg1 ) {
    _com_dispatch_method(this, 0xfa5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// interface _IInspectorCtrl wrapper method implementations
//

#pragma implementation_key(2204)
inline _bstr_t Outlook::_IInspectorCtrl::GetURL ( ) {
    BSTR _result;
    HRESULT _hr = get_URL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2205)
inline void Outlook::_IInspectorCtrl::PutURL ( _bstr_t ppwzURL ) {
    HRESULT _hr = put_URL(ppwzURL);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2206)
inline IDispatchPtr Outlook::_IInspectorCtrl::GetItem ( ) {
    IDispatch * _result;
    HRESULT _hr = get_Item(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2207)
inline HRESULT Outlook::_IInspectorCtrl::OnItemChange ( IDispatch * pdispItem ) {
    HRESULT _hr = raw_OnItemChange(pdispItem);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface _DInspectorCtrl wrapper method implementations
//

#pragma implementation_key(2208)
inline _bstr_t Outlook::_DInspectorCtrl::GetURL ( ) {
    BSTR _result;
    _com_dispatch_method(this, 0xfa84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2209)
inline void Outlook::_DInspectorCtrl::PutURL ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xfa84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2210)
inline IDispatchPtr Outlook::_DInspectorCtrl::GetItem ( ) {
    IDispatch * _result;
    _com_dispatch_method(this, 0xfa86, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2211)
inline HRESULT Outlook::_DInspectorCtrl::OnItemChange ( IDispatch * pdispItem ) {
    return _com_dispatch_method(this, 0xfa89, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pdispItem);
}

//
// dispinterface DDataSourceObject wrapper method implementations
//

#pragma implementation_key(2212)
inline IDispatchPtr Outlook::DDataSourceObject::GetOutlookItem ( ) {
    IDispatch * _result;
    _com_dispatch_propget(this, 0xfa60, VT_DISPATCH, (void*)&_result);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2213)
inline void Outlook::DDataSourceObject::PutOutlookItem ( IDispatch * _val ) {
    _com_dispatch_propput(this, 0xfa60, VT_DISPATCH, _val);
}
